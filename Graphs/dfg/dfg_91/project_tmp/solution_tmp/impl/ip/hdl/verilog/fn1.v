// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.221000,HLS_SYN_LAT=126,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3939,HLS_SYN_LUT=3055,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7_address0,
        p_7_ce0,
        p_7_q0,
        p_9_address0,
        p_9_ce0,
        p_9_q0,
        p_11_address0,
        p_11_ce0,
        p_11_q0,
        p_13,
        ap_return
);

parameter    ap_ST_fsm_state1 = 127'd1;
parameter    ap_ST_fsm_state2 = 127'd2;
parameter    ap_ST_fsm_state3 = 127'd4;
parameter    ap_ST_fsm_state4 = 127'd8;
parameter    ap_ST_fsm_state5 = 127'd16;
parameter    ap_ST_fsm_state6 = 127'd32;
parameter    ap_ST_fsm_state7 = 127'd64;
parameter    ap_ST_fsm_state8 = 127'd128;
parameter    ap_ST_fsm_state9 = 127'd256;
parameter    ap_ST_fsm_state10 = 127'd512;
parameter    ap_ST_fsm_state11 = 127'd1024;
parameter    ap_ST_fsm_state12 = 127'd2048;
parameter    ap_ST_fsm_state13 = 127'd4096;
parameter    ap_ST_fsm_state14 = 127'd8192;
parameter    ap_ST_fsm_state15 = 127'd16384;
parameter    ap_ST_fsm_state16 = 127'd32768;
parameter    ap_ST_fsm_state17 = 127'd65536;
parameter    ap_ST_fsm_state18 = 127'd131072;
parameter    ap_ST_fsm_state19 = 127'd262144;
parameter    ap_ST_fsm_state20 = 127'd524288;
parameter    ap_ST_fsm_state21 = 127'd1048576;
parameter    ap_ST_fsm_state22 = 127'd2097152;
parameter    ap_ST_fsm_state23 = 127'd4194304;
parameter    ap_ST_fsm_state24 = 127'd8388608;
parameter    ap_ST_fsm_state25 = 127'd16777216;
parameter    ap_ST_fsm_state26 = 127'd33554432;
parameter    ap_ST_fsm_state27 = 127'd67108864;
parameter    ap_ST_fsm_state28 = 127'd134217728;
parameter    ap_ST_fsm_state29 = 127'd268435456;
parameter    ap_ST_fsm_state30 = 127'd536870912;
parameter    ap_ST_fsm_state31 = 127'd1073741824;
parameter    ap_ST_fsm_state32 = 127'd2147483648;
parameter    ap_ST_fsm_state33 = 127'd4294967296;
parameter    ap_ST_fsm_state34 = 127'd8589934592;
parameter    ap_ST_fsm_state35 = 127'd17179869184;
parameter    ap_ST_fsm_state36 = 127'd34359738368;
parameter    ap_ST_fsm_state37 = 127'd68719476736;
parameter    ap_ST_fsm_state38 = 127'd137438953472;
parameter    ap_ST_fsm_state39 = 127'd274877906944;
parameter    ap_ST_fsm_state40 = 127'd549755813888;
parameter    ap_ST_fsm_state41 = 127'd1099511627776;
parameter    ap_ST_fsm_state42 = 127'd2199023255552;
parameter    ap_ST_fsm_state43 = 127'd4398046511104;
parameter    ap_ST_fsm_state44 = 127'd8796093022208;
parameter    ap_ST_fsm_state45 = 127'd17592186044416;
parameter    ap_ST_fsm_state46 = 127'd35184372088832;
parameter    ap_ST_fsm_state47 = 127'd70368744177664;
parameter    ap_ST_fsm_state48 = 127'd140737488355328;
parameter    ap_ST_fsm_state49 = 127'd281474976710656;
parameter    ap_ST_fsm_state50 = 127'd562949953421312;
parameter    ap_ST_fsm_state51 = 127'd1125899906842624;
parameter    ap_ST_fsm_state52 = 127'd2251799813685248;
parameter    ap_ST_fsm_state53 = 127'd4503599627370496;
parameter    ap_ST_fsm_state54 = 127'd9007199254740992;
parameter    ap_ST_fsm_state55 = 127'd18014398509481984;
parameter    ap_ST_fsm_state56 = 127'd36028797018963968;
parameter    ap_ST_fsm_state57 = 127'd72057594037927936;
parameter    ap_ST_fsm_state58 = 127'd144115188075855872;
parameter    ap_ST_fsm_state59 = 127'd288230376151711744;
parameter    ap_ST_fsm_state60 = 127'd576460752303423488;
parameter    ap_ST_fsm_state61 = 127'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 127'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 127'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 127'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 127'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 127'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 127'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 127'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 127'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 127'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 127'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 127'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 127'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 127'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 127'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 127'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 127'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 127'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 127'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 127'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 127'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 127'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 127'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 127'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 127'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 127'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 127'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 127'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 127'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 127'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 127'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 127'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 127'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 127'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 127'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 127'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 127'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 127'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 127'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 127'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 127'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 127'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 127'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 127'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 127'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 127'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 127'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 127'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 127'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 127'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 127'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 127'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 127'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 127'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 127'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 127'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 127'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 127'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 127'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 127'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 127'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 127'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 127'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 127'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 127'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 127'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 127'd85070591730234615865843651857942052864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p;
output  [4:0] p_7_address0;
output   p_7_ce0;
input  [63:0] p_7_q0;
output  [1:0] p_9_address0;
output   p_9_ce0;
input  [15:0] p_9_q0;
output  [2:0] p_11_address0;
output   p_11_ce0;
input  [7:0] p_11_q0;
input  [63:0] p_13;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_7_ce0;
reg[1:0] p_9_address0;
reg p_9_ce0;
reg[2:0] p_11_address0;
reg p_11_ce0;

(* fsm_encoding = "none" *) reg   [126:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [15:0] reg_154;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state16;
reg   [7:0] reg_158;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state23;
wire   [15:0] trunc_ln19_fu_202_p1;
reg   [15:0] trunc_ln19_reg_464;
wire   [15:0] v_5_fu_214_p2;
reg   [15:0] v_5_reg_479;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire  signed [30:0] grp_fu_416_p2;
reg  signed [30:0] mul_ln22_reg_499;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state33;
wire   [63:0] grp_fu_301_p2;
reg   [63:0] mul_ln22_1_reg_514;
wire    ap_CS_fsm_state35;
reg   [63:0] p_7_load_reg_529;
wire    ap_CS_fsm_state36;
wire   [16:0] grp_fu_196_p2;
reg   [16:0] sdiv_ln27_reg_534;
wire    ap_CS_fsm_state37;
wire   [14:0] grp_fu_292_p2;
reg   [14:0] urem_ln24_reg_544;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state102;
wire   [63:0] grp_fu_338_p2;
reg   [63:0] sdiv_ln26_reg_554;
wire    ap_CS_fsm_state104;
wire   [16:0] sub_ln24_fu_360_p2;
reg   [16:0] sub_ln24_reg_559;
wire    ap_CS_fsm_state105;
wire   [63:0] add_ln28_1_fu_383_p2;
reg   [63:0] add_ln28_1_reg_564;
wire    ap_CS_fsm_state106;
wire   [16:0] zext_ln19_fu_162_p1;
wire   [16:0] grp_fu_172_p1;
wire  signed [15:0] zext_ln27_fu_182_p0;
wire  signed [8:0] sext_ln27_fu_178_p1;
wire  signed [8:0] add_ln27_fu_186_p2;
wire   [16:0] grp_fu_196_p0;
wire  signed [63:0] trunc_ln19_fu_202_p0;
wire   [13:0] grp_fu_172_p2;
wire  signed [63:0] trunc_ln19_2_fu_210_p0;
wire  signed [13:0] grp_fu_406_p2;
wire   [1:0] tmp_fu_219_p4;
wire   [0:0] tmp_1_fu_228_p3;
wire   [2:0] tmp_2_fu_235_p4;
wire   [0:0] trunc_ln19_3_fu_244_p1;
wire   [13:0] result_fu_247_p8;
wire   [16:0] zext_ln22_fu_265_p1;
wire   [16:0] zext_ln22_1_fu_268_p1;
wire  signed [16:0] sub_ln22_fu_272_p2;
wire   [15:0] grp_fu_292_p0;
wire   [16:0] grp_fu_292_p1;
wire  signed [8:0] sext_ln23_fu_306_p1;
wire   [8:0] sub_ln23_fu_310_p2;
wire   [9:0] grp_fu_320_p1;
wire  signed [17:0] sext_ln28_fu_325_p1;
wire  signed [17:0] add_ln28_fu_328_p2;
wire   [15:0] grp_fu_320_p2;
wire   [0:0] icmp_ln24_fu_347_p2;
wire  signed [15:0] grp_fu_422_p2;
wire   [16:0] zext_ln24_fu_353_p1;
wire  signed [16:0] sext_ln24_fu_357_p1;
wire   [14:0] trunc_ln26_fu_366_p1;
wire   [15:0] zext_ln26_fu_369_p1;
wire   [15:0] sub_ln25_fu_373_p2;
wire  signed [63:0] sext_ln25_fu_379_p1;
wire   [16:0] xor_ln24_fu_388_p2;
wire  signed [17:0] grp_fu_397_p0;
wire   [15:0] grp_fu_397_p2;
wire    ap_CS_fsm_state127;
wire  signed [13:0] grp_fu_406_p0;
wire  signed [13:0] grp_fu_406_p1;
wire   [13:0] grp_fu_416_p1;
wire  signed [15:0] grp_fu_422_p1;
reg    grp_fu_172_ap_start;
wire    grp_fu_172_ap_done;
reg    grp_fu_196_ap_start;
wire    grp_fu_196_ap_done;
reg    grp_fu_292_ap_start;
wire    grp_fu_292_ap_done;
reg    grp_fu_320_ap_start;
wire    grp_fu_320_ap_done;
reg    grp_fu_338_ap_start;
wire    grp_fu_338_ap_done;
reg    grp_fu_397_ap_start;
wire    grp_fu_397_ap_done;
reg   [126:0] ap_NS_fsm;
wire   [63:0] grp_fu_320_p10;
wire   [30:0] grp_fu_416_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 127'd1;
end

fn1_sdiv_17s_17ns_14_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 14 ))
sdiv_17s_17ns_14_21_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_172_ap_start),
    .done(grp_fu_172_ap_done),
    .din0(17'd101857),
    .din1(grp_fu_172_p1),
    .ce(1'b1),
    .dout(grp_fu_172_p2)
);

fn1_sdiv_17ns_9s_17_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
sdiv_17ns_9s_17_21_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_196_ap_start),
    .done(grp_fu_196_ap_done),
    .din0(grp_fu_196_p0),
    .din1(add_ln27_fu_186_p2),
    .ce(1'b1),
    .dout(grp_fu_196_p2)
);

fn1_urem_16ns_17ns_15_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 15 ))
urem_16ns_17ns_15_20_seq_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_292_ap_start),
    .done(grp_fu_292_ap_done),
    .din0(grp_fu_292_p0),
    .din1(grp_fu_292_p1),
    .ce(1'b1),
    .dout(grp_fu_292_p2)
);

fn1_mul_31s_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_31s_64s_64_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln22_reg_499),
    .din1(p_13),
    .ce(1'b1),
    .dout(grp_fu_301_p2)
);

fn1_sdiv_64ns_10ns_16_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
sdiv_64ns_10ns_16_68_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_320_ap_start),
    .done(grp_fu_320_ap_done),
    .din0(mul_ln22_1_reg_514),
    .din1(grp_fu_320_p1),
    .ce(1'b1),
    .dout(grp_fu_320_p2)
);

fn1_sdiv_64ns_18s_64_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 64 ))
sdiv_64ns_18s_64_68_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_338_ap_start),
    .done(grp_fu_338_ap_done),
    .din0(p_7_load_reg_529),
    .din1(add_ln28_fu_328_p2),
    .ce(1'b1),
    .dout(grp_fu_338_p2)
);

fn1_sdiv_18s_64ns_16_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 16 ))
sdiv_18s_64ns_16_22_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_397_ap_start),
    .done(grp_fu_397_ap_done),
    .din0(grp_fu_397_p0),
    .din1(add_ln28_1_reg_564),
    .ce(1'b1),
    .dout(grp_fu_397_p2)
);

fn1_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_406_p0),
    .din1(grp_fu_406_p1),
    .ce(1'b1),
    .dout(grp_fu_406_p2)
);

fn1_mul_mul_17s_14ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 31 ))
mul_mul_17s_14ns_31_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln22_fu_272_p2),
    .din1(grp_fu_416_p1),
    .ce(1'b1),
    .dout(grp_fu_416_p2)
);

fn1_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_154),
    .din1(grp_fu_422_p1),
    .ce(1'b1),
    .dout(grp_fu_422_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        add_ln28_1_reg_564 <= add_ln28_1_fu_383_p2;
        sub_ln24_reg_559 <= sub_ln24_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        mul_ln22_1_reg_514 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        mul_ln22_reg_499 <= grp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p_7_load_reg_529 <= p_7_q0;
        sdiv_ln27_reg_534 <= grp_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_154 <= p_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_158 <= p_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        sdiv_ln26_reg_554 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        trunc_ln19_reg_464 <= trunc_ln19_fu_202_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        urem_ln24_reg_544 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        v_5_reg_479 <= v_5_fu_214_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_172_ap_start = 1'b1;
    end else begin
        grp_fu_172_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_196_ap_start = 1'b1;
    end else begin
        grp_fu_196_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_292_ap_start = 1'b1;
    end else begin
        grp_fu_292_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_320_ap_start = 1'b1;
    end else begin
        grp_fu_320_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_338_ap_start = 1'b1;
    end else begin
        grp_fu_338_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_397_ap_start = 1'b1;
    end else begin
        grp_fu_397_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        p_11_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_11_address0 = 64'd3;
    end else begin
        p_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state14))) begin
        p_11_ce0 = 1'b1;
    end else begin
        p_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_7_ce0 = 1'b1;
    end else begin
        p_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_9_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_9_address0 = 64'd0;
    end else begin
        p_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        p_9_ce0 = 1'b1;
    end else begin
        p_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_186_p2 = ($signed(sext_ln27_fu_178_p1) + $signed(9'd44));

assign add_ln28_1_fu_383_p2 = ($signed(sdiv_ln26_reg_554) + $signed(sext_ln25_fu_379_p1));

assign add_ln28_fu_328_p2 = ($signed(sext_ln28_fu_325_p1) + $signed(18'd149));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_return = grp_fu_397_p2[15:0];

assign grp_fu_172_p1 = (zext_ln19_fu_162_p1 + 17'd766);

assign grp_fu_196_p0 = $unsigned(zext_ln27_fu_182_p0);

assign grp_fu_292_p0 = 17'd17611;

assign grp_fu_292_p1 = (zext_ln22_fu_265_p1 + 17'd806);

assign grp_fu_320_p1 = grp_fu_320_p10;

assign grp_fu_320_p10 = sub_ln23_fu_310_p2;

assign grp_fu_397_p0 = $signed(xor_ln24_fu_388_p2);

assign grp_fu_406_p0 = grp_fu_172_p2[13:0];

assign grp_fu_406_p1 = trunc_ln19_2_fu_210_p0[13:0];

assign grp_fu_416_p1 = grp_fu_416_p10;

assign grp_fu_416_p10 = result_fu_247_p8;

assign grp_fu_422_p1 = grp_fu_320_p2[15:0];

assign icmp_ln24_fu_347_p2 = ((p == 32'd0) ? 1'b1 : 1'b0);

assign p_7_address0 = 64'd12;

assign result_fu_247_p8 = {{{{{{{tmp_fu_219_p4}, {1'd0}}, {tmp_1_fu_228_p3}}, {5'd0}}, {tmp_2_fu_235_p4}}, {1'd0}}, {trunc_ln19_3_fu_244_p1}};

assign sext_ln23_fu_306_p1 = $signed(reg_158);

assign sext_ln24_fu_357_p1 = grp_fu_422_p2;

assign sext_ln25_fu_379_p1 = $signed(sub_ln25_fu_373_p2);

assign sext_ln27_fu_178_p1 = $signed(reg_158);

assign sext_ln28_fu_325_p1 = $signed(sdiv_ln27_reg_534);

assign sub_ln22_fu_272_p2 = (zext_ln22_fu_265_p1 - zext_ln22_1_fu_268_p1);

assign sub_ln23_fu_310_p2 = ($signed(9'd145) - $signed(sext_ln23_fu_306_p1));

assign sub_ln24_fu_360_p2 = ($signed(zext_ln24_fu_353_p1) - $signed(sext_ln24_fu_357_p1));

assign sub_ln25_fu_373_p2 = (16'd318 - zext_ln26_fu_369_p1);

assign tmp_1_fu_228_p3 = grp_fu_406_p2[32'd10];

assign tmp_2_fu_235_p4 = {{grp_fu_406_p2[4:2]}};

assign tmp_fu_219_p4 = {{grp_fu_406_p2[13:12]}};

assign trunc_ln19_2_fu_210_p0 = p_13;

assign trunc_ln19_3_fu_244_p1 = grp_fu_406_p2[0:0];

assign trunc_ln19_fu_202_p0 = p_13;

assign trunc_ln19_fu_202_p1 = trunc_ln19_fu_202_p0[15:0];

assign trunc_ln26_fu_366_p1 = urem_ln24_reg_544[14:0];

assign v_5_fu_214_p2 = (16'd0 - trunc_ln19_reg_464);

assign xor_ln24_fu_388_p2 = (sub_ln24_reg_559 ^ 17'd131071);

assign zext_ln19_fu_162_p1 = $unsigned(reg_154);

assign zext_ln22_1_fu_268_p1 = result_fu_247_p8;

assign zext_ln22_fu_265_p1 = v_5_reg_479;

assign zext_ln24_fu_353_p1 = icmp_ln24_fu_347_p2;

assign zext_ln26_fu_369_p1 = trunc_ln26_fu_366_p1;

assign zext_ln27_fu_182_p0 = p_9_q0;

endmodule //fn1
