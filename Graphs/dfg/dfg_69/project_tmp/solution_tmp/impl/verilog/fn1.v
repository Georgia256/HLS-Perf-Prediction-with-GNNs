// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.978000,HLS_SYN_LAT=118,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3389,HLS_SYN_LUT=5346,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_address0,
        p_ce0,
        p_q0,
        p_4,
        p_6,
        p_8,
        p_13_address0,
        p_13_ce0,
        p_13_q0,
        p_13_address1,
        p_13_ce1,
        p_13_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 119'd1;
parameter    ap_ST_fsm_state2 = 119'd2;
parameter    ap_ST_fsm_state3 = 119'd4;
parameter    ap_ST_fsm_state4 = 119'd8;
parameter    ap_ST_fsm_state5 = 119'd16;
parameter    ap_ST_fsm_state6 = 119'd32;
parameter    ap_ST_fsm_state7 = 119'd64;
parameter    ap_ST_fsm_state8 = 119'd128;
parameter    ap_ST_fsm_state9 = 119'd256;
parameter    ap_ST_fsm_state10 = 119'd512;
parameter    ap_ST_fsm_state11 = 119'd1024;
parameter    ap_ST_fsm_state12 = 119'd2048;
parameter    ap_ST_fsm_state13 = 119'd4096;
parameter    ap_ST_fsm_state14 = 119'd8192;
parameter    ap_ST_fsm_state15 = 119'd16384;
parameter    ap_ST_fsm_state16 = 119'd32768;
parameter    ap_ST_fsm_state17 = 119'd65536;
parameter    ap_ST_fsm_state18 = 119'd131072;
parameter    ap_ST_fsm_state19 = 119'd262144;
parameter    ap_ST_fsm_state20 = 119'd524288;
parameter    ap_ST_fsm_state21 = 119'd1048576;
parameter    ap_ST_fsm_state22 = 119'd2097152;
parameter    ap_ST_fsm_state23 = 119'd4194304;
parameter    ap_ST_fsm_state24 = 119'd8388608;
parameter    ap_ST_fsm_state25 = 119'd16777216;
parameter    ap_ST_fsm_state26 = 119'd33554432;
parameter    ap_ST_fsm_state27 = 119'd67108864;
parameter    ap_ST_fsm_state28 = 119'd134217728;
parameter    ap_ST_fsm_state29 = 119'd268435456;
parameter    ap_ST_fsm_state30 = 119'd536870912;
parameter    ap_ST_fsm_state31 = 119'd1073741824;
parameter    ap_ST_fsm_state32 = 119'd2147483648;
parameter    ap_ST_fsm_state33 = 119'd4294967296;
parameter    ap_ST_fsm_state34 = 119'd8589934592;
parameter    ap_ST_fsm_state35 = 119'd17179869184;
parameter    ap_ST_fsm_state36 = 119'd34359738368;
parameter    ap_ST_fsm_state37 = 119'd68719476736;
parameter    ap_ST_fsm_state38 = 119'd137438953472;
parameter    ap_ST_fsm_state39 = 119'd274877906944;
parameter    ap_ST_fsm_state40 = 119'd549755813888;
parameter    ap_ST_fsm_state41 = 119'd1099511627776;
parameter    ap_ST_fsm_state42 = 119'd2199023255552;
parameter    ap_ST_fsm_state43 = 119'd4398046511104;
parameter    ap_ST_fsm_state44 = 119'd8796093022208;
parameter    ap_ST_fsm_state45 = 119'd17592186044416;
parameter    ap_ST_fsm_state46 = 119'd35184372088832;
parameter    ap_ST_fsm_state47 = 119'd70368744177664;
parameter    ap_ST_fsm_state48 = 119'd140737488355328;
parameter    ap_ST_fsm_state49 = 119'd281474976710656;
parameter    ap_ST_fsm_state50 = 119'd562949953421312;
parameter    ap_ST_fsm_state51 = 119'd1125899906842624;
parameter    ap_ST_fsm_state52 = 119'd2251799813685248;
parameter    ap_ST_fsm_state53 = 119'd4503599627370496;
parameter    ap_ST_fsm_state54 = 119'd9007199254740992;
parameter    ap_ST_fsm_state55 = 119'd18014398509481984;
parameter    ap_ST_fsm_state56 = 119'd36028797018963968;
parameter    ap_ST_fsm_state57 = 119'd72057594037927936;
parameter    ap_ST_fsm_state58 = 119'd144115188075855872;
parameter    ap_ST_fsm_state59 = 119'd288230376151711744;
parameter    ap_ST_fsm_state60 = 119'd576460752303423488;
parameter    ap_ST_fsm_state61 = 119'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 119'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 119'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 119'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 119'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 119'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 119'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 119'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 119'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 119'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 119'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 119'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 119'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 119'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 119'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 119'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 119'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 119'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 119'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 119'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 119'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 119'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 119'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 119'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 119'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 119'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 119'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 119'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 119'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 119'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 119'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 119'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 119'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 119'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 119'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 119'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 119'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 119'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 119'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 119'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 119'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 119'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 119'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 119'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 119'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 119'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 119'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 119'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 119'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 119'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 119'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 119'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 119'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 119'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 119'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 119'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 119'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 119'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 119'd332306998946228968225951765070086144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] p_address0;
output   p_ce0;
input  [63:0] p_q0;
input  [15:0] p_4;
input  [63:0] p_6;
input  [7:0] p_8;
output  [3:0] p_13_address0;
output   p_13_ce0;
input  [15:0] p_13_q0;
output  [3:0] p_13_address1;
output   p_13_ce1;
input  [15:0] p_13_q1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_ce0;
reg p_13_ce0;
reg p_13_ce1;

(* fsm_encoding = "none" *) reg   [118:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln31_1_fu_237_p2;
reg   [0:0] icmp_ln31_1_reg_850;
reg   [10:0] tmp_16_reg_855;
wire    ap_CS_fsm_state6;
wire   [51:0] tmp_17_fu_257_p1;
reg   [51:0] tmp_17_reg_861;
reg   [0:0] tmp_2_reg_866;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_3_reg_871;
reg   [0:0] tmp_4_reg_876;
reg   [1:0] tmp_9_reg_881;
wire   [0:0] trunc_ln22_fu_392_p1;
reg   [0:0] trunc_ln22_reg_886;
wire   [16:0] xor_ln22_fu_417_p2;
reg  signed [16:0] xor_ln22_reg_891;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [49:0] grp_fu_426_p2;
reg   [49:0] mul_ln21_reg_901;
wire    ap_CS_fsm_state10;
wire   [63:0] v_15_fu_435_p2;
reg   [63:0] v_15_reg_906;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_223_p1;
reg   [31:0] conv_reg_911;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_217_p2;
reg   [31:0] mul_reg_916;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire   [16:0] sub_ln26_fu_449_p2;
reg  signed [16:0] sub_ln26_reg_931;
wire    ap_CS_fsm_state25;
reg   [7:0] tmp_18_reg_936;
wire   [22:0] tmp_19_fu_469_p1;
reg   [22:0] tmp_19_reg_942;
wire    ap_CS_fsm_state26;
wire   [0:0] isNeg_1_fu_491_p3;
reg   [0:0] isNeg_1_reg_952;
wire   [8:0] ush_1_fu_508_p3;
reg   [8:0] ush_1_reg_957;
wire   [47:0] grp_fu_476_p2;
reg   [47:0] mul_ln25_reg_962;
wire    ap_CS_fsm_state27;
wire   [63:0] add_ln29_fu_577_p2;
reg   [63:0] add_ln29_reg_967;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state89;
wire   [38:0] grp_fu_595_p2;
reg   [38:0] mul_ln23_reg_982;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire   [128:0] grp_fu_608_p2;
reg   [128:0] mul_ln23_1_reg_992;
wire    ap_CS_fsm_state95;
wire   [63:0] grp_fu_586_p2;
reg   [63:0] udiv_ln26_reg_997;
wire   [63:0] sub_ln24_fu_633_p2;
reg   [63:0] sub_ln24_reg_1002;
wire    ap_CS_fsm_state96;
wire   [63:0] grp_fu_226_p1;
reg   [63:0] result_5_reg_1007;
wire    ap_CS_fsm_state102;
reg   [0:0] p_Result_s_reg_1012;
wire    ap_CS_fsm_state103;
wire   [31:0] val_1_fu_755_p3;
reg   [31:0] val_1_reg_1017;
wire  signed [31:0] result_V_fu_768_p3;
reg  signed [31:0] result_V_reg_1023;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
wire   [0:0] icmp_ln31_fu_779_p2;
reg   [0:0] icmp_ln31_reg_1034;
wire    ap_CS_fsm_state106;
wire   [31:0] grp_fu_774_p2;
reg   [31:0] mul_ln32_reg_1039;
wire    ap_CS_fsm_state107;
wire   [3:0] add_ln32_1_fu_835_p2;
reg   [3:0] add_ln32_1_reg_1054;
wire    ap_CS_fsm_state113;
wire  signed [63:0] sext_ln31_fu_841_p1;
wire    ap_CS_fsm_state114;
reg   [31:0] grp_fu_217_p0;
reg   [31:0] grp_fu_217_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state12;
reg   [63:0] grp_fu_226_p0;
wire    ap_CS_fsm_state97;
wire  signed [31:0] grp_fu_229_p0;
wire  signed [15:0] sext_ln20_fu_232_p0;
wire  signed [15:0] icmp_ln31_1_fu_237_p0;
wire   [63:0] grp_fu_229_p1;
wire   [63:0] data_V_fu_243_p1;
wire   [53:0] mantissa_fu_261_p4;
wire   [11:0] zext_ln510_fu_274_p1;
wire   [11:0] add_ln510_fu_277_p2;
wire   [10:0] sub_ln1311_fu_291_p2;
wire   [0:0] isNeg_fu_283_p3;
wire  signed [11:0] sext_ln1311_fu_296_p1;
wire   [11:0] ush_fu_300_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_308_p1;
wire   [120:0] zext_ln68_fu_270_p1;
wire   [120:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_312_p1;
wire   [120:0] r_V_fu_316_p2;
wire   [0:0] tmp_fu_328_p3;
wire   [120:0] r_V_1_fu_322_p2;
wire   [15:0] zext_ln662_fu_336_p1;
wire   [15:0] tmp_1_fu_340_p4;
wire   [15:0] select_ln1312_fu_350_p3;
wire   [15:0] and_ln_fu_396_p10;
wire   [16:0] zext_ln22_fu_413_p1;
wire   [32:0] grp_fu_426_p1;
wire  signed [63:0] sext_ln21_1_fu_432_p1;
wire   [16:0] zext_ln26_1_fu_441_p1;
wire   [16:0] zext_ln26_2_fu_445_p1;
wire   [31:0] data_V_1_fu_455_p1;
wire  signed [30:0] grp_fu_476_p1;
wire   [8:0] zext_ln341_fu_482_p1;
wire   [8:0] add_ln341_fu_485_p2;
wire   [7:0] sub_ln1311_1_fu_499_p2;
wire  signed [8:0] sext_ln1311_1_fu_504_p1;
wire   [24:0] mantissa_1_fu_516_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i27_cast_cast_cast_fu_529_p1;
wire   [110:0] zext_ln68_1_fu_525_p1;
wire   [110:0] sh_prom_i_i_i_i_i27_cast_cast_cast_cast_fu_532_p1;
wire   [110:0] r_V_2_fu_536_p2;
wire   [0:0] tmp_10_fu_548_p3;
wire   [110:0] r_V_3_fu_542_p2;
wire   [63:0] zext_ln662_1_fu_556_p1;
wire   [63:0] tmp_s_fu_560_p4;
wire   [63:0] val_fu_570_p3;
wire  signed [63:0] grp_fu_586_p0;
wire   [30:0] grp_fu_595_p1;
wire  signed [63:0] sext_ln23_1_fu_601_p1;
wire   [63:0] grp_fu_608_p0;
wire   [65:0] grp_fu_608_p1;
wire   [51:0] trunc_ln_fu_614_p4;
wire   [51:0] xor_ln24_fu_623_p2;
wire   [63:0] zext_ln26_fu_629_p1;
wire   [63:0] data_V_2_fu_638_p1;
wire   [51:0] tmp_21_fu_659_p1;
wire   [53:0] mantissa_2_fu_663_p4;
wire   [10:0] tmp_20_fu_649_p4;
wire   [11:0] zext_ln510_1_fu_677_p1;
wire   [11:0] add_ln510_1_fu_681_p2;
wire   [10:0] sub_ln1311_2_fu_695_p2;
wire   [0:0] isNeg_2_fu_687_p3;
wire  signed [11:0] sext_ln1311_2_fu_701_p1;
wire   [11:0] ush_2_fu_705_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i52_cast_cast_cast_fu_713_p1;
wire   [136:0] zext_ln15_fu_673_p1;
wire   [136:0] sh_prom_i_i_i_i_i52_cast_cast_cast_cast_fu_717_p1;
wire   [136:0] r_V_4_fu_721_p2;
wire   [0:0] tmp_15_fu_733_p3;
wire   [136:0] r_V_5_fu_727_p2;
wire   [31:0] zext_ln662_2_fu_741_p1;
wire   [31:0] tmp_6_fu_745_p4;
wire   [31:0] result_V_2_fu_763_p2;
wire   [16:0] grp_fu_774_p1;
wire   [31:0] and_ln32_fu_791_p2;
wire   [1:0] zext_ln55_fu_788_p1;
wire   [1:0] zext_ln31_fu_785_p1;
wire   [1:0] add_ln31_fu_801_p2;
wire   [2:0] grp_fu_811_p0;
wire   [31:0] grp_fu_811_p1;
wire   [2:0] grp_fu_811_p2;
wire   [2:0] trunc_ln32_fu_817_p1;
wire   [0:0] icmp_ln32_fu_825_p2;
wire  signed [3:0] sext_ln32_fu_821_p1;
wire   [3:0] zext_ln32_fu_831_p1;
reg    grp_fu_586_ap_start;
wire    grp_fu_586_ap_done;
reg    grp_fu_811_ap_start;
wire    grp_fu_811_ap_done;
wire    ap_CS_fsm_state119;
reg   [118:0] ap_NS_fsm;
wire   [128:0] grp_fu_608_p00;
wire   [31:0] grp_fu_811_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 119'd1;
end

fn1_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .din1(grp_fu_217_p1),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

fn1_sitofp_64ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_15_reg_906),
    .ce(1'b1),
    .dout(grp_fu_223_p1)
);

fn1_uitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_226_p0),
    .ce(1'b1),
    .dout(grp_fu_226_p1)
);

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_229_p0),
    .ce(1'b1),
    .dout(grp_fu_229_p1)
);

fn1_mul_17s_33ns_50_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 50 ))
mul_17s_33ns_50_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln22_reg_891),
    .din1(grp_fu_426_p1),
    .ce(1'b1),
    .dout(grp_fu_426_p2)
);

fn1_mul_17s_31s_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 48 ))
mul_17s_31s_48_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln26_reg_931),
    .din1(grp_fu_476_p1),
    .ce(1'b1),
    .dout(grp_fu_476_p2)
);

fn1_udiv_64s_64ns_64_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_64s_64ns_64_68_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_586_ap_start),
    .done(grp_fu_586_ap_done),
    .din0(grp_fu_586_p0),
    .din1(add_ln29_reg_967),
    .ce(1'b1),
    .dout(grp_fu_586_p2)
);

fn1_mul_8s_31ns_39_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 39 ))
mul_8s_31ns_39_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_8),
    .din1(grp_fu_595_p1),
    .ce(1'b1),
    .dout(grp_fu_595_p2)
);

fn1_mul_64ns_66ns_129_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_608_p0),
    .din1(grp_fu_608_p1),
    .ce(1'b1),
    .dout(grp_fu_608_p2)
);

fn1_mul_32s_17ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
mul_32s_17ns_32_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(result_V_reg_1023),
    .din1(grp_fu_774_p1),
    .ce(1'b1),
    .dout(grp_fu_774_p2)
);

fn1_sdiv_3ns_32ns_3_7_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 3 ))
sdiv_3ns_32ns_3_7_seq_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_811_ap_start),
    .done(grp_fu_811_ap_done),
    .din0(grp_fu_811_p0),
    .din1(grp_fu_811_p1),
    .ce(1'b1),
    .dout(grp_fu_811_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln29_reg_967 <= add_ln29_fu_577_p2;
        mul_ln25_reg_962 <= grp_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        add_ln32_1_reg_1054 <= add_ln32_1_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv_reg_911 <= grp_fu_223_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln31_1_reg_850 <= icmp_ln31_1_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        icmp_ln31_reg_1034 <= icmp_ln31_fu_779_p2;
        mul_ln32_reg_1039 <= grp_fu_774_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        isNeg_1_reg_952 <= add_ln341_fu_485_p2[32'd8];
        ush_1_reg_957 <= ush_1_fu_508_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mul_ln21_reg_901 <= grp_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        mul_ln23_1_reg_992 <= grp_fu_608_p2;
        udiv_ln26_reg_997 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        mul_ln23_reg_982 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        mul_reg_916 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        p_Result_s_reg_1012 <= data_V_2_fu_638_p1[32'd63];
        val_1_reg_1017 <= val_1_fu_755_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        result_5_reg_1007 <= grp_fu_226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        result_V_reg_1023 <= result_V_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        sub_ln24_reg_1002 <= sub_ln24_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        sub_ln26_reg_931 <= sub_ln26_fu_449_p2;
        tmp_18_reg_936 <= {{data_V_1_fu_455_p1[30:23]}};
        tmp_19_reg_942 <= tmp_19_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_16_reg_855 <= {{data_V_fu_243_p1[62:52]}};
        tmp_17_reg_861 <= tmp_17_fu_257_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_2_reg_866 <= select_ln1312_fu_350_p3[32'd15];
        tmp_3_reg_871 <= select_ln1312_fu_350_p3[32'd12];
        tmp_4_reg_876 <= select_ln1312_fu_350_p3[32'd10];
        tmp_9_reg_881 <= {{select_ln1312_fu_350_p3[4:3]}};
        trunc_ln22_reg_886 <= trunc_ln22_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v_15_reg_906 <= v_15_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        xor_ln22_reg_891 <= xor_ln22_fu_417_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_217_p0 = mul_reg_916;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_217_p0 = conv_reg_911;
    end else begin
        grp_fu_217_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_217_p1 = 32'd1186587648;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_217_p1 = 32'd3295939546;
    end else begin
        grp_fu_217_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_226_p0 = sext_ln31_fu_841_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_fu_226_p0 = sub_ln24_reg_1002;
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_586_ap_start = 1'b1;
    end else begin
        grp_fu_586_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_811_ap_start = 1'b1;
    end else begin
        grp_fu_811_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_13_ce0 = 1'b1;
    end else begin
        p_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_13_ce1 = 1'b1;
    end else begin
        p_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        p_ce0 = 1'b1;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_577_p2 = (val_fu_570_p3 + 64'd1016);

assign add_ln31_fu_801_p2 = (zext_ln55_fu_788_p1 + zext_ln31_fu_785_p1);

assign add_ln32_1_fu_835_p2 = ($signed(sext_ln32_fu_821_p1) + $signed(zext_ln32_fu_831_p1));

assign add_ln341_fu_485_p2 = ($signed(zext_ln341_fu_482_p1) + $signed(9'd385));

assign add_ln510_1_fu_681_p2 = ($signed(zext_ln510_1_fu_677_p1) + $signed(12'd3073));

assign add_ln510_fu_277_p2 = ($signed(zext_ln510_fu_274_p1) + $signed(12'd3073));

assign and_ln32_fu_791_p2 = (result_V_reg_1023 & mul_ln32_reg_1039);

assign and_ln_fu_396_p10 = {{{{{{{{{tmp_2_reg_866}, {2'd0}}, {tmp_3_reg_871}}, {1'd0}}, {tmp_4_reg_876}}, {5'd0}}, {tmp_9_reg_881}}, {2'd0}}, {trunc_ln22_reg_886}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_return = grp_fu_226_p1;

assign data_V_1_fu_455_p1 = grp_fu_217_p2;

assign data_V_2_fu_638_p1 = result_5_reg_1007;

assign data_V_fu_243_p1 = grp_fu_229_p1;

assign grp_fu_229_p0 = sext_ln20_fu_232_p0;

assign grp_fu_426_p1 = 50'd3861203715;

assign grp_fu_476_p1 = 48'd281474159178668;

assign grp_fu_586_p0 = $signed(mul_ln25_reg_962);

assign grp_fu_595_p1 = 39'd1040159068;

assign grp_fu_608_p0 = grp_fu_608_p00;

assign grp_fu_608_p00 = $unsigned(sext_ln23_1_fu_601_p1);

assign grp_fu_608_p1 = 129'd20576760273941809211;

assign grp_fu_774_p1 = 32'd43579;

assign grp_fu_811_p0 = grp_fu_811_p00;

assign grp_fu_811_p00 = add_ln31_fu_801_p2;

assign grp_fu_811_p1 = (and_ln32_fu_791_p2 + 32'd554);

assign icmp_ln31_1_fu_237_p0 = p_4;

assign icmp_ln31_1_fu_237_p2 = ((icmp_ln31_1_fu_237_p0 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_779_p2 = ((p_q0 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_825_p2 = ((p_6 == 64'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_491_p3 = add_ln341_fu_485_p2[32'd8];

assign isNeg_2_fu_687_p3 = add_ln510_1_fu_681_p2[32'd11];

assign isNeg_fu_283_p3 = add_ln510_fu_277_p2[32'd11];

assign mantissa_1_fu_516_p4 = {{{{1'd1}, {tmp_19_reg_942}}}, {1'd0}};

assign mantissa_2_fu_663_p4 = {{{{1'd1}, {tmp_21_fu_659_p1}}}, {1'd0}};

assign mantissa_fu_261_p4 = {{{{1'd1}, {tmp_17_reg_861}}}, {1'd0}};

assign p_13_address0 = 64'd7;

assign p_13_address1 = 64'd4;

assign p_address0 = 64'd2;

assign r_V_1_fu_322_p2 = zext_ln68_fu_270_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_312_p1;

assign r_V_2_fu_536_p2 = zext_ln68_1_fu_525_p1 >> sh_prom_i_i_i_i_i27_cast_cast_cast_cast_fu_532_p1;

assign r_V_3_fu_542_p2 = zext_ln68_1_fu_525_p1 << sh_prom_i_i_i_i_i27_cast_cast_cast_cast_fu_532_p1;

assign r_V_4_fu_721_p2 = zext_ln15_fu_673_p1 >> sh_prom_i_i_i_i_i52_cast_cast_cast_cast_fu_717_p1;

assign r_V_5_fu_727_p2 = zext_ln15_fu_673_p1 << sh_prom_i_i_i_i_i52_cast_cast_cast_cast_fu_717_p1;

assign r_V_fu_316_p2 = zext_ln68_fu_270_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_312_p1;

assign result_V_2_fu_763_p2 = (32'd0 - val_1_reg_1017);

assign result_V_fu_768_p3 = ((p_Result_s_reg_1012[0:0] == 1'b1) ? result_V_2_fu_763_p2 : val_1_reg_1017);

assign select_ln1312_fu_350_p3 = ((isNeg_fu_283_p3[0:0] == 1'b1) ? zext_ln662_fu_336_p1 : tmp_1_fu_340_p4);

assign sext_ln1311_1_fu_504_p1 = $signed(sub_ln1311_1_fu_499_p2);

assign sext_ln1311_2_fu_701_p1 = $signed(sub_ln1311_2_fu_695_p2);

assign sext_ln1311_fu_296_p1 = $signed(sub_ln1311_fu_291_p2);

assign sext_ln20_fu_232_p0 = p_4;

assign sext_ln21_1_fu_432_p1 = $signed(mul_ln21_reg_901);

assign sext_ln23_1_fu_601_p1 = $signed(mul_ln23_reg_982);

assign sext_ln31_fu_841_p1 = $signed(add_ln32_1_reg_1054);

assign sext_ln32_fu_821_p1 = $signed(trunc_ln32_fu_817_p1);

assign sh_prom_i_i_i_i_i27_cast_cast_cast_cast_fu_532_p1 = $unsigned(sh_prom_i_i_i_i_i27_cast_cast_cast_fu_529_p1);

assign sh_prom_i_i_i_i_i27_cast_cast_cast_fu_529_p1 = $signed(ush_1_reg_957);

assign sh_prom_i_i_i_i_i52_cast_cast_cast_cast_fu_717_p1 = $unsigned(sh_prom_i_i_i_i_i52_cast_cast_cast_fu_713_p1);

assign sh_prom_i_i_i_i_i52_cast_cast_cast_fu_713_p1 = $signed(ush_2_fu_705_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_312_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_308_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_308_p1 = $signed(ush_fu_300_p3);

assign sub_ln1311_1_fu_499_p2 = (8'd127 - tmp_18_reg_936);

assign sub_ln1311_2_fu_695_p2 = (11'd1023 - tmp_20_fu_649_p4);

assign sub_ln1311_fu_291_p2 = (11'd1023 - tmp_16_reg_855);

assign sub_ln24_fu_633_p2 = (zext_ln26_fu_629_p1 - udiv_ln26_reg_997);

assign sub_ln26_fu_449_p2 = (zext_ln26_1_fu_441_p1 - zext_ln26_2_fu_445_p1);

assign tmp_10_fu_548_p3 = r_V_2_fu_536_p2[32'd24];

assign tmp_15_fu_733_p3 = r_V_4_fu_721_p2[32'd53];

assign tmp_17_fu_257_p1 = data_V_fu_243_p1[51:0];

assign tmp_19_fu_469_p1 = data_V_1_fu_455_p1[22:0];

assign tmp_1_fu_340_p4 = {{r_V_1_fu_322_p2[68:53]}};

assign tmp_20_fu_649_p4 = {{data_V_2_fu_638_p1[62:52]}};

assign tmp_21_fu_659_p1 = data_V_2_fu_638_p1[51:0];

assign tmp_6_fu_745_p4 = {{r_V_5_fu_727_p2[84:53]}};

assign tmp_fu_328_p3 = r_V_fu_316_p2[32'd53];

assign tmp_s_fu_560_p4 = {{r_V_3_fu_542_p2[87:24]}};

assign trunc_ln22_fu_392_p1 = select_ln1312_fu_350_p3[0:0];

assign trunc_ln32_fu_817_p1 = grp_fu_811_p2[2:0];

assign trunc_ln_fu_614_p4 = {{mul_ln23_1_reg_992[128:77]}};

assign ush_1_fu_508_p3 = ((isNeg_1_fu_491_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_504_p1 : add_ln341_fu_485_p2);

assign ush_2_fu_705_p3 = ((isNeg_2_fu_687_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_701_p1 : add_ln510_1_fu_681_p2);

assign ush_fu_300_p3 = ((isNeg_fu_283_p3[0:0] == 1'b1) ? sext_ln1311_fu_296_p1 : add_ln510_fu_277_p2);

assign v_15_fu_435_p2 = ($signed(sext_ln21_1_fu_432_p1) + $signed(64'd13068095127875490465));

assign val_1_fu_755_p3 = ((isNeg_2_fu_687_p3[0:0] == 1'b1) ? zext_ln662_2_fu_741_p1 : tmp_6_fu_745_p4);

assign val_fu_570_p3 = ((isNeg_1_reg_952[0:0] == 1'b1) ? zext_ln662_1_fu_556_p1 : tmp_s_fu_560_p4);

assign xor_ln22_fu_417_p2 = (zext_ln22_fu_413_p1 ^ 17'd131071);

assign xor_ln24_fu_623_p2 = (trunc_ln_fu_614_p4 ^ 52'd51586);

assign zext_ln15_fu_673_p1 = mantissa_2_fu_663_p4;

assign zext_ln22_fu_413_p1 = and_ln_fu_396_p10;

assign zext_ln26_1_fu_441_p1 = p_13_q1;

assign zext_ln26_2_fu_445_p1 = p_13_q0;

assign zext_ln26_fu_629_p1 = xor_ln24_fu_623_p2;

assign zext_ln31_fu_785_p1 = icmp_ln31_1_reg_850;

assign zext_ln32_fu_831_p1 = icmp_ln32_fu_825_p2;

assign zext_ln341_fu_482_p1 = tmp_18_reg_936;

assign zext_ln510_1_fu_677_p1 = tmp_20_fu_649_p4;

assign zext_ln510_fu_274_p1 = tmp_16_reg_855;

assign zext_ln55_fu_788_p1 = icmp_ln31_reg_1034;

assign zext_ln662_1_fu_556_p1 = tmp_10_fu_548_p3;

assign zext_ln662_2_fu_741_p1 = tmp_15_fu_733_p3;

assign zext_ln662_fu_336_p1 = tmp_fu_328_p3;

assign zext_ln68_1_fu_525_p1 = mantissa_1_fu_516_p4;

assign zext_ln68_fu_270_p1 = mantissa_fu_261_p4;

endmodule //fn1
