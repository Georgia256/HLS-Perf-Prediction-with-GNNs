// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=114,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2797,HLS_SYN_LUT=4175,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_9,
        p_11,
        p_13,
        ap_return
);

parameter    ap_ST_fsm_state1 = 115'd1;
parameter    ap_ST_fsm_state2 = 115'd2;
parameter    ap_ST_fsm_state3 = 115'd4;
parameter    ap_ST_fsm_state4 = 115'd8;
parameter    ap_ST_fsm_state5 = 115'd16;
parameter    ap_ST_fsm_state6 = 115'd32;
parameter    ap_ST_fsm_state7 = 115'd64;
parameter    ap_ST_fsm_state8 = 115'd128;
parameter    ap_ST_fsm_state9 = 115'd256;
parameter    ap_ST_fsm_state10 = 115'd512;
parameter    ap_ST_fsm_state11 = 115'd1024;
parameter    ap_ST_fsm_state12 = 115'd2048;
parameter    ap_ST_fsm_state13 = 115'd4096;
parameter    ap_ST_fsm_state14 = 115'd8192;
parameter    ap_ST_fsm_state15 = 115'd16384;
parameter    ap_ST_fsm_state16 = 115'd32768;
parameter    ap_ST_fsm_state17 = 115'd65536;
parameter    ap_ST_fsm_state18 = 115'd131072;
parameter    ap_ST_fsm_state19 = 115'd262144;
parameter    ap_ST_fsm_state20 = 115'd524288;
parameter    ap_ST_fsm_state21 = 115'd1048576;
parameter    ap_ST_fsm_state22 = 115'd2097152;
parameter    ap_ST_fsm_state23 = 115'd4194304;
parameter    ap_ST_fsm_state24 = 115'd8388608;
parameter    ap_ST_fsm_state25 = 115'd16777216;
parameter    ap_ST_fsm_state26 = 115'd33554432;
parameter    ap_ST_fsm_state27 = 115'd67108864;
parameter    ap_ST_fsm_state28 = 115'd134217728;
parameter    ap_ST_fsm_state29 = 115'd268435456;
parameter    ap_ST_fsm_state30 = 115'd536870912;
parameter    ap_ST_fsm_state31 = 115'd1073741824;
parameter    ap_ST_fsm_state32 = 115'd2147483648;
parameter    ap_ST_fsm_state33 = 115'd4294967296;
parameter    ap_ST_fsm_state34 = 115'd8589934592;
parameter    ap_ST_fsm_state35 = 115'd17179869184;
parameter    ap_ST_fsm_state36 = 115'd34359738368;
parameter    ap_ST_fsm_state37 = 115'd68719476736;
parameter    ap_ST_fsm_state38 = 115'd137438953472;
parameter    ap_ST_fsm_state39 = 115'd274877906944;
parameter    ap_ST_fsm_state40 = 115'd549755813888;
parameter    ap_ST_fsm_state41 = 115'd1099511627776;
parameter    ap_ST_fsm_state42 = 115'd2199023255552;
parameter    ap_ST_fsm_state43 = 115'd4398046511104;
parameter    ap_ST_fsm_state44 = 115'd8796093022208;
parameter    ap_ST_fsm_state45 = 115'd17592186044416;
parameter    ap_ST_fsm_state46 = 115'd35184372088832;
parameter    ap_ST_fsm_state47 = 115'd70368744177664;
parameter    ap_ST_fsm_state48 = 115'd140737488355328;
parameter    ap_ST_fsm_state49 = 115'd281474976710656;
parameter    ap_ST_fsm_state50 = 115'd562949953421312;
parameter    ap_ST_fsm_state51 = 115'd1125899906842624;
parameter    ap_ST_fsm_state52 = 115'd2251799813685248;
parameter    ap_ST_fsm_state53 = 115'd4503599627370496;
parameter    ap_ST_fsm_state54 = 115'd9007199254740992;
parameter    ap_ST_fsm_state55 = 115'd18014398509481984;
parameter    ap_ST_fsm_state56 = 115'd36028797018963968;
parameter    ap_ST_fsm_state57 = 115'd72057594037927936;
parameter    ap_ST_fsm_state58 = 115'd144115188075855872;
parameter    ap_ST_fsm_state59 = 115'd288230376151711744;
parameter    ap_ST_fsm_state60 = 115'd576460752303423488;
parameter    ap_ST_fsm_state61 = 115'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 115'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 115'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 115'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 115'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 115'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 115'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 115'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 115'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 115'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 115'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 115'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 115'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 115'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 115'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 115'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 115'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 115'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 115'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 115'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 115'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 115'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 115'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 115'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 115'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 115'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 115'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 115'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 115'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 115'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 115'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 115'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 115'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 115'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 115'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 115'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 115'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 115'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 115'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 115'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 115'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 115'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 115'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 115'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 115'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 115'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 115'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 115'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 115'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 115'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 115'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 115'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 115'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 115'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 115'd20769187434139310514121985316880384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [7:0] p_7;
input  [7:0] p_9;
input  [31:0] p_11;
input  [31:0] p_13;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [114:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Result_s_reg_671;
wire   [22:0] tmp_16_fu_168_p1;
reg   [22:0] tmp_16_reg_676;
wire   [0:0] isNeg_fu_182_p3;
reg   [0:0] isNeg_reg_681;
wire   [8:0] ush_fu_200_p3;
reg   [8:0] ush_reg_686;
wire   [7:0] val_fu_262_p3;
reg   [7:0] val_reg_691;
wire    ap_CS_fsm_state2;
wire   [7:0] result_V_2_fu_269_p2;
reg   [7:0] result_V_2_reg_696;
wire   [15:0] mul_ln23_fu_284_p2;
reg   [15:0] mul_ln23_reg_701;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_143_p1;
reg   [31:0] conv_reg_711;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [7:0] tmp_19_reg_721;
wire   [22:0] tmp_20_fu_308_p1;
reg   [22:0] tmp_20_reg_727;
wire   [31:0] grp_fu_126_p2;
reg   [31:0] add_reg_732;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_130_p2;
reg   [31:0] add1_reg_737;
reg   [7:0] tmp_17_reg_742;
wire    ap_CS_fsm_state30;
wire   [22:0] tmp_18_fu_326_p1;
reg   [22:0] tmp_18_reg_748;
wire   [0:0] isNeg_1_fu_339_p3;
reg   [0:0] isNeg_1_reg_753;
wire    ap_CS_fsm_state31;
wire   [8:0] ush_1_fu_356_p3;
reg   [8:0] ush_1_reg_758;
wire  signed [31:0] val_1_fu_418_p3;
reg  signed [31:0] val_1_reg_763;
wire    ap_CS_fsm_state32;
wire   [63:0] add_ln27_fu_425_p2;
reg   [63:0] add_ln27_reg_769;
wire    ap_CS_fsm_state33;
wire   [31:0] grp_fu_435_p2;
reg   [31:0] mul_ln25_reg_789;
wire    ap_CS_fsm_state34;
wire   [0:0] isNeg_2_fu_457_p3;
reg   [0:0] isNeg_2_reg_794;
wire   [8:0] ush_2_fu_474_p3;
reg   [8:0] ush_2_reg_799;
wire   [0:0] icmp_ln25_fu_549_p2;
reg   [0:0] icmp_ln25_reg_804;
wire    ap_CS_fsm_state35;
wire   [1:0] v_fu_557_p2;
reg   [1:0] v_reg_809;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
reg   [35:0] trunc_ln_reg_819;
wire    ap_CS_fsm_state68;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] udiv_ln27_reg_824;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state106;
wire   [0:0] icmp_ln26_fu_625_p2;
reg   [0:0] icmp_ln26_reg_839;
wire    ap_CS_fsm_state108;
wire   [0:0] and_ln27_fu_650_p2;
reg   [0:0] and_ln27_reg_844;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_140_p0;
wire  signed [31:0] grp_fu_143_p0;
wire   [31:0] data_V_fu_146_p1;
wire   [7:0] tmp_15_fu_158_p4;
wire   [8:0] zext_ln341_fu_172_p1;
wire   [8:0] add_ln341_fu_176_p2;
wire   [7:0] sub_ln1311_fu_190_p2;
wire  signed [8:0] sext_ln1311_fu_196_p1;
wire   [24:0] mantissa_fu_208_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_221_p1;
wire   [54:0] zext_ln15_fu_217_p1;
wire   [54:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_224_p1;
wire   [54:0] r_V_fu_228_p2;
wire   [0:0] tmp_fu_240_p3;
wire   [54:0] r_V_1_fu_234_p2;
wire   [7:0] zext_ln662_fu_248_p1;
wire   [7:0] tmp_1_fu_252_p4;
wire  signed [7:0] result_V_fu_275_p3;
wire   [7:0] mul_ln23_fu_284_p1;
wire   [31:0] bitcast_ln25_fu_294_p1;
wire   [31:0] grp_fu_136_p2;
wire   [31:0] bitcast_ln23_fu_312_p1;
wire   [8:0] zext_ln341_1_fu_330_p1;
wire   [8:0] add_ln341_1_fu_333_p2;
wire   [7:0] sub_ln1311_1_fu_347_p2;
wire  signed [8:0] sext_ln1311_1_fu_352_p1;
wire   [24:0] mantissa_1_fu_364_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i23_cast_cast_cast_fu_377_p1;
wire   [78:0] zext_ln68_fu_373_p1;
wire   [78:0] sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_380_p1;
wire   [78:0] r_V_2_fu_384_p2;
wire   [0:0] tmp_6_fu_396_p3;
wire   [78:0] r_V_3_fu_390_p2;
wire   [31:0] zext_ln662_1_fu_404_p1;
wire   [31:0] tmp_8_fu_408_p4;
wire   [31:0] grp_fu_443_p0;
wire   [8:0] zext_ln341_2_fu_448_p1;
wire   [8:0] add_ln341_2_fu_451_p2;
wire   [7:0] sub_ln1311_2_fu_465_p2;
wire  signed [8:0] sext_ln1311_2_fu_470_p1;
wire   [24:0] mantissa_2_fu_482_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i53_cast_cast_cast_fu_495_p1;
wire   [78:0] zext_ln68_1_fu_491_p1;
wire   [78:0] sh_prom_i_i_i_i_i53_cast_cast_cast_cast_fu_498_p1;
wire   [78:0] r_V_4_fu_502_p2;
wire   [0:0] tmp_13_fu_514_p3;
wire   [78:0] r_V_5_fu_508_p2;
wire   [31:0] zext_ln662_2_fu_522_p1;
wire   [31:0] tmp_s_fu_526_p4;
wire   [31:0] val_2_fu_536_p3;
wire   [31:0] sub_ln25_fu_543_p2;
wire   [1:0] zext_ln25_fu_554_p1;
wire  signed [63:0] sext_ln26_fu_563_p1;
wire   [63:0] grp_fu_570_p0;
wire   [65:0] grp_fu_570_p1;
wire   [128:0] grp_fu_570_p2;
wire   [31:0] trunc_ln27_fu_586_p1;
wire   [32:0] zext_ln27_1_fu_589_p1;
wire   [32:0] add_ln27_1_fu_593_p2;
wire   [32:0] grp_fu_603_p1;
wire  signed [7:0] sext_ln28_fu_608_p0;
wire  signed [14:0] sext_ln28_fu_608_p1;
wire   [14:0] sub_ln28_fu_611_p2;
wire   [28:0] grp_fu_603_p2;
wire   [28:0] trunc_ln26_fu_621_p1;
wire   [30:0] grp_fu_659_p2;
wire   [0:0] tmp_14_fu_637_p3;
wire   [0:0] icmp_ln28_fu_631_p2;
wire   [0:0] and_ln28_fu_644_p2;
wire   [14:0] grp_fu_659_p0;
wire   [16:0] grp_fu_659_p1;
wire   [31:0] grp_fu_140_p1;
reg    grp_fu_443_ap_start;
wire    grp_fu_443_ap_done;
reg    grp_fu_603_ap_start;
wire    grp_fu_603_ap_done;
wire    ap_CS_fsm_state115;
reg   [114:0] ap_NS_fsm;
wire   [63:0] grp_fu_443_p00;
wire   [128:0] grp_fu_570_p00;
wire   [35:0] grp_fu_603_p10;
wire   [30:0] grp_fu_659_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 115'd1;
end

fn1_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_711),
    .din1(p_13),
    .ce(1'b1),
    .dout(grp_fu_126_p2)
);

fn1_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_11),
    .din1(32'd1126301696),
    .ce(1'b1),
    .dout(grp_fu_130_p2)
);

fn1_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_reg_732),
    .din1(add1_reg_737),
    .ce(1'b1),
    .dout(grp_fu_136_p2)
);

fn1_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_140_p0),
    .ce(1'b1),
    .dout(grp_fu_140_p1)
);

fn1_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_143_p0),
    .ce(1'b1),
    .dout(grp_fu_143_p1)
);

fn1_mul_8s_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8ns_16_1_1_U6(
    .din0(result_V_fu_275_p3),
    .din1(mul_ln23_fu_284_p1),
    .dout(mul_ln23_fu_284_p2)
);

fn1_mul_32s_8s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
mul_32s_8s_32_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(val_1_reg_763),
    .din1(p_9),
    .ce(1'b1),
    .dout(grp_fu_435_p2)
);

fn1_udiv_32ns_64ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
udiv_32ns_64ns_32_36_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_443_ap_start),
    .done(grp_fu_443_ap_done),
    .din0(grp_fu_443_p0),
    .din1(add_ln27_reg_769),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

fn1_mul_64ns_66ns_129_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_570_p0),
    .din1(grp_fu_570_p1),
    .ce(1'b1),
    .dout(grp_fu_570_p2)
);

fn1_udiv_36ns_33ns_29_40_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 40 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 29 ))
udiv_36ns_33ns_29_40_seq_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_603_ap_start),
    .done(grp_fu_603_ap_done),
    .din0(trunc_ln_reg_819),
    .din1(grp_fu_603_p1),
    .ce(1'b1),
    .dout(grp_fu_603_p2)
);

fn1_mul_mul_15ns_17ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_17ns_31_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_659_p0),
    .din1(grp_fu_659_p1),
    .ce(1'b1),
    .dout(grp_fu_659_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add1_reg_737 <= grp_fu_130_p2;
        add_reg_732 <= grp_fu_126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln27_reg_769 <= add_ln27_fu_425_p2;
        val_1_reg_763 <= val_1_fu_418_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        and_ln27_reg_844 <= and_ln27_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_reg_711 <= grp_fu_143_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        icmp_ln25_reg_804 <= icmp_ln25_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        icmp_ln26_reg_839 <= icmp_ln26_fu_625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        isNeg_1_reg_753 <= add_ln341_1_fu_333_p2[32'd8];
        ush_1_reg_758 <= ush_1_fu_356_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        isNeg_2_reg_794 <= add_ln341_2_fu_451_p2[32'd8];
        mul_ln25_reg_789 <= grp_fu_435_p2;
        ush_2_reg_799 <= ush_2_fu_474_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        isNeg_reg_681 <= add_ln341_fu_176_p2[32'd8];
        p_Result_s_reg_671 <= data_V_fu_146_p1[32'd31];
        tmp_16_reg_676 <= tmp_16_fu_168_p1;
        ush_reg_686 <= ush_fu_200_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln23_reg_701 <= mul_ln23_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (p_Result_s_reg_671 == 1'd1))) begin
        result_V_2_reg_696 <= result_V_2_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_17_reg_742 <= {{bitcast_ln23_fu_312_p1[30:23]}};
        tmp_18_reg_748 <= tmp_18_fu_326_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_19_reg_721 <= {{bitcast_ln25_fu_294_p1[30:23]}};
        tmp_20_reg_727 <= tmp_20_fu_308_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        trunc_ln_reg_819 <= {{grp_fu_570_p2[128:93]}};
        udiv_ln27_reg_824 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        v_reg_809 <= v_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        val_reg_691 <= val_fu_262_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_443_ap_start = 1'b1;
    end else begin
        grp_fu_443_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_603_ap_start = 1'b1;
    end else begin
        grp_fu_603_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_1_fu_593_p2 = (zext_ln27_1_fu_589_p1 + 33'd187);

assign add_ln27_fu_425_p2 = (p + 64'd86);

assign add_ln341_1_fu_333_p2 = ($signed(zext_ln341_1_fu_330_p1) + $signed(9'd385));

assign add_ln341_2_fu_451_p2 = ($signed(zext_ln341_2_fu_448_p1) + $signed(9'd385));

assign add_ln341_fu_176_p2 = ($signed(zext_ln341_fu_172_p1) + $signed(9'd385));

assign and_ln27_fu_650_p2 = (icmp_ln26_reg_839 & and_ln28_fu_644_p2);

assign and_ln28_fu_644_p2 = (tmp_14_fu_637_p3 & icmp_ln28_fu_631_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = grp_fu_140_p1;

assign bitcast_ln23_fu_312_p1 = grp_fu_136_p2;

assign bitcast_ln25_fu_294_p1 = p_11;

assign data_V_fu_146_p1 = p_13;

assign grp_fu_140_p0 = and_ln27_reg_844;

assign grp_fu_143_p0 = $signed(mul_ln23_reg_701);

assign grp_fu_443_p0 = grp_fu_443_p00;

assign grp_fu_443_p00 = $unsigned(val_1_reg_763);

assign grp_fu_570_p0 = grp_fu_570_p00;

assign grp_fu_570_p00 = $unsigned(sext_ln26_fu_563_p1);

assign grp_fu_570_p1 = 129'd31723453194800458045;

assign grp_fu_603_p1 = grp_fu_603_p10;

assign grp_fu_603_p10 = add_ln27_1_fu_593_p2;

assign grp_fu_659_p0 = grp_fu_659_p00;

assign grp_fu_659_p00 = sub_ln28_fu_611_p2;

assign grp_fu_659_p1 = 31'd64777;

assign icmp_ln25_fu_549_p2 = ((mul_ln25_reg_789 == sub_ln25_fu_543_p2) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_625_p2 = ((trunc_ln26_fu_621_p1 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_631_p2 = ((p_7 == 8'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_339_p3 = add_ln341_1_fu_333_p2[32'd8];

assign isNeg_2_fu_457_p3 = add_ln341_2_fu_451_p2[32'd8];

assign isNeg_fu_182_p3 = add_ln341_fu_176_p2[32'd8];

assign mantissa_1_fu_364_p4 = {{{{1'd1}, {tmp_18_reg_748}}}, {1'd0}};

assign mantissa_2_fu_482_p4 = {{{{1'd1}, {tmp_20_reg_727}}}, {1'd0}};

assign mantissa_fu_208_p4 = {{{{1'd1}, {tmp_16_reg_676}}}, {1'd0}};

assign mul_ln23_fu_284_p1 = 16'd70;

assign r_V_1_fu_234_p2 = zext_ln15_fu_217_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_224_p1;

assign r_V_2_fu_384_p2 = zext_ln68_fu_373_p1 >> sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_380_p1;

assign r_V_3_fu_390_p2 = zext_ln68_fu_373_p1 << sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_380_p1;

assign r_V_4_fu_502_p2 = zext_ln68_1_fu_491_p1 >> sh_prom_i_i_i_i_i53_cast_cast_cast_cast_fu_498_p1;

assign r_V_5_fu_508_p2 = zext_ln68_1_fu_491_p1 << sh_prom_i_i_i_i_i53_cast_cast_cast_cast_fu_498_p1;

assign r_V_fu_228_p2 = zext_ln15_fu_217_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_224_p1;

assign result_V_2_fu_269_p2 = (8'd0 - val_fu_262_p3);

assign result_V_fu_275_p3 = ((p_Result_s_reg_671[0:0] == 1'b1) ? result_V_2_reg_696 : val_reg_691);

assign sext_ln1311_1_fu_352_p1 = $signed(sub_ln1311_1_fu_347_p2);

assign sext_ln1311_2_fu_470_p1 = $signed(sub_ln1311_2_fu_465_p2);

assign sext_ln1311_fu_196_p1 = $signed(sub_ln1311_fu_190_p2);

assign sext_ln26_fu_563_p1 = $signed(v_reg_809);

assign sext_ln28_fu_608_p0 = p_9;

assign sext_ln28_fu_608_p1 = sext_ln28_fu_608_p0;

assign sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_380_p1 = $unsigned(sh_prom_i_i_i_i_i23_cast_cast_cast_fu_377_p1);

assign sh_prom_i_i_i_i_i23_cast_cast_cast_fu_377_p1 = $signed(ush_1_reg_758);

assign sh_prom_i_i_i_i_i53_cast_cast_cast_cast_fu_498_p1 = $unsigned(sh_prom_i_i_i_i_i53_cast_cast_cast_fu_495_p1);

assign sh_prom_i_i_i_i_i53_cast_cast_cast_fu_495_p1 = $signed(ush_2_reg_799);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_224_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_221_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_221_p1 = $signed(ush_reg_686);

assign sub_ln1311_1_fu_347_p2 = (8'd127 - tmp_17_reg_742);

assign sub_ln1311_2_fu_465_p2 = (8'd127 - tmp_19_reg_721);

assign sub_ln1311_fu_190_p2 = (8'd127 - tmp_15_fu_158_p4);

assign sub_ln25_fu_543_p2 = (32'd0 - val_2_fu_536_p3);

assign sub_ln28_fu_611_p2 = ($signed(15'd24037) - $signed(sext_ln28_fu_608_p1));

assign tmp_13_fu_514_p3 = r_V_4_fu_502_p2[32'd24];

assign tmp_14_fu_637_p3 = grp_fu_659_p2[32'd24];

assign tmp_15_fu_158_p4 = {{data_V_fu_146_p1[30:23]}};

assign tmp_16_fu_168_p1 = data_V_fu_146_p1[22:0];

assign tmp_18_fu_326_p1 = bitcast_ln23_fu_312_p1[22:0];

assign tmp_1_fu_252_p4 = {{r_V_1_fu_234_p2[31:24]}};

assign tmp_20_fu_308_p1 = bitcast_ln25_fu_294_p1[22:0];

assign tmp_6_fu_396_p3 = r_V_2_fu_384_p2[32'd24];

assign tmp_8_fu_408_p4 = {{r_V_3_fu_390_p2[55:24]}};

assign tmp_fu_240_p3 = r_V_fu_228_p2[32'd24];

assign tmp_s_fu_526_p4 = {{r_V_5_fu_508_p2[55:24]}};

assign trunc_ln26_fu_621_p1 = grp_fu_603_p2[28:0];

assign trunc_ln27_fu_586_p1 = udiv_ln27_reg_824[31:0];

assign ush_1_fu_356_p3 = ((isNeg_1_fu_339_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_352_p1 : add_ln341_1_fu_333_p2);

assign ush_2_fu_474_p3 = ((isNeg_2_fu_457_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_470_p1 : add_ln341_2_fu_451_p2);

assign ush_fu_200_p3 = ((isNeg_fu_182_p3[0:0] == 1'b1) ? sext_ln1311_fu_196_p1 : add_ln341_fu_176_p2);

assign v_fu_557_p2 = (zext_ln25_fu_554_p1 ^ 2'd3);

assign val_1_fu_418_p3 = ((isNeg_1_reg_753[0:0] == 1'b1) ? zext_ln662_1_fu_404_p1 : tmp_8_fu_408_p4);

assign val_2_fu_536_p3 = ((isNeg_2_reg_794[0:0] == 1'b1) ? zext_ln662_2_fu_522_p1 : tmp_s_fu_526_p4);

assign val_fu_262_p3 = ((isNeg_reg_681[0:0] == 1'b1) ? zext_ln662_fu_248_p1 : tmp_1_fu_252_p4);

assign zext_ln15_fu_217_p1 = mantissa_fu_208_p4;

assign zext_ln25_fu_554_p1 = icmp_ln25_reg_804;

assign zext_ln27_1_fu_589_p1 = trunc_ln27_fu_586_p1;

assign zext_ln341_1_fu_330_p1 = tmp_17_reg_742;

assign zext_ln341_2_fu_448_p1 = tmp_19_reg_721;

assign zext_ln341_fu_172_p1 = tmp_15_fu_158_p4;

assign zext_ln662_1_fu_404_p1 = tmp_6_fu_396_p3;

assign zext_ln662_2_fu_522_p1 = tmp_13_fu_514_p3;

assign zext_ln662_fu_248_p1 = tmp_fu_240_p3;

assign zext_ln68_1_fu_491_p1 = mantissa_2_fu_482_p4;

assign zext_ln68_fu_373_p1 = mantissa_1_fu_364_p4;

endmodule //fn1
