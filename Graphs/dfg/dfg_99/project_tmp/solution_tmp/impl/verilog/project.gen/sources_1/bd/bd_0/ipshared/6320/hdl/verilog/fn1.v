// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=127,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2425,HLS_SYN_LUT=3777,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_9_address0,
        p_9_ce0,
        p_9_q0,
        p_11,
        ap_return
);

parameter    ap_ST_fsm_state1 = 128'd1;
parameter    ap_ST_fsm_state2 = 128'd2;
parameter    ap_ST_fsm_state3 = 128'd4;
parameter    ap_ST_fsm_state4 = 128'd8;
parameter    ap_ST_fsm_state5 = 128'd16;
parameter    ap_ST_fsm_state6 = 128'd32;
parameter    ap_ST_fsm_state7 = 128'd64;
parameter    ap_ST_fsm_state8 = 128'd128;
parameter    ap_ST_fsm_state9 = 128'd256;
parameter    ap_ST_fsm_state10 = 128'd512;
parameter    ap_ST_fsm_state11 = 128'd1024;
parameter    ap_ST_fsm_state12 = 128'd2048;
parameter    ap_ST_fsm_state13 = 128'd4096;
parameter    ap_ST_fsm_state14 = 128'd8192;
parameter    ap_ST_fsm_state15 = 128'd16384;
parameter    ap_ST_fsm_state16 = 128'd32768;
parameter    ap_ST_fsm_state17 = 128'd65536;
parameter    ap_ST_fsm_state18 = 128'd131072;
parameter    ap_ST_fsm_state19 = 128'd262144;
parameter    ap_ST_fsm_state20 = 128'd524288;
parameter    ap_ST_fsm_state21 = 128'd1048576;
parameter    ap_ST_fsm_state22 = 128'd2097152;
parameter    ap_ST_fsm_state23 = 128'd4194304;
parameter    ap_ST_fsm_state24 = 128'd8388608;
parameter    ap_ST_fsm_state25 = 128'd16777216;
parameter    ap_ST_fsm_state26 = 128'd33554432;
parameter    ap_ST_fsm_state27 = 128'd67108864;
parameter    ap_ST_fsm_state28 = 128'd134217728;
parameter    ap_ST_fsm_state29 = 128'd268435456;
parameter    ap_ST_fsm_state30 = 128'd536870912;
parameter    ap_ST_fsm_state31 = 128'd1073741824;
parameter    ap_ST_fsm_state32 = 128'd2147483648;
parameter    ap_ST_fsm_state33 = 128'd4294967296;
parameter    ap_ST_fsm_state34 = 128'd8589934592;
parameter    ap_ST_fsm_state35 = 128'd17179869184;
parameter    ap_ST_fsm_state36 = 128'd34359738368;
parameter    ap_ST_fsm_state37 = 128'd68719476736;
parameter    ap_ST_fsm_state38 = 128'd137438953472;
parameter    ap_ST_fsm_state39 = 128'd274877906944;
parameter    ap_ST_fsm_state40 = 128'd549755813888;
parameter    ap_ST_fsm_state41 = 128'd1099511627776;
parameter    ap_ST_fsm_state42 = 128'd2199023255552;
parameter    ap_ST_fsm_state43 = 128'd4398046511104;
parameter    ap_ST_fsm_state44 = 128'd8796093022208;
parameter    ap_ST_fsm_state45 = 128'd17592186044416;
parameter    ap_ST_fsm_state46 = 128'd35184372088832;
parameter    ap_ST_fsm_state47 = 128'd70368744177664;
parameter    ap_ST_fsm_state48 = 128'd140737488355328;
parameter    ap_ST_fsm_state49 = 128'd281474976710656;
parameter    ap_ST_fsm_state50 = 128'd562949953421312;
parameter    ap_ST_fsm_state51 = 128'd1125899906842624;
parameter    ap_ST_fsm_state52 = 128'd2251799813685248;
parameter    ap_ST_fsm_state53 = 128'd4503599627370496;
parameter    ap_ST_fsm_state54 = 128'd9007199254740992;
parameter    ap_ST_fsm_state55 = 128'd18014398509481984;
parameter    ap_ST_fsm_state56 = 128'd36028797018963968;
parameter    ap_ST_fsm_state57 = 128'd72057594037927936;
parameter    ap_ST_fsm_state58 = 128'd144115188075855872;
parameter    ap_ST_fsm_state59 = 128'd288230376151711744;
parameter    ap_ST_fsm_state60 = 128'd576460752303423488;
parameter    ap_ST_fsm_state61 = 128'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 128'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 128'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 128'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 128'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 128'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 128'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 128'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 128'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 128'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 128'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 128'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 128'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 128'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 128'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 128'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 128'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 128'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 128'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 128'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 128'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 128'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 128'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 128'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 128'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 128'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 128'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 128'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 128'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 128'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 128'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 128'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 128'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 128'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 128'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 128'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 128'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 128'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 128'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 128'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 128'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 128'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 128'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 128'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 128'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 128'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 128'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 128'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 128'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 128'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 128'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 128'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 128'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 128'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 128'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 128'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 128'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 128'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 128'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 128'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 128'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 128'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 128'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 128'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 128'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 128'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 128'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 128'd170141183460469231731687303715884105728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p;
input  [7:0] p_7;
output  [3:0] p_9_address0;
output   p_9_ce0;
input  [63:0] p_9_q0;
input  [31:0] p_11;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_9_ce0;

(* fsm_encoding = "none" *) reg   [127:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_126_p2;
reg   [63:0] reg_141;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state16;
reg   [63:0] p_9_load_reg_379;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln14_fu_147_p2;
reg   [0:0] icmp_ln14_reg_389;
wire   [63:0] bitcast_ln14_fu_153_p1;
wire   [31:0] zext_ln14_fu_157_p1;
wire    ap_CS_fsm_state4;
wire   [63:0] grp_fu_135_p1;
reg   [63:0] conv3_reg_404;
wire    ap_CS_fsm_state18;
wire   [63:0] grp_fu_138_p1;
reg   [63:0] conv2_reg_414;
wire    ap_CS_fsm_state23;
wire   [63:0] grp_fu_121_p2;
reg   [63:0] add7_reg_419;
wire   [63:0] grp_fu_131_p2;
reg   [63:0] div8_reg_424;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire   [22:0] tmp_3_fu_194_p1;
reg   [22:0] tmp_3_reg_434;
wire    ap_CS_fsm_state84;
wire   [8:0] add_ln341_fu_202_p2;
reg   [8:0] add_ln341_reg_439;
reg   [0:0] isNeg_reg_444;
wire   [7:0] sub_ln1311_fu_216_p2;
reg   [7:0] sub_ln1311_reg_450;
wire    ap_CS_fsm_state85;
wire   [31:0] val_fu_302_p3;
reg   [31:0] val_reg_460;
wire    ap_CS_fsm_state86;
wire   [32:0] sub_ln18_fu_349_p2;
reg   [32:0] sub_ln18_reg_470;
wire    ap_CS_fsm_state121;
wire   [33:0] add_ln15_fu_364_p2;
reg   [33:0] add_ln15_reg_475;
wire    ap_CS_fsm_state122;
wire  signed [63:0] sext_ln15_1_fu_370_p1;
wire    ap_CS_fsm_state123;
wire   [63:0] grp_fu_118_p0;
wire    ap_CS_fsm_state17;
reg   [63:0] grp_fu_126_p0;
reg   [63:0] grp_fu_126_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state24;
reg   [63:0] grp_fu_135_p0;
wire  signed [31:0] grp_fu_138_p0;
wire   [63:0] bitcast_ln14_1_fu_166_p1;
wire   [63:0] xor_ln14_fu_169_p2;
wire   [31:0] grp_fu_118_p1;
wire   [31:0] data_V_fu_180_p1;
wire   [7:0] tmp_2_fu_184_p4;
wire   [8:0] zext_ln341_fu_198_p1;
wire   [31:0] add_ln12_fu_222_p2;
wire  signed [32:0] grp_fu_232_p1;
wire   [24:0] mantissa_fu_238_p4;
wire  signed [8:0] sext_ln1311_fu_251_p1;
wire   [8:0] ush_fu_254_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_260_p1;
wire   [78:0] zext_ln68_fu_247_p1;
wire   [78:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_264_p1;
wire   [78:0] r_V_fu_268_p2;
wire   [0:0] tmp_fu_280_p3;
wire   [78:0] r_V_1_fu_274_p2;
wire   [31:0] zext_ln662_fu_288_p1;
wire   [31:0] tmp_1_fu_292_p4;
wire   [31:0] grp_fu_314_p1;
wire   [15:0] grp_fu_232_p2;
wire   [31:0] grp_fu_314_p2;
wire   [15:0] v_5_fu_319_p1;
wire   [15:0] or_ln19_fu_327_p2;
wire   [25:0] or_ln_fu_333_p3;
wire  signed [27:0] sext_ln18_fu_341_p1;
wire   [32:0] zext_ln19_fu_323_p1;
wire   [32:0] zext_ln18_fu_345_p1;
wire   [32:0] xor_ln15_fu_355_p2;
wire  signed [33:0] sext_ln15_fu_360_p1;
reg    grp_fu_232_ap_start;
wire    grp_fu_232_ap_done;
reg    grp_fu_314_ap_start;
wire    grp_fu_314_ap_done;
wire    ap_CS_fsm_state128;
reg   [127:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 128'd1;
end

fn1_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_118_p0),
    .ce(1'b1),
    .dout(grp_fu_118_p1)
);

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_141),
    .din1(64'd4641698287819161600),
    .ce(1'b1),
    .dout(grp_fu_121_p2)
);

fn1_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_126_p0),
    .din1(grp_fu_126_p1),
    .ce(1'b1),
    .dout(grp_fu_126_p2)
);

fn1_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv2_reg_414),
    .din1(add7_reg_419),
    .ce(1'b1),
    .dout(grp_fu_131_p2)
);

fn1_uitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_6_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_135_p0),
    .ce(1'b1),
    .dout(grp_fu_135_p1)
);

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_138_p0),
    .ce(1'b1),
    .dout(grp_fu_138_p1)
);

fn1_udiv_33ns_33s_16_37_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 37 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 16 ))
udiv_33ns_33s_16_37_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_232_ap_start),
    .done(grp_fu_232_ap_done),
    .din0(33'd3630855853),
    .din1(grp_fu_232_p1),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

fn1_urem_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
urem_32ns_32ns_32_36_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_314_ap_start),
    .done(grp_fu_314_ap_done),
    .din0(val_reg_460),
    .din1(grp_fu_314_p1),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add7_reg_419 <= grp_fu_121_p2;
        conv2_reg_414 <= grp_fu_138_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        add_ln15_reg_475 <= add_ln15_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        add_ln341_reg_439 <= add_ln341_fu_202_p2;
        isNeg_reg_444 <= add_ln341_fu_202_p2[32'd8];
        sub_ln1311_reg_450 <= sub_ln1311_fu_216_p2;
        tmp_3_reg_434 <= tmp_3_fu_194_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv3_reg_404 <= grp_fu_135_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        div8_reg_424 <= grp_fu_131_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln14_reg_389 <= icmp_ln14_fu_147_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_9_load_reg_379 <= p_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_141 <= grp_fu_126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        sub_ln18_reg_470 <= sub_ln18_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        val_reg_460 <= val_fu_302_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_126_p0 = conv3_reg_404;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_126_p0 = bitcast_ln14_fu_153_p1;
    end else begin
        grp_fu_126_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_126_p1 = reg_141;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_126_p1 = 64'd4738468544637829120;
    end else begin
        grp_fu_126_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_135_p0 = sext_ln15_1_fu_370_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_135_p0 = zext_ln14_fu_157_p1;
    end else begin
        grp_fu_135_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_232_ap_start = 1'b1;
    end else begin
        grp_fu_232_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_314_ap_start = 1'b1;
    end else begin
        grp_fu_314_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_9_ce0 = 1'b1;
    end else begin
        p_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_222_p2 = (p_11 + 32'd22);

assign add_ln15_fu_364_p2 = ($signed(sext_ln15_fu_360_p1) + $signed(34'd16373832432));

assign add_ln341_fu_202_p2 = ($signed(zext_ln341_fu_198_p1) + $signed(9'd385));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = grp_fu_135_p1;

assign bitcast_ln14_1_fu_166_p1 = div8_reg_424;

assign bitcast_ln14_fu_153_p1 = p_9_load_reg_379;

assign data_V_fu_180_p1 = grp_fu_118_p1;

assign grp_fu_118_p0 = xor_ln14_fu_169_p2;

assign grp_fu_138_p0 = $signed(p_7);

assign grp_fu_232_p1 = $signed(add_ln12_fu_222_p2);

assign grp_fu_314_p1 = (p + 32'd92);

assign icmp_ln14_fu_147_p2 = ((p == 32'd0) ? 1'b1 : 1'b0);

assign mantissa_fu_238_p4 = {{{{1'd1}, {tmp_3_reg_434}}}, {1'd0}};

assign or_ln19_fu_327_p2 = (v_5_fu_319_p1 | 16'd34186);

assign or_ln_fu_333_p3 = {{10'd657}, {or_ln19_fu_327_p2}};

assign p_9_address0 = 64'd1;

assign r_V_1_fu_274_p2 = zext_ln68_fu_247_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_264_p1;

assign r_V_fu_268_p2 = zext_ln68_fu_247_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_264_p1;

assign sext_ln1311_fu_251_p1 = $signed(sub_ln1311_reg_450);

assign sext_ln15_1_fu_370_p1 = $signed(add_ln15_reg_475);

assign sext_ln15_fu_360_p1 = $signed(xor_ln15_fu_355_p2);

assign sext_ln18_fu_341_p1 = $signed(or_ln_fu_333_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_264_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_260_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_260_p1 = $signed(ush_fu_254_p3);

assign sub_ln1311_fu_216_p2 = (8'd127 - tmp_2_fu_184_p4);

assign sub_ln18_fu_349_p2 = (zext_ln19_fu_323_p1 - zext_ln18_fu_345_p1);

assign tmp_1_fu_292_p4 = {{r_V_1_fu_274_p2[55:24]}};

assign tmp_2_fu_184_p4 = {{data_V_fu_180_p1[30:23]}};

assign tmp_3_fu_194_p1 = data_V_fu_180_p1[22:0];

assign tmp_fu_280_p3 = r_V_fu_268_p2[32'd24];

assign ush_fu_254_p3 = ((isNeg_reg_444[0:0] == 1'b1) ? sext_ln1311_fu_251_p1 : add_ln341_reg_439);

assign v_5_fu_319_p1 = grp_fu_232_p2[15:0];

assign val_fu_302_p3 = ((isNeg_reg_444[0:0] == 1'b1) ? zext_ln662_fu_288_p1 : tmp_1_fu_292_p4);

assign xor_ln14_fu_169_p2 = (bitcast_ln14_1_fu_166_p1 ^ 64'd9223372036854775808);

assign xor_ln15_fu_355_p2 = (sub_ln18_reg_470 ^ 33'd4991);

assign zext_ln14_fu_157_p1 = icmp_ln14_reg_389;

assign zext_ln18_fu_345_p1 = $unsigned(sext_ln18_fu_341_p1);

assign zext_ln19_fu_323_p1 = grp_fu_314_p2;

assign zext_ln341_fu_198_p1 = tmp_2_fu_184_p4;

assign zext_ln662_fu_288_p1 = tmp_fu_280_p3;

assign zext_ln68_fu_247_p1 = mantissa_fu_238_p4;

endmodule //fn1
