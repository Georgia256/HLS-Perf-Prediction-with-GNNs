// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.272000,HLS_SYN_LAT=98,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3028,HLS_SYN_LUT=3789,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_4,
        p_9,
        p_15_address0,
        p_15_ce0,
        p_15_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 99'd1;
parameter    ap_ST_fsm_state2 = 99'd2;
parameter    ap_ST_fsm_state3 = 99'd4;
parameter    ap_ST_fsm_state4 = 99'd8;
parameter    ap_ST_fsm_state5 = 99'd16;
parameter    ap_ST_fsm_state6 = 99'd32;
parameter    ap_ST_fsm_state7 = 99'd64;
parameter    ap_ST_fsm_state8 = 99'd128;
parameter    ap_ST_fsm_state9 = 99'd256;
parameter    ap_ST_fsm_state10 = 99'd512;
parameter    ap_ST_fsm_state11 = 99'd1024;
parameter    ap_ST_fsm_state12 = 99'd2048;
parameter    ap_ST_fsm_state13 = 99'd4096;
parameter    ap_ST_fsm_state14 = 99'd8192;
parameter    ap_ST_fsm_state15 = 99'd16384;
parameter    ap_ST_fsm_state16 = 99'd32768;
parameter    ap_ST_fsm_state17 = 99'd65536;
parameter    ap_ST_fsm_state18 = 99'd131072;
parameter    ap_ST_fsm_state19 = 99'd262144;
parameter    ap_ST_fsm_state20 = 99'd524288;
parameter    ap_ST_fsm_state21 = 99'd1048576;
parameter    ap_ST_fsm_state22 = 99'd2097152;
parameter    ap_ST_fsm_state23 = 99'd4194304;
parameter    ap_ST_fsm_state24 = 99'd8388608;
parameter    ap_ST_fsm_state25 = 99'd16777216;
parameter    ap_ST_fsm_state26 = 99'd33554432;
parameter    ap_ST_fsm_state27 = 99'd67108864;
parameter    ap_ST_fsm_state28 = 99'd134217728;
parameter    ap_ST_fsm_state29 = 99'd268435456;
parameter    ap_ST_fsm_state30 = 99'd536870912;
parameter    ap_ST_fsm_state31 = 99'd1073741824;
parameter    ap_ST_fsm_state32 = 99'd2147483648;
parameter    ap_ST_fsm_state33 = 99'd4294967296;
parameter    ap_ST_fsm_state34 = 99'd8589934592;
parameter    ap_ST_fsm_state35 = 99'd17179869184;
parameter    ap_ST_fsm_state36 = 99'd34359738368;
parameter    ap_ST_fsm_state37 = 99'd68719476736;
parameter    ap_ST_fsm_state38 = 99'd137438953472;
parameter    ap_ST_fsm_state39 = 99'd274877906944;
parameter    ap_ST_fsm_state40 = 99'd549755813888;
parameter    ap_ST_fsm_state41 = 99'd1099511627776;
parameter    ap_ST_fsm_state42 = 99'd2199023255552;
parameter    ap_ST_fsm_state43 = 99'd4398046511104;
parameter    ap_ST_fsm_state44 = 99'd8796093022208;
parameter    ap_ST_fsm_state45 = 99'd17592186044416;
parameter    ap_ST_fsm_state46 = 99'd35184372088832;
parameter    ap_ST_fsm_state47 = 99'd70368744177664;
parameter    ap_ST_fsm_state48 = 99'd140737488355328;
parameter    ap_ST_fsm_state49 = 99'd281474976710656;
parameter    ap_ST_fsm_state50 = 99'd562949953421312;
parameter    ap_ST_fsm_state51 = 99'd1125899906842624;
parameter    ap_ST_fsm_state52 = 99'd2251799813685248;
parameter    ap_ST_fsm_state53 = 99'd4503599627370496;
parameter    ap_ST_fsm_state54 = 99'd9007199254740992;
parameter    ap_ST_fsm_state55 = 99'd18014398509481984;
parameter    ap_ST_fsm_state56 = 99'd36028797018963968;
parameter    ap_ST_fsm_state57 = 99'd72057594037927936;
parameter    ap_ST_fsm_state58 = 99'd144115188075855872;
parameter    ap_ST_fsm_state59 = 99'd288230376151711744;
parameter    ap_ST_fsm_state60 = 99'd576460752303423488;
parameter    ap_ST_fsm_state61 = 99'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 99'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 99'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 99'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 99'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 99'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 99'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 99'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 99'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 99'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 99'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 99'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 99'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 99'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 99'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 99'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 99'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 99'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 99'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 99'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 99'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 99'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 99'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 99'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 99'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 99'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 99'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 99'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 99'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 99'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 99'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 99'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 99'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 99'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 99'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 99'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 99'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 99'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 99'd316912650057057350374175801344;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [31:0] p_4;
input  [63:0] p_9;
output  [3:0] p_15_address0;
output   p_15_ce0;
input  [15:0] p_15_q0;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_15_ce0;

(* fsm_encoding = "none" *) reg   [98:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] v_13_fu_115_p1;
reg   [7:0] v_13_reg_389;
wire   [15:0] v_7_fu_119_p1;
reg   [15:0] v_7_reg_395;
wire   [0:0] icmp_ln22_fu_127_p2;
reg   [0:0] icmp_ln22_reg_400;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [7:0] v_11_fu_161_p2;
reg   [7:0] v_11_reg_420;
wire   [63:0] add_ln18_fu_166_p2;
reg   [63:0] add_ln18_reg_425;
wire    ap_CS_fsm_state5;
wire  signed [63:0] grp_fu_172_p2;
reg  signed [63:0] mul_ln20_reg_435;
wire    ap_CS_fsm_state8;
wire   [7:0] v_11_1_fu_190_p2;
reg   [7:0] v_11_1_reg_440;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [0:0] p_Result_s_reg_450;
wire    ap_CS_fsm_state23;
reg   [10:0] tmp_2_reg_455;
wire   [51:0] tmp_3_fu_227_p1;
reg   [51:0] tmp_3_reg_461;
wire   [63:0] val_fu_320_p3;
reg   [63:0] val_reg_466;
wire    ap_CS_fsm_state24;
wire  signed [63:0] result_V_fu_333_p3;
reg  signed [63:0] result_V_reg_472;
wire    ap_CS_fsm_state25;
wire   [63:0] grp_fu_339_p2;
reg   [63:0] mul_ln20_1_reg_477;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire   [63:0] grp_fu_360_p2;
reg   [63:0] sdiv_ln20_reg_487;
wire    ap_CS_fsm_state98;
wire  signed [31:0] grp_fu_112_p0;
wire   [3:0] trunc_ln17_fu_141_p1;
wire   [3:0] xor_ln17_fu_145_p2;
wire   [7:0] sub_ln17_fu_136_p2;
wire   [7:0] xor_ln17cast_fu_151_p1;
wire   [7:0] shl_ln17_fu_155_p2;
wire  signed [7:0] grp_fu_373_p4;
wire  signed [63:0] add_ln18_fu_166_p0;
wire   [31:0] grp_fu_172_p0;
wire  signed [8:0] grp_fu_181_p0;
wire   [7:0] grp_fu_181_p2;
wire   [7:0] trunc_ln18_fu_186_p1;
wire   [63:0] grp_fu_112_p1;
wire   [63:0] bitcast_ln20_fu_199_p1;
wire   [63:0] data_V_fu_203_p2;
wire   [53:0] mantissa_fu_231_p4;
wire   [11:0] zext_ln510_fu_244_p1;
wire   [11:0] add_ln510_fu_247_p2;
wire   [10:0] sub_ln1311_fu_261_p2;
wire   [0:0] isNeg_fu_253_p3;
wire  signed [11:0] sext_ln1311_fu_266_p1;
wire   [11:0] ush_fu_270_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_278_p1;
wire   [168:0] zext_ln15_fu_240_p1;
wire   [168:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_282_p1;
wire   [168:0] r_V_fu_286_p2;
wire   [0:0] tmp_fu_298_p3;
wire   [168:0] r_V_1_fu_292_p2;
wire   [63:0] zext_ln662_fu_306_p1;
wire   [63:0] tmp_1_fu_310_p4;
wire   [63:0] result_V_2_fu_328_p2;
wire    ap_CS_fsm_state26;
wire   [16:0] zext_ln21_fu_343_p1;
wire   [16:0] sub_ln21_fu_346_p2;
wire  signed [31:0] sext_ln20_fu_352_p1;
wire   [32:0] grp_fu_360_p1;
wire    ap_CS_fsm_state99;
wire   [63:0] zext_ln22_fu_365_p1;
wire   [7:0] grp_fu_373_p0;
wire   [7:0] grp_fu_373_p1;
wire   [6:0] grp_fu_373_p2;
wire   [6:0] grp_fu_373_p3;
reg    grp_fu_181_ap_start;
wire    grp_fu_181_ap_done;
reg    grp_fu_360_ap_start;
wire    grp_fu_360_ap_done;
reg   [98:0] ap_NS_fsm;
wire   [63:0] grp_fu_172_p00;
wire   [63:0] grp_fu_360_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 99'd1;
end

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_112_p0),
    .ce(1'b1),
    .dout(grp_fu_112_p1)
);

fn1_mul_32ns_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_32ns_64s_64_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_172_p0),
    .din1(p),
    .ce(1'b1),
    .dout(grp_fu_172_p2)
);

fn1_sdiv_9s_64ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
sdiv_9s_64ns_8_13_seq_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_181_ap_start),
    .done(grp_fu_181_ap_done),
    .din0(grp_fu_181_p0),
    .din1(add_ln18_reg_425),
    .ce(1'b1),
    .dout(grp_fu_181_p2)
);

fn1_mul_64s_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_64s_64s_64_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_reg_435),
    .din1(result_V_reg_472),
    .ce(1'b1),
    .dout(grp_fu_339_p2)
);

fn1_sdiv_64ns_33ns_64_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 64 ))
sdiv_64ns_33ns_64_68_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_360_ap_start),
    .done(grp_fu_360_ap_done),
    .din0(mul_ln20_1_reg_477),
    .din1(grp_fu_360_p1),
    .ce(1'b1),
    .dout(grp_fu_360_p2)
);

fn1_ama_addmuladd_8ns_8ns_7ns_7ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
ama_addmuladd_8ns_8ns_7ns_7ns_8_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .din2(grp_fu_373_p2),
    .din3(grp_fu_373_p3),
    .ce(1'b1),
    .dout(grp_fu_373_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln18_reg_425 <= add_ln18_fu_166_p2;
        v_11_reg_420 <= v_11_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln22_reg_400 <= icmp_ln22_fu_127_p2;
        v_13_reg_389 <= v_13_fu_115_p1;
        v_7_reg_395 <= v_7_fu_119_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        mul_ln20_1_reg_477 <= grp_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mul_ln20_reg_435 <= grp_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        p_Result_s_reg_450 <= data_V_fu_203_p2[32'd63];
        tmp_2_reg_455 <= {{data_V_fu_203_p2[62:52]}};
        tmp_3_reg_461 <= tmp_3_fu_227_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        result_V_reg_472 <= result_V_fu_333_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        sdiv_ln20_reg_487 <= grp_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        v_11_1_reg_440 <= v_11_1_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        val_reg_466 <= val_fu_320_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_181_ap_start = 1'b1;
    end else begin
        grp_fu_181_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_360_ap_start = 1'b1;
    end else begin
        grp_fu_360_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_15_ce0 = 1'b1;
    end else begin
        p_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln18_fu_166_p0 = p;

assign add_ln18_fu_166_p2 = ($signed(add_ln18_fu_166_p0) + $signed(64'd324));

assign add_ln510_fu_247_p2 = ($signed(zext_ln510_fu_244_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_return = $signed(sdiv_ln20_reg_487) >>> zext_ln22_fu_365_p1;

assign bitcast_ln20_fu_199_p1 = grp_fu_112_p1;

assign data_V_fu_203_p2 = (bitcast_ln20_fu_199_p1 ^ 64'd9223372036854775808);

assign grp_fu_112_p0 = $signed(v_11_1_reg_440);

assign grp_fu_172_p0 = grp_fu_172_p00;

assign grp_fu_172_p00 = p_4;

assign grp_fu_181_p0 = $signed(v_11_reg_420);

assign grp_fu_360_p1 = grp_fu_360_p10;

assign grp_fu_360_p10 = $unsigned(sext_ln20_fu_352_p1);

assign grp_fu_373_p0 = p_9[7:0];

assign grp_fu_373_p1 = p_4[7:0];

assign grp_fu_373_p2 = 8'd38;

assign grp_fu_373_p3 = 8'd39;

assign icmp_ln22_fu_127_p2 = ((p_9 == 64'd0) ? 1'b1 : 1'b0);

assign isNeg_fu_253_p3 = add_ln510_fu_247_p2[32'd11];

assign mantissa_fu_231_p4 = {{{{1'd1}, {tmp_3_reg_461}}}, {1'd0}};

assign p_15_address0 = 64'd5;

assign r_V_1_fu_292_p2 = zext_ln15_fu_240_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_282_p1;

assign r_V_fu_286_p2 = zext_ln15_fu_240_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_282_p1;

assign result_V_2_fu_328_p2 = (64'd0 - val_reg_466);

assign result_V_fu_333_p3 = ((p_Result_s_reg_450[0:0] == 1'b1) ? result_V_2_fu_328_p2 : val_reg_466);

assign sext_ln1311_fu_266_p1 = $signed(sub_ln1311_fu_261_p2);

assign sext_ln20_fu_352_p1 = $signed(sub_ln21_fu_346_p2);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_282_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_278_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_278_p1 = $signed(ush_fu_270_p3);

assign shl_ln17_fu_155_p2 = sub_ln17_fu_136_p2 << xor_ln17cast_fu_151_p1;

assign sub_ln1311_fu_261_p2 = (11'd1023 - tmp_2_reg_455);

assign sub_ln17_fu_136_p2 = (8'd0 - v_13_reg_389);

assign sub_ln21_fu_346_p2 = (17'd364 - zext_ln21_fu_343_p1);

assign tmp_1_fu_310_p4 = {{r_V_1_fu_292_p2[116:53]}};

assign tmp_3_fu_227_p1 = data_V_fu_203_p2[51:0];

assign tmp_fu_298_p3 = r_V_fu_286_p2[32'd53];

assign trunc_ln17_fu_141_p1 = p_15_q0[3:0];

assign trunc_ln18_fu_186_p1 = grp_fu_181_p2[7:0];

assign ush_fu_270_p3 = ((isNeg_fu_253_p3[0:0] == 1'b1) ? sext_ln1311_fu_266_p1 : add_ln510_fu_247_p2);

assign v_11_1_fu_190_p2 = (v_13_reg_389 | trunc_ln18_fu_186_p1);

assign v_11_fu_161_p2 = (shl_ln17_fu_155_p2 & grp_fu_373_p4);

assign v_13_fu_115_p1 = p_9[7:0];

assign v_7_fu_119_p1 = p_4[15:0];

assign val_fu_320_p3 = ((isNeg_fu_253_p3[0:0] == 1'b1) ? zext_ln662_fu_306_p1 : tmp_1_fu_310_p4);

assign xor_ln17_fu_145_p2 = (trunc_ln17_fu_141_p1 ^ 4'd15);

assign xor_ln17cast_fu_151_p1 = xor_ln17_fu_145_p2;

assign zext_ln15_fu_240_p1 = mantissa_fu_231_p4;

assign zext_ln21_fu_343_p1 = v_7_reg_395;

assign zext_ln22_fu_365_p1 = icmp_ln22_reg_400;

assign zext_ln510_fu_244_p1 = tmp_2_reg_455;

assign zext_ln662_fu_306_p1 = tmp_fu_298_p3;

endmodule //fn1
