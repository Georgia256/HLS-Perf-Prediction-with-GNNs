// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.209250,HLS_SYN_LAT=20,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=376,HLS_SYN_LUT=2077,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_5,
        ap_return
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [7:0] p_5;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] data_V_fu_83_p1;
reg   [63:0] data_V_reg_399;
wire   [7:0] val_fu_193_p3;
reg   [7:0] val_reg_404;
wire   [63:0] data_V_1_fu_201_p2;
reg   [63:0] data_V_1_reg_410;
reg   [10:0] tmp_11_reg_415;
wire   [51:0] tmp_12_fu_217_p1;
reg   [51:0] tmp_12_reg_421;
wire   [7:0] add_ln16_1_fu_240_p2;
reg   [7:0] add_ln16_1_reg_426;
wire    ap_CS_fsm_state2;
wire   [7:0] val_1_fu_335_p3;
reg   [7:0] val_1_reg_431;
wire    ap_CS_fsm_state3;
wire   [9:0] grp_fu_389_p2;
reg   [9:0] sdiv_ln16_reg_447;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire  signed [31:0] grp_fu_80_p0;
wire   [51:0] tmp_10_fu_97_p1;
wire   [53:0] mantissa_fu_101_p4;
wire   [10:0] tmp_9_fu_87_p4;
wire   [11:0] zext_ln510_fu_115_p1;
wire   [11:0] add_ln510_fu_119_p2;
wire   [10:0] sub_ln1311_fu_133_p2;
wire   [0:0] isNeg_fu_125_p3;
wire  signed [11:0] sext_ln1311_fu_139_p1;
wire   [11:0] ush_fu_143_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_151_p1;
wire   [136:0] zext_ln15_fu_111_p1;
wire   [136:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_155_p1;
wire   [136:0] r_V_fu_159_p2;
wire   [0:0] tmp_fu_171_p3;
wire   [136:0] r_V_1_fu_165_p2;
wire   [7:0] zext_ln662_1_fu_179_p1;
wire   [7:0] tmp_1_fu_183_p4;
wire   [0:0] p_Result_s_fu_221_p3;
wire   [7:0] result_V_2_fu_228_p2;
wire   [7:0] select_ln59_fu_233_p3;
wire   [53:0] mantissa_1_fu_246_p4;
wire   [11:0] zext_ln510_1_fu_259_p1;
wire   [11:0] add_ln510_1_fu_262_p2;
wire   [10:0] sub_ln1311_1_fu_276_p2;
wire   [0:0] isNeg_1_fu_268_p3;
wire  signed [11:0] sext_ln1311_1_fu_281_p1;
wire   [11:0] ush_1_fu_285_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i47_cast_cast_cast_fu_293_p1;
wire   [112:0] zext_ln15_1_fu_255_p1;
wire   [112:0] sh_prom_i_i_i_i_i47_cast_cast_cast_cast_fu_297_p1;
wire   [112:0] r_V_2_fu_301_p2;
wire   [0:0] tmp_8_fu_313_p3;
wire   [112:0] r_V_3_fu_307_p2;
wire   [7:0] zext_ln662_fu_321_p1;
wire   [7:0] tmp_2_fu_325_p4;
wire   [0:0] p_Result_1_fu_346_p3;
wire   [7:0] result_V_4_fu_353_p2;
wire   [7:0] result_V_fu_358_p3;
wire  signed [8:0] sext_ln16_2_fu_369_p1;
wire   [8:0] sub_ln16_fu_373_p2;
wire   [9:0] zext_ln16_fu_379_p1;
wire  signed [9:0] sext_ln16_1_fu_365_p1;
wire  signed [8:0] grp_fu_389_p0;
wire   [9:0] grp_fu_389_p1;
wire   [63:0] grp_fu_80_p1;
reg    grp_fu_389_ap_start;
wire    grp_fu_389_ap_done;
wire    ap_CS_fsm_state21;
reg   [20:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
end

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_80_p0),
    .ce(1'b1),
    .dout(grp_fu_80_p1)
);

fn1_sdiv_9s_10ns_10_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
sdiv_9s_10ns_10_13_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_389_ap_start),
    .done(grp_fu_389_ap_done),
    .din0(grp_fu_389_p0),
    .din1(grp_fu_389_p1),
    .ce(1'b1),
    .dout(grp_fu_389_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln16_1_reg_426 <= add_ln16_1_fu_240_p2;
        val_1_reg_431 <= val_1_fu_335_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_1_reg_410 <= data_V_1_fu_201_p2;
        data_V_reg_399 <= data_V_fu_83_p1;
        tmp_11_reg_415 <= {{data_V_1_fu_201_p2[62:52]}};
        tmp_12_reg_421 <= tmp_12_fu_217_p1;
        val_reg_404 <= val_fu_193_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sdiv_ln16_reg_447 <= grp_fu_389_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_389_ap_start = 1'b1;
    end else begin
        grp_fu_389_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_1_fu_240_p2 = ($signed(select_ln59_fu_233_p3) + $signed(8'd169));

assign add_ln510_1_fu_262_p2 = ($signed(zext_ln510_1_fu_259_p1) + $signed(12'd3073));

assign add_ln510_fu_119_p2 = ($signed(zext_ln510_fu_115_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_return = grp_fu_80_p1;

assign data_V_1_fu_201_p2 = (data_V_fu_83_p1 ^ 64'd9223372036854775808);

assign data_V_fu_83_p1 = p;

assign grp_fu_389_p0 = $signed(add_ln16_1_reg_426);

assign grp_fu_389_p1 = ($signed(zext_ln16_fu_379_p1) + $signed(sext_ln16_1_fu_365_p1));

assign grp_fu_80_p0 = $signed(sdiv_ln16_reg_447);

assign isNeg_1_fu_268_p3 = add_ln510_1_fu_262_p2[32'd11];

assign isNeg_fu_125_p3 = add_ln510_fu_119_p2[32'd11];

assign mantissa_1_fu_246_p4 = {{{{1'd1}, {tmp_12_reg_421}}}, {1'd0}};

assign mantissa_fu_101_p4 = {{{{1'd1}, {tmp_10_fu_97_p1}}}, {1'd0}};

assign p_Result_1_fu_346_p3 = data_V_1_reg_410[32'd63];

assign p_Result_s_fu_221_p3 = data_V_reg_399[32'd63];

assign r_V_1_fu_165_p2 = zext_ln15_fu_111_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_155_p1;

assign r_V_2_fu_301_p2 = zext_ln15_1_fu_255_p1 >> sh_prom_i_i_i_i_i47_cast_cast_cast_cast_fu_297_p1;

assign r_V_3_fu_307_p2 = zext_ln15_1_fu_255_p1 << sh_prom_i_i_i_i_i47_cast_cast_cast_cast_fu_297_p1;

assign r_V_fu_159_p2 = zext_ln15_fu_111_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_155_p1;

assign result_V_2_fu_228_p2 = (8'd0 - val_reg_404);

assign result_V_4_fu_353_p2 = (8'd0 - val_1_reg_431);

assign result_V_fu_358_p3 = ((p_Result_1_fu_346_p3[0:0] == 1'b1) ? result_V_4_fu_353_p2 : val_1_reg_431);

assign select_ln59_fu_233_p3 = ((p_Result_s_fu_221_p3[0:0] == 1'b1) ? result_V_2_fu_228_p2 : val_reg_404);

assign sext_ln1311_1_fu_281_p1 = $signed(sub_ln1311_1_fu_276_p2);

assign sext_ln1311_fu_139_p1 = $signed(sub_ln1311_fu_133_p2);

assign sext_ln16_1_fu_365_p1 = $signed(result_V_fu_358_p3);

assign sext_ln16_2_fu_369_p1 = $signed(p_5);

assign sh_prom_i_i_i_i_i47_cast_cast_cast_cast_fu_297_p1 = $unsigned(sh_prom_i_i_i_i_i47_cast_cast_cast_fu_293_p1);

assign sh_prom_i_i_i_i_i47_cast_cast_cast_fu_293_p1 = $signed(ush_1_fu_285_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_155_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_151_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_151_p1 = $signed(ush_fu_143_p3);

assign sub_ln1311_1_fu_276_p2 = (11'd1023 - tmp_11_reg_415);

assign sub_ln1311_fu_133_p2 = (11'd1023 - tmp_9_fu_87_p4);

assign sub_ln16_fu_373_p2 = ($signed(9'd128) - $signed(sext_ln16_2_fu_369_p1));

assign tmp_10_fu_97_p1 = data_V_fu_83_p1[51:0];

assign tmp_12_fu_217_p1 = data_V_1_fu_201_p2[51:0];

assign tmp_1_fu_183_p4 = {{r_V_1_fu_165_p2[60:53]}};

assign tmp_2_fu_325_p4 = {{r_V_3_fu_307_p2[60:53]}};

assign tmp_8_fu_313_p3 = r_V_2_fu_301_p2[32'd53];

assign tmp_9_fu_87_p4 = {{data_V_fu_83_p1[62:52]}};

assign tmp_fu_171_p3 = r_V_fu_159_p2[32'd53];

assign ush_1_fu_285_p3 = ((isNeg_1_fu_268_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_281_p1 : add_ln510_1_fu_262_p2);

assign ush_fu_143_p3 = ((isNeg_fu_125_p3[0:0] == 1'b1) ? sext_ln1311_fu_139_p1 : add_ln510_fu_119_p2);

assign val_1_fu_335_p3 = ((isNeg_1_fu_268_p3[0:0] == 1'b1) ? zext_ln662_fu_321_p1 : tmp_2_fu_325_p4);

assign val_fu_193_p3 = ((isNeg_fu_125_p3[0:0] == 1'b1) ? zext_ln662_1_fu_179_p1 : tmp_1_fu_183_p4);

assign zext_ln15_1_fu_255_p1 = mantissa_1_fu_246_p4;

assign zext_ln15_fu_111_p1 = mantissa_fu_101_p4;

assign zext_ln16_fu_379_p1 = sub_ln16_fu_373_p2;

assign zext_ln510_1_fu_259_p1 = tmp_11_reg_415;

assign zext_ln510_fu_115_p1 = tmp_9_fu_87_p4;

assign zext_ln662_1_fu_179_p1 = tmp_fu_171_p3;

assign zext_ln662_fu_321_p1 = tmp_8_fu_313_p3;

endmodule //fn1
