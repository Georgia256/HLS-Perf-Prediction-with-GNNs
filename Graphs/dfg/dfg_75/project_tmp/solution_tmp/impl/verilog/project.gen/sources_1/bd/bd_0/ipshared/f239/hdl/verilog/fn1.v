// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=50,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3024,HLS_SYN_LUT=5097,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_9,
        p_11,
        p_13_address0,
        p_13_ce0,
        p_13_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p;
input  [63:0] p_7;
input  [15:0] p_9;
input  [63:0] p_11;
output  [0:0] p_13_address0;
output   p_13_ce0;
input  [31:0] p_13_q0;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_13_ce0;

(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_157_p2;
reg   [63:0] reg_168;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state35;
wire   [63:0] sub_ln17_1_fu_173_p2;
reg   [63:0] sub_ln17_1_reg_645;
wire    ap_CS_fsm_state2;
wire   [7:0] trunc_ln16_fu_179_p1;
reg   [7:0] trunc_ln16_reg_655;
wire    ap_CS_fsm_state3;
reg  signed [31:0] p_13_load_reg_670;
wire    ap_CS_fsm_state4;
reg   [0:0] tmp_reg_675;
wire   [7:0] trunc_ln16_1_fu_200_p1;
reg   [7:0] trunc_ln16_1_reg_681;
wire    ap_CS_fsm_state5;
wire   [64:0] grp_fu_207_p2;
reg   [64:0] mul_ln15_reg_691;
wire    ap_CS_fsm_state6;
reg   [7:0] tmp_2_reg_696;
wire   [7:0] select_ln15_1_fu_250_p3;
reg   [7:0] select_ln15_1_reg_702;
wire    ap_CS_fsm_state7;
wire   [7:0] v_fu_266_p2;
reg   [7:0] v_reg_707;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [63:0] grp_fu_162_p1;
reg   [63:0] conv_reg_718;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg   [0:0] p_Result_1_reg_728;
wire   [7:0] val_1_fu_393_p3;
reg   [7:0] val_1_reg_733;
wire   [7:0] result_V_7_fu_406_p3;
reg   [7:0] result_V_7_reg_739;
wire    ap_CS_fsm_state16;
wire   [17:0] sub_ln17_2_fu_433_p2;
reg   [17:0] sub_ln17_2_reg_745;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire   [63:0] grp_fu_165_p1;
reg   [63:0] v_5_reg_755;
wire    ap_CS_fsm_state28;
wire   [63:0] grp_fu_152_p2;
reg   [63:0] add_reg_760;
reg   [0:0] p_Result_s_reg_765;
wire    ap_CS_fsm_state36;
wire   [51:0] tmp_18_fu_471_p1;
reg   [51:0] tmp_18_reg_770;
wire   [0:0] isNeg_fu_485_p3;
reg   [0:0] isNeg_reg_775;
wire   [11:0] ush_fu_503_p3;
reg   [11:0] ush_reg_780;
wire   [31:0] val_fu_565_p3;
reg   [31:0] val_reg_785;
wire    ap_CS_fsm_state37;
wire   [31:0] result_V_2_fu_572_p2;
reg   [31:0] result_V_2_reg_790;
wire   [31:0] add_ln19_1_fu_627_p2;
reg   [31:0] add_ln19_1_reg_795;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
reg   [63:0] grp_fu_157_p0;
reg   [63:0] grp_fu_157_p1;
wire    ap_CS_fsm_state29;
wire   [31:0] grp_fu_162_p0;
wire  signed [31:0] grp_fu_165_p0;
wire   [16:0] grp_fu_187_p0;
wire  signed [31:0] tmp_fu_192_p1;
wire  signed [31:0] trunc_ln16_1_fu_200_p0;
wire   [33:0] grp_fu_207_p1;
wire   [64:0] sub_ln15_1_fu_223_p2;
wire   [7:0] tmp_1_fu_228_p4;
wire   [7:0] select_ln15_fu_238_p3;
wire   [7:0] sub_ln15_2_fu_244_p2;
wire   [7:0] sub_ln15_fu_256_p2;
wire   [7:0] sub_ln16_fu_261_p2;
wire   [63:0] data_V_1_fu_275_p1;
wire   [51:0] tmp_20_fu_297_p1;
wire   [53:0] mantissa_1_fu_301_p4;
wire   [10:0] tmp_19_fu_287_p4;
wire   [11:0] zext_ln510_1_fu_315_p1;
wire   [11:0] add_ln510_1_fu_319_p2;
wire   [10:0] sub_ln1311_1_fu_333_p2;
wire   [0:0] isNeg_1_fu_325_p3;
wire  signed [11:0] sext_ln1311_1_fu_339_p1;
wire   [11:0] ush_1_fu_343_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i23_cast_cast_cast_fu_351_p1;
wire   [112:0] zext_ln15_1_fu_311_p1;
wire   [112:0] sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_355_p1;
wire   [112:0] r_V_2_fu_359_p2;
wire   [0:0] tmp_16_fu_371_p3;
wire   [112:0] r_V_3_fu_365_p2;
wire   [7:0] zext_ln662_1_fu_379_p1;
wire   [7:0] tmp_s_fu_383_p4;
wire   [7:0] result_V_6_fu_401_p2;
wire   [16:0] zext_ln16_fu_412_p1;
wire   [16:0] sub_ln17_fu_415_p2;
wire   [16:0] grp_fu_187_p2;
wire   [16:0] trunc_ln17_fu_425_p1;
wire  signed [17:0] sext_ln17_fu_421_p1;
wire  signed [17:0] sext_ln17_1_fu_429_p1;
wire   [63:0] bitcast_ln19_fu_443_p1;
wire   [63:0] data_V_fu_447_p2;
wire   [10:0] tmp_17_fu_461_p4;
wire   [11:0] zext_ln510_fu_475_p1;
wire   [11:0] add_ln510_fu_479_p2;
wire   [10:0] sub_ln1311_fu_493_p2;
wire  signed [11:0] sext_ln1311_fu_499_p1;
wire   [53:0] mantissa_fu_511_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_524_p1;
wire   [136:0] zext_ln15_fu_520_p1;
wire   [136:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_527_p1;
wire   [136:0] r_V_fu_531_p2;
wire   [0:0] tmp_9_fu_543_p3;
wire   [136:0] r_V_1_fu_537_p2;
wire   [31:0] zext_ln662_fu_551_p1;
wire   [31:0] tmp_8_fu_555_p4;
wire   [13:0] shl_ln_fu_583_p3;
wire   [9:0] shl_ln19_1_fu_594_p3;
wire  signed [14:0] sext_ln19_fu_590_p1;
wire  signed [14:0] sext_ln19_1_fu_601_p1;
wire   [14:0] sub_ln19_fu_605_p2;
wire   [31:0] add_ln19_fu_615_p2;
wire   [31:0] result_V_fu_578_p3;
wire   [31:0] sub_ln19_1_fu_621_p2;
wire  signed [31:0] sext_ln19_2_fu_611_p1;
wire   [8:0] grp_fu_636_p0;
wire   [7:0] grp_fu_636_p2;
wire    ap_CS_fsm_state51;
reg    grp_fu_187_ap_start;
wire    grp_fu_187_ap_done;
reg    grp_fu_636_ap_start;
wire    grp_fu_636_ap_done;
reg   [50:0] ap_NS_fsm;
wire   [63:0] grp_fu_187_p00;
wire   [31:0] grp_fu_636_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
end

fn1_dsub_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4895412794951724488),
    .din1(reg_168),
    .ce(1'b1),
    .dout(grp_fu_152_p2)
);

fn1_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_157_p0),
    .din1(grp_fu_157_p1),
    .ce(1'b1),
    .dout(grp_fu_157_p2)
);

fn1_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_162_p0),
    .ce(1'b1),
    .dout(grp_fu_162_p1)
);

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_165_p0),
    .ce(1'b1),
    .dout(grp_fu_165_p1)
);

fn1_sdiv_17ns_64ns_17_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 17 ))
sdiv_17ns_64ns_17_21_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_187_ap_start),
    .done(grp_fu_187_ap_done),
    .din0(grp_fu_187_p0),
    .din1(sub_ln17_1_reg_645),
    .ce(1'b1),
    .dout(grp_fu_187_p2)
);

fn1_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_13_load_reg_670),
    .din1(grp_fu_207_p1),
    .ce(1'b1),
    .dout(grp_fu_207_p2)
);

fn1_srem_9ns_32ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
srem_9ns_32ns_8_13_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_636_ap_start),
    .done(grp_fu_636_ap_done),
    .din0(grp_fu_636_p0),
    .din1(add_ln19_1_reg_795),
    .ce(1'b1),
    .dout(grp_fu_636_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_ln19_1_reg_795 <= add_ln19_1_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_reg_760 <= grp_fu_152_p2;
        v_5_reg_755 <= grp_fu_165_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_reg_718 <= grp_fu_162_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        isNeg_reg_775 <= add_ln510_fu_479_p2[32'd11];
        p_Result_s_reg_765 <= data_V_fu_447_p2[32'd63];
        tmp_18_reg_770 <= tmp_18_fu_471_p1;
        ush_reg_780 <= ush_fu_503_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln15_reg_691 <= grp_fu_207_p2;
        tmp_2_reg_696 <= {{grp_fu_207_p2[55:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_13_load_reg_670 <= p_13_q0;
        tmp_reg_675 <= tmp_fu_192_p1[32'd31];
        trunc_ln16_1_reg_681 <= trunc_ln16_1_fu_200_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Result_1_reg_728 <= data_V_1_fu_275_p1[32'd63];
        val_1_reg_733 <= val_1_fu_393_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_168 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_s_reg_765 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        result_V_2_reg_790 <= result_V_2_fu_572_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        result_V_7_reg_739 <= result_V_7_fu_406_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        select_ln15_1_reg_702 <= select_ln15_1_fu_250_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sub_ln17_1_reg_645 <= sub_ln17_1_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sub_ln17_2_reg_745 <= sub_ln17_2_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln16_reg_655 <= trunc_ln16_fu_179_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_reg_707 <= v_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        val_reg_785 <= val_fu_565_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_157_p0 = add_reg_760;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_157_p0 = conv_reg_718;
    end else begin
        grp_fu_157_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_157_p1 = v_5_reg_755;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_157_p1 = p_7;
    end else begin
        grp_fu_157_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_187_ap_start = 1'b1;
    end else begin
        grp_fu_187_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_636_ap_start = 1'b1;
    end else begin
        grp_fu_636_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_13_ce0 = 1'b1;
    end else begin
        p_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_1_fu_627_p2 = ($signed(sub_ln19_1_fu_621_p2) + $signed(sext_ln19_2_fu_611_p1));

assign add_ln19_fu_615_p2 = (p + 32'd47585);

assign add_ln510_1_fu_319_p2 = ($signed(zext_ln510_1_fu_315_p1) + $signed(12'd3073));

assign add_ln510_fu_479_p2 = ($signed(zext_ln510_fu_475_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = grp_fu_636_p2[7:0];

assign bitcast_ln19_fu_443_p1 = reg_168;

assign data_V_1_fu_275_p1 = p_7;

assign data_V_fu_447_p2 = (bitcast_ln19_fu_443_p1 ^ 64'd9223372036854775808);

assign grp_fu_162_p0 = v_reg_707;

assign grp_fu_165_p0 = $signed(sub_ln17_2_reg_745);

assign grp_fu_187_p0 = grp_fu_187_p00;

assign grp_fu_187_p00 = p_9;

assign grp_fu_207_p1 = 65'd5493909840;

assign grp_fu_636_p0 = grp_fu_636_p00;

assign grp_fu_636_p00 = v_reg_707;

assign isNeg_1_fu_325_p3 = add_ln510_1_fu_319_p2[32'd11];

assign isNeg_fu_485_p3 = add_ln510_fu_479_p2[32'd11];

assign mantissa_1_fu_301_p4 = {{{{1'd1}, {tmp_20_fu_297_p1}}}, {1'd0}};

assign mantissa_fu_511_p4 = {{{{1'd1}, {tmp_18_reg_770}}}, {1'd0}};

assign p_13_address0 = 64'd1;

assign r_V_1_fu_537_p2 = zext_ln15_fu_520_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_527_p1;

assign r_V_2_fu_359_p2 = zext_ln15_1_fu_311_p1 >> sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_355_p1;

assign r_V_3_fu_365_p2 = zext_ln15_1_fu_311_p1 << sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_355_p1;

assign r_V_fu_531_p2 = zext_ln15_fu_520_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_527_p1;

assign result_V_2_fu_572_p2 = (32'd0 - val_fu_565_p3);

assign result_V_6_fu_401_p2 = (8'd0 - val_1_reg_733);

assign result_V_7_fu_406_p3 = ((p_Result_1_reg_728[0:0] == 1'b1) ? result_V_6_fu_401_p2 : val_1_reg_733);

assign result_V_fu_578_p3 = ((p_Result_s_reg_765[0:0] == 1'b1) ? result_V_2_reg_790 : val_reg_785);

assign select_ln15_1_fu_250_p3 = ((tmp_reg_675[0:0] == 1'b1) ? sub_ln15_2_fu_244_p2 : tmp_2_reg_696);

assign select_ln15_fu_238_p3 = ((tmp_reg_675[0:0] == 1'b1) ? tmp_1_fu_228_p4 : tmp_2_reg_696);

assign sext_ln1311_1_fu_339_p1 = $signed(sub_ln1311_1_fu_333_p2);

assign sext_ln1311_fu_499_p1 = $signed(sub_ln1311_fu_493_p2);

assign sext_ln17_1_fu_429_p1 = $signed(trunc_ln17_fu_425_p1);

assign sext_ln17_fu_421_p1 = $signed(sub_ln17_fu_415_p2);

assign sext_ln19_1_fu_601_p1 = $signed(shl_ln19_1_fu_594_p3);

assign sext_ln19_2_fu_611_p1 = $signed(sub_ln19_fu_605_p2);

assign sext_ln19_fu_590_p1 = $signed(shl_ln_fu_583_p3);

assign sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_355_p1 = $unsigned(sh_prom_i_i_i_i_i23_cast_cast_cast_fu_351_p1);

assign sh_prom_i_i_i_i_i23_cast_cast_cast_fu_351_p1 = $signed(ush_1_fu_343_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_527_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_524_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_524_p1 = $signed(ush_reg_780);

assign shl_ln19_1_fu_594_p3 = {{result_V_7_reg_739}, {2'd0}};

assign shl_ln_fu_583_p3 = {{result_V_7_reg_739}, {6'd0}};

assign sub_ln1311_1_fu_333_p2 = (11'd1023 - tmp_19_fu_287_p4);

assign sub_ln1311_fu_493_p2 = (11'd1023 - tmp_17_fu_461_p4);

assign sub_ln15_1_fu_223_p2 = (65'd0 - mul_ln15_reg_691);

assign sub_ln15_2_fu_244_p2 = (8'd0 - select_ln15_fu_238_p3);

assign sub_ln15_fu_256_p2 = (8'd107 - trunc_ln16_reg_655);

assign sub_ln16_fu_261_p2 = (sub_ln15_fu_256_p2 - trunc_ln16_1_reg_681);

assign sub_ln17_1_fu_173_p2 = (64'd359 - p_11);

assign sub_ln17_2_fu_433_p2 = ($signed(sext_ln17_fu_421_p1) - $signed(sext_ln17_1_fu_429_p1));

assign sub_ln17_fu_415_p2 = (17'd0 - zext_ln16_fu_412_p1);

assign sub_ln19_1_fu_621_p2 = (add_ln19_fu_615_p2 - result_V_fu_578_p3);

assign sub_ln19_fu_605_p2 = ($signed(sext_ln19_fu_590_p1) - $signed(sext_ln19_1_fu_601_p1));

assign tmp_16_fu_371_p3 = r_V_2_fu_359_p2[32'd53];

assign tmp_17_fu_461_p4 = {{data_V_fu_447_p2[62:52]}};

assign tmp_18_fu_471_p1 = data_V_fu_447_p2[51:0];

assign tmp_19_fu_287_p4 = {{data_V_1_fu_275_p1[62:52]}};

assign tmp_1_fu_228_p4 = {{sub_ln15_1_fu_223_p2[55:48]}};

assign tmp_20_fu_297_p1 = data_V_1_fu_275_p1[51:0];

assign tmp_8_fu_555_p4 = {{r_V_1_fu_537_p2[84:53]}};

assign tmp_9_fu_543_p3 = r_V_fu_531_p2[32'd53];

assign tmp_fu_192_p1 = p_13_q0;

assign tmp_s_fu_383_p4 = {{r_V_3_fu_365_p2[60:53]}};

assign trunc_ln16_1_fu_200_p0 = p_13_q0;

assign trunc_ln16_1_fu_200_p1 = trunc_ln16_1_fu_200_p0[7:0];

assign trunc_ln16_fu_179_p1 = p_9[7:0];

assign trunc_ln17_fu_425_p1 = grp_fu_187_p2[16:0];

assign ush_1_fu_343_p3 = ((isNeg_1_fu_325_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_339_p1 : add_ln510_1_fu_319_p2);

assign ush_fu_503_p3 = ((isNeg_fu_485_p3[0:0] == 1'b1) ? sext_ln1311_fu_499_p1 : add_ln510_fu_479_p2);

assign v_fu_266_p2 = (sub_ln16_fu_261_p2 - select_ln15_1_reg_702);

assign val_1_fu_393_p3 = ((isNeg_1_fu_325_p3[0:0] == 1'b1) ? zext_ln662_1_fu_379_p1 : tmp_s_fu_383_p4);

assign val_fu_565_p3 = ((isNeg_reg_775[0:0] == 1'b1) ? zext_ln662_fu_551_p1 : tmp_8_fu_555_p4);

assign zext_ln15_1_fu_311_p1 = mantissa_1_fu_301_p4;

assign zext_ln15_fu_520_p1 = mantissa_fu_511_p4;

assign zext_ln16_fu_412_p1 = p_9;

assign zext_ln510_1_fu_315_p1 = tmp_19_fu_287_p4;

assign zext_ln510_fu_475_p1 = tmp_17_fu_461_p4;

assign zext_ln662_1_fu_379_p1 = tmp_16_fu_371_p3;

assign zext_ln662_fu_551_p1 = tmp_9_fu_543_p3;

endmodule //fn1
