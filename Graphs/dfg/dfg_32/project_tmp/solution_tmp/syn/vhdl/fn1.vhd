-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fn1 is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p : IN STD_LOGIC_VECTOR (63 downto 0);
    p_7 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fn1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.574000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=40,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal trunc_ln15_fu_32_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln15_fu_36_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_4_fu_42_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln16_fu_48_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_4_2_fu_54_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    add_ln16_fu_48_p2 <= std_logic_vector(unsigned(v_4_fu_42_p2) + unsigned(ap_const_lv8_1));
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_4_2_fu_54_p2),32));
    sub_ln15_fu_36_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) - unsigned(trunc_ln15_fu_32_p1));
    trunc_ln15_fu_32_p1 <= p_7(8 - 1 downto 0);
    v_4_2_fu_54_p2 <= std_logic_vector(unsigned(add_ln16_fu_48_p2) + unsigned(trunc_ln15_fu_32_p1));
    v_4_fu_42_p2 <= (sub_ln15_fu_36_p2 xor ap_const_lv8_80);
end behav;
