// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=59,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3165,HLS_SYN_LUT=8244,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_9,
        p_11,
        ap_return
);

parameter    ap_ST_fsm_state1 = 60'd1;
parameter    ap_ST_fsm_state2 = 60'd2;
parameter    ap_ST_fsm_state3 = 60'd4;
parameter    ap_ST_fsm_state4 = 60'd8;
parameter    ap_ST_fsm_state5 = 60'd16;
parameter    ap_ST_fsm_state6 = 60'd32;
parameter    ap_ST_fsm_state7 = 60'd64;
parameter    ap_ST_fsm_state8 = 60'd128;
parameter    ap_ST_fsm_state9 = 60'd256;
parameter    ap_ST_fsm_state10 = 60'd512;
parameter    ap_ST_fsm_state11 = 60'd1024;
parameter    ap_ST_fsm_state12 = 60'd2048;
parameter    ap_ST_fsm_state13 = 60'd4096;
parameter    ap_ST_fsm_state14 = 60'd8192;
parameter    ap_ST_fsm_state15 = 60'd16384;
parameter    ap_ST_fsm_state16 = 60'd32768;
parameter    ap_ST_fsm_state17 = 60'd65536;
parameter    ap_ST_fsm_state18 = 60'd131072;
parameter    ap_ST_fsm_state19 = 60'd262144;
parameter    ap_ST_fsm_state20 = 60'd524288;
parameter    ap_ST_fsm_state21 = 60'd1048576;
parameter    ap_ST_fsm_state22 = 60'd2097152;
parameter    ap_ST_fsm_state23 = 60'd4194304;
parameter    ap_ST_fsm_state24 = 60'd8388608;
parameter    ap_ST_fsm_state25 = 60'd16777216;
parameter    ap_ST_fsm_state26 = 60'd33554432;
parameter    ap_ST_fsm_state27 = 60'd67108864;
parameter    ap_ST_fsm_state28 = 60'd134217728;
parameter    ap_ST_fsm_state29 = 60'd268435456;
parameter    ap_ST_fsm_state30 = 60'd536870912;
parameter    ap_ST_fsm_state31 = 60'd1073741824;
parameter    ap_ST_fsm_state32 = 60'd2147483648;
parameter    ap_ST_fsm_state33 = 60'd4294967296;
parameter    ap_ST_fsm_state34 = 60'd8589934592;
parameter    ap_ST_fsm_state35 = 60'd17179869184;
parameter    ap_ST_fsm_state36 = 60'd34359738368;
parameter    ap_ST_fsm_state37 = 60'd68719476736;
parameter    ap_ST_fsm_state38 = 60'd137438953472;
parameter    ap_ST_fsm_state39 = 60'd274877906944;
parameter    ap_ST_fsm_state40 = 60'd549755813888;
parameter    ap_ST_fsm_state41 = 60'd1099511627776;
parameter    ap_ST_fsm_state42 = 60'd2199023255552;
parameter    ap_ST_fsm_state43 = 60'd4398046511104;
parameter    ap_ST_fsm_state44 = 60'd8796093022208;
parameter    ap_ST_fsm_state45 = 60'd17592186044416;
parameter    ap_ST_fsm_state46 = 60'd35184372088832;
parameter    ap_ST_fsm_state47 = 60'd70368744177664;
parameter    ap_ST_fsm_state48 = 60'd140737488355328;
parameter    ap_ST_fsm_state49 = 60'd281474976710656;
parameter    ap_ST_fsm_state50 = 60'd562949953421312;
parameter    ap_ST_fsm_state51 = 60'd1125899906842624;
parameter    ap_ST_fsm_state52 = 60'd2251799813685248;
parameter    ap_ST_fsm_state53 = 60'd4503599627370496;
parameter    ap_ST_fsm_state54 = 60'd9007199254740992;
parameter    ap_ST_fsm_state55 = 60'd18014398509481984;
parameter    ap_ST_fsm_state56 = 60'd36028797018963968;
parameter    ap_ST_fsm_state57 = 60'd72057594037927936;
parameter    ap_ST_fsm_state58 = 60'd144115188075855872;
parameter    ap_ST_fsm_state59 = 60'd288230376151711744;
parameter    ap_ST_fsm_state60 = 60'd576460752303423488;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [31:0] p_7;
input  [31:0] p_9;
input  [63:0] p_11;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [59:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_140_p2;
reg   [31:0] reg_167;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state21;
wire   [31:0] data_V_fu_172_p1;
reg   [31:0] data_V_reg_1018;
wire   [22:0] tmp_24_fu_186_p1;
reg   [22:0] tmp_24_reg_1023;
wire   [0:0] isNeg_fu_200_p3;
reg   [0:0] isNeg_reg_1028;
wire   [8:0] ush_fu_218_p3;
reg   [8:0] ush_reg_1034;
wire   [7:0] val_fu_280_p3;
reg   [7:0] val_reg_1039;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln22_fu_336_p2;
reg   [0:0] icmp_ln22_reg_1045;
wire   [7:0] xor_ln18_fu_361_p2;
reg   [7:0] xor_ln18_reg_1050;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [0:0] p_Result_1_reg_1070;
wire   [31:0] val_2_fu_493_p3;
reg   [31:0] val_2_reg_1075;
wire   [63:0] grp_fu_164_p1;
reg   [63:0] conv5_reg_1081;
wire    ap_CS_fsm_state9;
wire   [31:0] result_V_9_fu_506_p3;
reg   [31:0] result_V_9_reg_1086;
wire  signed [15:0] v_13_fu_512_p1;
reg  signed [15:0] v_13_reg_1091;
wire    ap_CS_fsm_state10;
wire   [16:0] sub_ln20_fu_520_p2;
reg   [16:0] sub_ln20_reg_1096;
wire   [7:0] trunc_ln21_1_fu_526_p1;
reg   [7:0] trunc_ln21_1_reg_1101;
wire   [31:0] sub_ln21_fu_535_p2;
reg   [31:0] sub_ln21_reg_1106;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [7:0] add_ln21_1_fu_558_p2;
reg   [7:0] add_ln21_1_reg_1121;
wire   [31:0] grp_fu_148_p1;
reg   [31:0] conv2_reg_1126;
wire   [127:0] grp_fu_548_p2;
reg   [127:0] mul_ln20_reg_1131;
wire    ap_CS_fsm_state15;
wire   [63:0] grp_fu_160_p2;
reg   [63:0] mul_reg_1136;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln20_fu_580_p2;
reg   [0:0] icmp_ln20_reg_1141;
wire   [31:0] grp_fu_151_p1;
reg   [31:0] conv_reg_1146;
reg   [31:0] conv1_reg_1151;
wire   [31:0] grp_fu_144_p2;
reg   [31:0] dc_2_reg_1156;
wire   [31:0] data_V_3_fu_585_p1;
reg   [31:0] data_V_3_reg_1161;
wire    ap_CS_fsm_state22;
wire   [22:0] tmp_30_fu_599_p1;
reg   [22:0] tmp_30_reg_1166;
wire   [0:0] isNeg_3_fu_613_p3;
reg   [0:0] isNeg_3_reg_1171;
wire   [8:0] ush_3_fu_631_p3;
reg   [8:0] ush_3_reg_1176;
wire   [31:0] data_V_4_fu_639_p1;
reg   [31:0] data_V_4_reg_1181;
wire   [22:0] tmp_32_fu_652_p1;
reg   [22:0] tmp_32_reg_1186;
wire   [0:0] isNeg_4_fu_666_p3;
reg   [0:0] isNeg_4_reg_1191;
wire   [8:0] ush_4_fu_684_p3;
reg   [8:0] ush_4_reg_1196;
reg   [10:0] tmp_25_reg_1201;
wire    ap_CS_fsm_state23;
wire   [51:0] tmp_26_fu_706_p1;
reg   [51:0] tmp_26_reg_1207;
wire   [7:0] select_ln1312_2_fu_764_p3;
reg   [7:0] select_ln1312_2_reg_1212;
wire   [7:0] sub_ln59_fu_771_p2;
reg   [7:0] sub_ln59_reg_1217;
wire   [31:0] val_3_fu_831_p3;
reg   [31:0] val_3_reg_1222;
wire   [31:0] xor_ln22_1_fu_957_p2;
reg   [31:0] xor_ln22_1_reg_1228;
wire    ap_CS_fsm_state24;
wire   [31:0] add_ln22_fu_982_p2;
reg   [31:0] add_ln22_reg_1233;
wire    ap_CS_fsm_state25;
reg   [31:0] grp_fu_140_p0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_148_p0;
reg   [63:0] grp_fu_151_p0;
wire  signed [31:0] grp_fu_164_p0;
wire   [7:0] tmp_23_fu_176_p4;
wire   [8:0] zext_ln341_fu_190_p1;
wire   [8:0] add_ln341_fu_194_p2;
wire   [7:0] sub_ln1311_fu_208_p2;
wire  signed [8:0] sext_ln1311_fu_214_p1;
wire   [24:0] mantissa_fu_226_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_239_p1;
wire   [54:0] zext_ln15_fu_235_p1;
wire   [54:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_242_p1;
wire   [54:0] r_V_fu_246_p2;
wire   [0:0] tmp_fu_258_p3;
wire   [54:0] r_V_1_fu_252_p2;
wire   [7:0] zext_ln662_fu_266_p1;
wire   [7:0] tmp_1_fu_270_p4;
wire   [78:0] zext_ln68_fu_287_p1;
wire   [78:0] sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_291_p1;
wire   [78:0] r_V_2_fu_295_p2;
wire   [0:0] tmp_2_fu_307_p3;
wire   [78:0] r_V_3_fu_301_p2;
wire   [31:0] zext_ln662_1_fu_315_p1;
wire   [31:0] tmp_s_fu_319_p4;
wire   [31:0] val_1_fu_329_p3;
wire   [0:0] p_Result_s_fu_342_p3;
wire   [7:0] result_V_2_fu_349_p2;
wire   [7:0] result_V_fu_354_p3;
wire   [63:0] data_V_2_fu_375_p1;
wire   [51:0] tmp_28_fu_397_p1;
wire   [53:0] mantissa_2_fu_401_p4;
wire   [10:0] tmp_27_fu_387_p4;
wire   [11:0] zext_ln510_1_fu_415_p1;
wire   [11:0] add_ln510_1_fu_419_p2;
wire   [10:0] sub_ln1311_2_fu_433_p2;
wire   [0:0] isNeg_2_fu_425_p3;
wire  signed [11:0] sext_ln1311_2_fu_439_p1;
wire   [11:0] ush_2_fu_443_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i73_cast_cast_cast_fu_451_p1;
wire   [136:0] zext_ln15_1_fu_411_p1;
wire   [136:0] sh_prom_i_i_i_i_i73_cast_cast_cast_cast_fu_455_p1;
wire   [136:0] r_V_6_fu_459_p2;
wire   [0:0] tmp_12_fu_471_p3;
wire   [136:0] r_V_7_fu_465_p2;
wire   [31:0] zext_ln662_3_fu_479_p1;
wire   [31:0] tmp_6_fu_483_p4;
wire   [31:0] result_V_5_fu_501_p2;
wire  signed [16:0] sext_ln20_1_fu_516_p1;
wire   [31:0] add_ln21_fu_530_p2;
wire  signed [63:0] sext_ln19_1_fu_541_p1;
wire   [63:0] grp_fu_548_p0;
wire   [64:0] grp_fu_548_p1;
wire   [7:0] trunc_ln21_fu_554_p1;
wire  signed [30:0] sext_ln19_fu_563_p1;
wire   [30:0] add_ln19_fu_566_p2;
wire  signed [63:0] sext_ln20_fu_572_p1;
wire   [127:0] zext_ln20_1_fu_576_p1;
wire   [7:0] tmp_29_fu_589_p4;
wire   [8:0] zext_ln341_1_fu_603_p1;
wire   [8:0] add_ln341_1_fu_607_p2;
wire   [7:0] sub_ln1311_3_fu_621_p2;
wire  signed [8:0] sext_ln1311_3_fu_627_p1;
wire   [7:0] tmp_31_fu_642_p4;
wire   [8:0] zext_ln341_2_fu_656_p1;
wire   [8:0] add_ln341_2_fu_660_p2;
wire   [7:0] sub_ln1311_4_fu_674_p2;
wire  signed [8:0] sext_ln1311_4_fu_680_p1;
wire   [63:0] grp_fu_155_p2;
wire   [63:0] data_V_1_fu_692_p1;
wire   [24:0] mantissa_3_fu_710_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i101_cast_cast_cast_fu_723_p1;
wire   [110:0] zext_ln15_2_fu_719_p1;
wire   [110:0] sh_prom_i_i_i_i_i101_cast_cast_cast_cast_fu_726_p1;
wire   [110:0] r_V_8_fu_730_p2;
wire   [0:0] tmp_17_fu_742_p3;
wire   [110:0] r_V_9_fu_736_p2;
wire   [7:0] zext_ln662_4_fu_750_p1;
wire   [7:0] tmp_9_fu_754_p4;
wire   [24:0] mantissa_4_fu_777_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i135_cast_cast_cast_fu_790_p1;
wire   [78:0] zext_ln15_3_fu_786_p1;
wire   [78:0] sh_prom_i_i_i_i_i135_cast_cast_cast_cast_fu_793_p1;
wire   [78:0] r_V_10_fu_797_p2;
wire   [0:0] tmp_22_fu_809_p3;
wire   [78:0] r_V_11_fu_803_p2;
wire   [31:0] zext_ln662_5_fu_817_p1;
wire   [31:0] tmp_11_fu_821_p4;
wire   [53:0] mantissa_1_fu_838_p4;
wire   [11:0] zext_ln510_fu_851_p1;
wire   [11:0] add_ln510_fu_854_p2;
wire   [10:0] sub_ln1311_1_fu_868_p2;
wire   [0:0] isNeg_1_fu_860_p3;
wire  signed [11:0] sext_ln1311_1_fu_873_p1;
wire   [11:0] ush_1_fu_877_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i48_cast_cast_cast_fu_885_p1;
wire   [168:0] zext_ln68_1_fu_847_p1;
wire   [168:0] sh_prom_i_i_i_i_i48_cast_cast_cast_cast_fu_889_p1;
wire   [168:0] r_V_4_fu_893_p2;
wire   [0:0] tmp_7_fu_905_p3;
wire   [168:0] r_V_5_fu_899_p2;
wire   [31:0] zext_ln662_2_fu_913_p1;
wire   [31:0] tmp_4_fu_917_p4;
wire   [0:0] p_Result_2_fu_935_p3;
wire   [7:0] select_ln59_fu_942_p3;
wire   [7:0] v_1_fu_948_p2;
wire   [31:0] select_ln1312_fu_927_p3;
wire  signed [31:0] sext_ln22_fu_953_p1;
wire   [0:0] p_Result_3_fu_963_p3;
wire   [31:0] result_V_8_fu_970_p2;
wire   [31:0] result_V_10_fu_975_p3;
wire   [0:0] xor_ln20_fu_988_p2;
wire   [31:0] zext_ln18_fu_993_p1;
wire   [31:0] xor_ln22_fu_997_p2;
wire   [31:0] grp_fu_1008_p0;
reg   [1:0] grp_fu_140_opcode;
wire   [31:0] grp_fu_1008_p2;
reg    grp_fu_1008_ap_start;
wire    grp_fu_1008_ap_done;
wire    ap_CS_fsm_state60;
reg   [59:0] ap_NS_fsm;
wire   [127:0] grp_fu_548_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 60'd1;
end

fn1_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_140_p0),
    .din1(p_7),
    .opcode(grp_fu_140_opcode),
    .ce(1'b1),
    .dout(grp_fu_140_p2)
);

fn1_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_reg_1151),
    .din1(reg_167),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

fn1_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_148_p0),
    .ce(1'b1),
    .dout(grp_fu_148_p1)
);

fn1_sitofp_64ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_151_p0),
    .ce(1'b1),
    .dout(grp_fu_151_p1)
);

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_1136),
    .din1(64'd5171336909221269055),
    .ce(1'b1),
    .dout(grp_fu_155_p2)
);

fn1_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv5_reg_1081),
    .din1(p_11),
    .ce(1'b1),
    .dout(grp_fu_160_p2)
);

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_164_p0),
    .ce(1'b1),
    .dout(grp_fu_164_p1)
);

fn1_mul_64ns_65ns_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 65 ),
    .dout_WIDTH( 128 ))
mul_64ns_65ns_128_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_548_p0),
    .din1(grp_fu_548_p1),
    .ce(1'b1),
    .dout(grp_fu_548_p2)
);

fn1_srem_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
srem_32ns_32ns_32_36_seq_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1008_ap_start),
    .done(grp_fu_1008_ap_done),
    .din0(grp_fu_1008_p0),
    .din1(add_ln22_reg_1233),
    .ce(1'b1),
    .dout(grp_fu_1008_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln21_1_reg_1121 <= add_ln21_1_fu_558_p2;
        conv2_reg_1126 <= grp_fu_148_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln22_reg_1233 <= add_ln22_fu_982_p2;
        xor_ln22_1_reg_1228 <= xor_ln22_1_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1_reg_1151 <= grp_fu_151_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv5_reg_1081 <= grp_fu_164_p1;
        result_V_9_reg_1086 <= result_V_9_fu_506_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv_reg_1146 <= grp_fu_151_p1;
        icmp_ln20_reg_1141 <= icmp_ln20_fu_580_p2;
        mul_reg_1136 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        data_V_3_reg_1161 <= data_V_3_fu_585_p1;
        data_V_4_reg_1181 <= data_V_4_fu_639_p1;
        isNeg_3_reg_1171 <= add_ln341_1_fu_607_p2[32'd8];
        isNeg_4_reg_1191 <= add_ln341_2_fu_660_p2[32'd8];
        tmp_30_reg_1166 <= tmp_30_fu_599_p1;
        tmp_32_reg_1186 <= tmp_32_fu_652_p1;
        ush_3_reg_1176 <= ush_3_fu_631_p3;
        ush_4_reg_1196 <= ush_4_fu_684_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_reg_1018 <= data_V_fu_172_p1;
        isNeg_reg_1028 <= add_ln341_fu_194_p2[32'd8];
        tmp_24_reg_1023 <= tmp_24_fu_186_p1;
        ush_reg_1034 <= ush_fu_218_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dc_2_reg_1156 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln22_reg_1045 <= icmp_ln22_fu_336_p2;
        val_reg_1039 <= val_fu_280_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_ln20_reg_1131 <= grp_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Result_1_reg_1070 <= data_V_2_fu_375_p1[32'd63];
        val_2_reg_1075 <= val_2_fu_493_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_167 <= grp_fu_140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        select_ln1312_2_reg_1212 <= select_ln1312_2_fu_764_p3;
        sub_ln59_reg_1217 <= sub_ln59_fu_771_p2;
        tmp_25_reg_1201 <= {{data_V_1_fu_692_p1[62:52]}};
        tmp_26_reg_1207 <= tmp_26_fu_706_p1;
        val_3_reg_1222 <= val_3_fu_831_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sub_ln20_reg_1096 <= sub_ln20_fu_520_p2;
        sub_ln21_reg_1106 <= sub_ln21_fu_535_p2;
        trunc_ln21_1_reg_1101 <= trunc_ln21_1_fu_526_p1;
        v_13_reg_1091 <= v_13_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xor_ln18_reg_1050 <= xor_ln18_fu_361_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1008_ap_start = 1'b1;
    end else begin
        grp_fu_1008_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_140_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_140_opcode = 2'd0;
    end else begin
        grp_fu_140_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_140_p0 = conv_reg_1146;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_140_p0 = conv2_reg_1126;
    end else begin
        grp_fu_140_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_151_p0 = p;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_151_p0 = $signed(sub_ln21_reg_1106);
    end else begin
        grp_fu_151_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_566_p2 = ($signed(sext_ln19_fu_563_p1) + $signed(31'd1147663939));

assign add_ln21_1_fu_558_p2 = (trunc_ln21_1_reg_1101 + trunc_ln21_fu_554_p1);

assign add_ln21_fu_530_p2 = (result_V_9_reg_1086 + p_9);

assign add_ln22_fu_982_p2 = (result_V_10_fu_975_p3 + 32'd395);

assign add_ln341_1_fu_607_p2 = ($signed(zext_ln341_1_fu_603_p1) + $signed(9'd385));

assign add_ln341_2_fu_660_p2 = ($signed(zext_ln341_2_fu_656_p1) + $signed(9'd385));

assign add_ln341_fu_194_p2 = ($signed(zext_ln341_fu_190_p1) + $signed(9'd385));

assign add_ln510_1_fu_419_p2 = ($signed(zext_ln510_1_fu_415_p1) + $signed(12'd3073));

assign add_ln510_fu_854_p2 = ($signed(zext_ln510_fu_851_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = grp_fu_1008_p2;

assign data_V_1_fu_692_p1 = grp_fu_155_p2;

assign data_V_2_fu_375_p1 = p_11;

assign data_V_3_fu_585_p1 = reg_167;

assign data_V_4_fu_639_p1 = dc_2_reg_1156;

assign data_V_fu_172_p1 = p_7;

assign grp_fu_1008_p0 = (32'd0 - xor_ln22_fu_997_p2);

assign grp_fu_148_p0 = icmp_ln22_reg_1045;

assign grp_fu_164_p0 = $signed(xor_ln18_reg_1050);

assign grp_fu_548_p0 = grp_fu_548_p00;

assign grp_fu_548_p00 = $unsigned(sext_ln19_1_fu_541_p1);

assign grp_fu_548_p1 = 128'd18446744073709543323;

assign icmp_ln20_fu_580_p2 = ((zext_ln20_1_fu_576_p1 < mul_ln20_reg_1131) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_336_p2 = ((val_1_fu_329_p3 == 32'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_860_p3 = add_ln510_fu_854_p2[32'd11];

assign isNeg_2_fu_425_p3 = add_ln510_1_fu_419_p2[32'd11];

assign isNeg_3_fu_613_p3 = add_ln341_1_fu_607_p2[32'd8];

assign isNeg_4_fu_666_p3 = add_ln341_2_fu_660_p2[32'd8];

assign isNeg_fu_200_p3 = add_ln341_fu_194_p2[32'd8];

assign mantissa_1_fu_838_p4 = {{{{1'd1}, {tmp_26_reg_1207}}}, {1'd0}};

assign mantissa_2_fu_401_p4 = {{{{1'd1}, {tmp_28_fu_397_p1}}}, {1'd0}};

assign mantissa_3_fu_710_p4 = {{{{1'd1}, {tmp_30_reg_1166}}}, {1'd0}};

assign mantissa_4_fu_777_p4 = {{{{1'd1}, {tmp_32_reg_1186}}}, {1'd0}};

assign mantissa_fu_226_p4 = {{{{1'd1}, {tmp_24_reg_1023}}}, {1'd0}};

assign p_Result_2_fu_935_p3 = data_V_3_reg_1161[32'd31];

assign p_Result_3_fu_963_p3 = data_V_4_reg_1181[32'd31];

assign p_Result_s_fu_342_p3 = data_V_reg_1018[32'd31];

assign r_V_10_fu_797_p2 = zext_ln15_3_fu_786_p1 >> sh_prom_i_i_i_i_i135_cast_cast_cast_cast_fu_793_p1;

assign r_V_11_fu_803_p2 = zext_ln15_3_fu_786_p1 << sh_prom_i_i_i_i_i135_cast_cast_cast_cast_fu_793_p1;

assign r_V_1_fu_252_p2 = zext_ln15_fu_235_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_242_p1;

assign r_V_2_fu_295_p2 = zext_ln68_fu_287_p1 >> sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_291_p1;

assign r_V_3_fu_301_p2 = zext_ln68_fu_287_p1 << sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_291_p1;

assign r_V_4_fu_893_p2 = zext_ln68_1_fu_847_p1 >> sh_prom_i_i_i_i_i48_cast_cast_cast_cast_fu_889_p1;

assign r_V_5_fu_899_p2 = zext_ln68_1_fu_847_p1 << sh_prom_i_i_i_i_i48_cast_cast_cast_cast_fu_889_p1;

assign r_V_6_fu_459_p2 = zext_ln15_1_fu_411_p1 >> sh_prom_i_i_i_i_i73_cast_cast_cast_cast_fu_455_p1;

assign r_V_7_fu_465_p2 = zext_ln15_1_fu_411_p1 << sh_prom_i_i_i_i_i73_cast_cast_cast_cast_fu_455_p1;

assign r_V_8_fu_730_p2 = zext_ln15_2_fu_719_p1 >> sh_prom_i_i_i_i_i101_cast_cast_cast_cast_fu_726_p1;

assign r_V_9_fu_736_p2 = zext_ln15_2_fu_719_p1 << sh_prom_i_i_i_i_i101_cast_cast_cast_cast_fu_726_p1;

assign r_V_fu_246_p2 = zext_ln15_fu_235_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_242_p1;

assign result_V_10_fu_975_p3 = ((p_Result_3_fu_963_p3[0:0] == 1'b1) ? result_V_8_fu_970_p2 : val_3_reg_1222);

assign result_V_2_fu_349_p2 = (8'd0 - val_reg_1039);

assign result_V_5_fu_501_p2 = (32'd0 - val_2_reg_1075);

assign result_V_8_fu_970_p2 = (32'd0 - val_3_reg_1222);

assign result_V_9_fu_506_p3 = ((p_Result_1_reg_1070[0:0] == 1'b1) ? result_V_5_fu_501_p2 : val_2_reg_1075);

assign result_V_fu_354_p3 = ((p_Result_s_fu_342_p3[0:0] == 1'b1) ? result_V_2_fu_349_p2 : val_reg_1039);

assign select_ln1312_2_fu_764_p3 = ((isNeg_3_reg_1171[0:0] == 1'b1) ? zext_ln662_4_fu_750_p1 : tmp_9_fu_754_p4);

assign select_ln1312_fu_927_p3 = ((isNeg_1_fu_860_p3[0:0] == 1'b1) ? zext_ln662_2_fu_913_p1 : tmp_4_fu_917_p4);

assign select_ln59_fu_942_p3 = ((p_Result_2_fu_935_p3[0:0] == 1'b1) ? sub_ln59_reg_1217 : select_ln1312_2_reg_1212);

assign sext_ln1311_1_fu_873_p1 = $signed(sub_ln1311_1_fu_868_p2);

assign sext_ln1311_2_fu_439_p1 = $signed(sub_ln1311_2_fu_433_p2);

assign sext_ln1311_3_fu_627_p1 = $signed(sub_ln1311_3_fu_621_p2);

assign sext_ln1311_4_fu_680_p1 = $signed(sub_ln1311_4_fu_674_p2);

assign sext_ln1311_fu_214_p1 = $signed(sub_ln1311_fu_208_p2);

assign sext_ln19_1_fu_541_p1 = $signed(sub_ln20_reg_1096);

assign sext_ln19_fu_563_p1 = v_13_reg_1091;

assign sext_ln20_1_fu_516_p1 = v_13_fu_512_p1;

assign sext_ln20_fu_572_p1 = $signed(add_ln19_fu_566_p2);

assign sext_ln22_fu_953_p1 = $signed(v_1_fu_948_p2);

assign sh_prom_i_i_i_i_i101_cast_cast_cast_cast_fu_726_p1 = $unsigned(sh_prom_i_i_i_i_i101_cast_cast_cast_fu_723_p1);

assign sh_prom_i_i_i_i_i101_cast_cast_cast_fu_723_p1 = $signed(ush_3_reg_1176);

assign sh_prom_i_i_i_i_i135_cast_cast_cast_cast_fu_793_p1 = $unsigned(sh_prom_i_i_i_i_i135_cast_cast_cast_fu_790_p1);

assign sh_prom_i_i_i_i_i135_cast_cast_cast_fu_790_p1 = $signed(ush_4_reg_1196);

assign sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_291_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_239_p1);

assign sh_prom_i_i_i_i_i48_cast_cast_cast_cast_fu_889_p1 = $unsigned(sh_prom_i_i_i_i_i48_cast_cast_cast_fu_885_p1);

assign sh_prom_i_i_i_i_i48_cast_cast_cast_fu_885_p1 = $signed(ush_1_fu_877_p3);

assign sh_prom_i_i_i_i_i73_cast_cast_cast_cast_fu_455_p1 = $unsigned(sh_prom_i_i_i_i_i73_cast_cast_cast_fu_451_p1);

assign sh_prom_i_i_i_i_i73_cast_cast_cast_fu_451_p1 = $signed(ush_2_fu_443_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_242_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_239_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_239_p1 = $signed(ush_reg_1034);

assign sub_ln1311_1_fu_868_p2 = (11'd1023 - tmp_25_reg_1201);

assign sub_ln1311_2_fu_433_p2 = (11'd1023 - tmp_27_fu_387_p4);

assign sub_ln1311_3_fu_621_p2 = (8'd127 - tmp_29_fu_589_p4);

assign sub_ln1311_4_fu_674_p2 = (8'd127 - tmp_31_fu_642_p4);

assign sub_ln1311_fu_208_p2 = (8'd127 - tmp_23_fu_176_p4);

assign sub_ln20_fu_520_p2 = ($signed(17'd911) - $signed(sext_ln20_1_fu_516_p1));

assign sub_ln21_fu_535_p2 = (32'd0 - add_ln21_fu_530_p2);

assign sub_ln59_fu_771_p2 = (8'd0 - select_ln1312_2_fu_764_p3);

assign tmp_11_fu_821_p4 = {{r_V_11_fu_803_p2[55:24]}};

assign tmp_12_fu_471_p3 = r_V_6_fu_459_p2[32'd53];

assign tmp_17_fu_742_p3 = r_V_8_fu_730_p2[32'd24];

assign tmp_1_fu_270_p4 = {{r_V_1_fu_252_p2[31:24]}};

assign tmp_22_fu_809_p3 = r_V_10_fu_797_p2[32'd24];

assign tmp_23_fu_176_p4 = {{data_V_fu_172_p1[30:23]}};

assign tmp_24_fu_186_p1 = data_V_fu_172_p1[22:0];

assign tmp_26_fu_706_p1 = data_V_1_fu_692_p1[51:0];

assign tmp_27_fu_387_p4 = {{data_V_2_fu_375_p1[62:52]}};

assign tmp_28_fu_397_p1 = data_V_2_fu_375_p1[51:0];

assign tmp_29_fu_589_p4 = {{data_V_3_fu_585_p1[30:23]}};

assign tmp_2_fu_307_p3 = r_V_2_fu_295_p2[32'd24];

assign tmp_30_fu_599_p1 = data_V_3_fu_585_p1[22:0];

assign tmp_31_fu_642_p4 = {{data_V_4_fu_639_p1[30:23]}};

assign tmp_32_fu_652_p1 = data_V_4_fu_639_p1[22:0];

assign tmp_4_fu_917_p4 = {{r_V_5_fu_899_p2[84:53]}};

assign tmp_6_fu_483_p4 = {{r_V_7_fu_465_p2[84:53]}};

assign tmp_7_fu_905_p3 = r_V_4_fu_893_p2[32'd53];

assign tmp_9_fu_754_p4 = {{r_V_9_fu_736_p2[31:24]}};

assign tmp_fu_258_p3 = r_V_fu_246_p2[32'd24];

assign tmp_s_fu_319_p4 = {{r_V_3_fu_301_p2[55:24]}};

assign trunc_ln21_1_fu_526_p1 = p_9[7:0];

assign trunc_ln21_fu_554_p1 = p[7:0];

assign ush_1_fu_877_p3 = ((isNeg_1_fu_860_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_873_p1 : add_ln510_fu_854_p2);

assign ush_2_fu_443_p3 = ((isNeg_2_fu_425_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_439_p1 : add_ln510_1_fu_419_p2);

assign ush_3_fu_631_p3 = ((isNeg_3_fu_613_p3[0:0] == 1'b1) ? sext_ln1311_3_fu_627_p1 : add_ln341_1_fu_607_p2);

assign ush_4_fu_684_p3 = ((isNeg_4_fu_666_p3[0:0] == 1'b1) ? sext_ln1311_4_fu_680_p1 : add_ln341_2_fu_660_p2);

assign ush_fu_218_p3 = ((isNeg_fu_200_p3[0:0] == 1'b1) ? sext_ln1311_fu_214_p1 : add_ln341_fu_194_p2);

assign v_13_fu_512_p1 = p_9[15:0];

assign v_1_fu_948_p2 = (select_ln59_fu_942_p3 & add_ln21_1_reg_1121);

assign val_1_fu_329_p3 = ((isNeg_reg_1028[0:0] == 1'b1) ? zext_ln662_1_fu_315_p1 : tmp_s_fu_319_p4);

assign val_2_fu_493_p3 = ((isNeg_2_fu_425_p3[0:0] == 1'b1) ? zext_ln662_3_fu_479_p1 : tmp_6_fu_483_p4);

assign val_3_fu_831_p3 = ((isNeg_4_reg_1191[0:0] == 1'b1) ? zext_ln662_5_fu_817_p1 : tmp_11_fu_821_p4);

assign val_fu_280_p3 = ((isNeg_reg_1028[0:0] == 1'b1) ? zext_ln662_fu_266_p1 : tmp_1_fu_270_p4);

assign xor_ln18_fu_361_p2 = (result_V_fu_354_p3 ^ 8'd255);

assign xor_ln20_fu_988_p2 = (icmp_ln20_reg_1141 ^ 1'd1);

assign xor_ln22_1_fu_957_p2 = (sext_ln22_fu_953_p1 ^ select_ln1312_fu_927_p3);

assign xor_ln22_fu_997_p2 = (zext_ln18_fu_993_p1 ^ xor_ln22_1_reg_1228);

assign zext_ln15_1_fu_411_p1 = mantissa_2_fu_401_p4;

assign zext_ln15_2_fu_719_p1 = mantissa_3_fu_710_p4;

assign zext_ln15_3_fu_786_p1 = mantissa_4_fu_777_p4;

assign zext_ln15_fu_235_p1 = mantissa_fu_226_p4;

assign zext_ln18_fu_993_p1 = xor_ln20_fu_988_p2;

assign zext_ln20_1_fu_576_p1 = $unsigned(sext_ln20_fu_572_p1);

assign zext_ln341_1_fu_603_p1 = tmp_29_fu_589_p4;

assign zext_ln341_2_fu_656_p1 = tmp_31_fu_642_p4;

assign zext_ln341_fu_190_p1 = tmp_23_fu_176_p4;

assign zext_ln510_1_fu_415_p1 = tmp_27_fu_387_p4;

assign zext_ln510_fu_851_p1 = tmp_25_reg_1201;

assign zext_ln662_1_fu_315_p1 = tmp_2_fu_307_p3;

assign zext_ln662_2_fu_913_p1 = tmp_7_fu_905_p3;

assign zext_ln662_3_fu_479_p1 = tmp_12_fu_471_p3;

assign zext_ln662_4_fu_750_p1 = tmp_17_fu_742_p3;

assign zext_ln662_5_fu_817_p1 = tmp_22_fu_809_p3;

assign zext_ln662_fu_266_p1 = tmp_fu_258_p3;

assign zext_ln68_1_fu_847_p1 = mantissa_1_fu_838_p4;

assign zext_ln68_fu_287_p1 = mantissa_fu_226_p4;

endmodule //fn1
