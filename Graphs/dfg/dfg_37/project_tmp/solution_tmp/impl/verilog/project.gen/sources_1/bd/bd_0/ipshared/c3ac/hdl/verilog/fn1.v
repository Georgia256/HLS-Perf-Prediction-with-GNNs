// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=122,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3848,HLS_SYN_LUT=4149,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_11,
        p_13,
        p_15,
        ap_return
);

parameter    ap_ST_fsm_state1 = 123'd1;
parameter    ap_ST_fsm_state2 = 123'd2;
parameter    ap_ST_fsm_state3 = 123'd4;
parameter    ap_ST_fsm_state4 = 123'd8;
parameter    ap_ST_fsm_state5 = 123'd16;
parameter    ap_ST_fsm_state6 = 123'd32;
parameter    ap_ST_fsm_state7 = 123'd64;
parameter    ap_ST_fsm_state8 = 123'd128;
parameter    ap_ST_fsm_state9 = 123'd256;
parameter    ap_ST_fsm_state10 = 123'd512;
parameter    ap_ST_fsm_state11 = 123'd1024;
parameter    ap_ST_fsm_state12 = 123'd2048;
parameter    ap_ST_fsm_state13 = 123'd4096;
parameter    ap_ST_fsm_state14 = 123'd8192;
parameter    ap_ST_fsm_state15 = 123'd16384;
parameter    ap_ST_fsm_state16 = 123'd32768;
parameter    ap_ST_fsm_state17 = 123'd65536;
parameter    ap_ST_fsm_state18 = 123'd131072;
parameter    ap_ST_fsm_state19 = 123'd262144;
parameter    ap_ST_fsm_state20 = 123'd524288;
parameter    ap_ST_fsm_state21 = 123'd1048576;
parameter    ap_ST_fsm_state22 = 123'd2097152;
parameter    ap_ST_fsm_state23 = 123'd4194304;
parameter    ap_ST_fsm_state24 = 123'd8388608;
parameter    ap_ST_fsm_state25 = 123'd16777216;
parameter    ap_ST_fsm_state26 = 123'd33554432;
parameter    ap_ST_fsm_state27 = 123'd67108864;
parameter    ap_ST_fsm_state28 = 123'd134217728;
parameter    ap_ST_fsm_state29 = 123'd268435456;
parameter    ap_ST_fsm_state30 = 123'd536870912;
parameter    ap_ST_fsm_state31 = 123'd1073741824;
parameter    ap_ST_fsm_state32 = 123'd2147483648;
parameter    ap_ST_fsm_state33 = 123'd4294967296;
parameter    ap_ST_fsm_state34 = 123'd8589934592;
parameter    ap_ST_fsm_state35 = 123'd17179869184;
parameter    ap_ST_fsm_state36 = 123'd34359738368;
parameter    ap_ST_fsm_state37 = 123'd68719476736;
parameter    ap_ST_fsm_state38 = 123'd137438953472;
parameter    ap_ST_fsm_state39 = 123'd274877906944;
parameter    ap_ST_fsm_state40 = 123'd549755813888;
parameter    ap_ST_fsm_state41 = 123'd1099511627776;
parameter    ap_ST_fsm_state42 = 123'd2199023255552;
parameter    ap_ST_fsm_state43 = 123'd4398046511104;
parameter    ap_ST_fsm_state44 = 123'd8796093022208;
parameter    ap_ST_fsm_state45 = 123'd17592186044416;
parameter    ap_ST_fsm_state46 = 123'd35184372088832;
parameter    ap_ST_fsm_state47 = 123'd70368744177664;
parameter    ap_ST_fsm_state48 = 123'd140737488355328;
parameter    ap_ST_fsm_state49 = 123'd281474976710656;
parameter    ap_ST_fsm_state50 = 123'd562949953421312;
parameter    ap_ST_fsm_state51 = 123'd1125899906842624;
parameter    ap_ST_fsm_state52 = 123'd2251799813685248;
parameter    ap_ST_fsm_state53 = 123'd4503599627370496;
parameter    ap_ST_fsm_state54 = 123'd9007199254740992;
parameter    ap_ST_fsm_state55 = 123'd18014398509481984;
parameter    ap_ST_fsm_state56 = 123'd36028797018963968;
parameter    ap_ST_fsm_state57 = 123'd72057594037927936;
parameter    ap_ST_fsm_state58 = 123'd144115188075855872;
parameter    ap_ST_fsm_state59 = 123'd288230376151711744;
parameter    ap_ST_fsm_state60 = 123'd576460752303423488;
parameter    ap_ST_fsm_state61 = 123'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 123'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 123'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 123'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 123'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 123'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 123'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 123'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 123'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 123'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 123'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 123'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 123'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 123'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 123'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 123'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 123'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 123'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 123'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 123'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 123'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 123'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 123'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 123'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 123'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 123'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 123'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 123'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 123'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 123'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 123'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 123'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 123'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 123'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 123'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 123'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 123'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 123'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 123'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 123'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 123'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 123'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 123'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 123'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 123'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 123'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 123'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 123'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 123'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 123'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 123'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 123'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 123'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 123'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 123'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 123'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 123'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 123'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 123'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 123'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 123'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 123'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 123'd5316911983139663491615228241121378304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [7:0] p_11;
input  [63:0] p_13;
input  [31:0] p_15;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [122:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln24_fu_154_p2;
reg   [0:0] icmp_ln24_reg_457;
wire   [31:0] grp_fu_148_p2;
reg   [31:0] mul_ln21_reg_462;
wire    ap_CS_fsm_state13;
wire   [10:0] grp_fu_139_p2;
reg   [10:0] srem_ln22_reg_467;
wire    ap_CS_fsm_state14;
wire   [0:0] trunc_ln22_fu_179_p1;
reg   [0:0] trunc_ln22_reg_482;
wire    ap_CS_fsm_state18;
wire   [63:0] add_ln24_fu_199_p2;
reg   [63:0] add_ln24_reg_487;
wire   [63:0] shl_neg_fu_211_p2;
reg   [63:0] shl_neg_reg_492;
wire   [63:0] sub_ln25_1_fu_236_p2;
reg   [63:0] sub_ln25_1_reg_497;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state28;
wire   [31:0] grp_fu_115_p1;
reg   [31:0] conv_reg_507;
wire    ap_CS_fsm_state33;
wire   [31:0] grp_fu_110_p2;
reg   [31:0] dc_reg_512;
wire    ap_CS_fsm_state38;
wire   [31:0] data_V_fu_246_p1;
reg   [31:0] data_V_reg_517;
wire    ap_CS_fsm_state39;
wire   [22:0] tmp_3_fu_259_p1;
reg   [22:0] tmp_3_reg_522;
wire   [0:0] isNeg_fu_273_p3;
reg   [0:0] isNeg_reg_527;
wire   [8:0] ush_fu_291_p3;
reg   [8:0] ush_reg_532;
wire   [63:0] grp_fu_217_p2;
reg   [63:0] sdiv_ln24_reg_537;
wire    ap_CS_fsm_state40;
wire   [63:0] val_fu_353_p3;
reg   [63:0] val_reg_542;
wire   [63:0] sub_ln24_fu_379_p2;
reg   [63:0] sub_ln24_reg_548;
wire    ap_CS_fsm_state41;
wire   [63:0] grp_fu_384_p2;
reg   [63:0] v_6_reg_553;
wire    ap_CS_fsm_state109;
wire   [0:0] icmp_ln27_fu_392_p2;
reg   [0:0] icmp_ln27_reg_558;
wire   [63:0] sub_ln28_fu_398_p2;
reg   [63:0] sub_ln28_reg_563;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire   [63:0] grp_fu_425_p2;
reg   [63:0] sdiv_ln27_reg_573;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_115_p0;
wire    ap_CS_fsm_state118;
wire  signed [7:0] sext_ln22_fu_121_p0;
wire  signed [7:0] sext_ln22_1_fu_125_p0;
wire  signed [9:0] sext_ln22_1_fu_125_p1;
wire   [9:0] sub_ln22_fu_129_p2;
wire  signed [8:0] grp_fu_139_p0;
wire   [10:0] grp_fu_139_p1;
wire  signed [7:0] zext_ln21_fu_145_p0;
wire   [7:0] grp_fu_148_p0;
wire  signed [7:0] icmp_ln24_fu_154_p0;
wire   [0:0] icmp_ln21_fu_159_p2;
wire   [0:0] grp_fu_173_p0;
wire   [10:0] grp_fu_173_p1;
wire   [0:0] grp_fu_173_p2;
wire   [4:0] or_ln_fu_183_p3;
wire  signed [7:0] sext_ln24_fu_191_p1;
wire   [63:0] zext_ln24_fu_195_p1;
wire   [63:0] shl_ln25_fu_205_p2;
wire   [17:0] grp_fu_217_p0;
wire  signed [31:0] zext_ln25_fu_222_p0;
wire   [63:0] or_ln25_fu_225_p2;
wire   [63:0] sub_ln25_fu_230_p2;
wire   [63:0] zext_ln25_fu_222_p1;
wire   [7:0] tmp_2_fu_249_p4;
wire   [8:0] zext_ln341_fu_263_p1;
wire   [8:0] add_ln341_fu_267_p2;
wire   [7:0] sub_ln1311_fu_281_p2;
wire  signed [8:0] sext_ln1311_fu_287_p1;
wire   [24:0] mantissa_fu_299_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i18_cast_cast_cast_fu_312_p1;
wire   [110:0] zext_ln15_fu_308_p1;
wire   [110:0] sh_prom_i_i_i_i_i18_cast_cast_cast_cast_fu_315_p1;
wire   [110:0] r_V_fu_319_p2;
wire   [0:0] tmp_fu_331_p3;
wire   [110:0] r_V_1_fu_325_p2;
wire   [63:0] zext_ln662_fu_339_p1;
wire   [63:0] tmp_1_fu_343_p4;
wire   [0:0] p_Result_s_fu_360_p3;
wire   [63:0] result_V_2_fu_367_p2;
wire   [63:0] result_V_fu_372_p3;
wire    ap_CS_fsm_state42;
wire   [7:0] trunc_ln26_fu_388_p1;
wire   [0:0] xor_ln27_fu_406_p2;
wire   [1:0] zext_ln27_fu_403_p1;
wire   [1:0] zext_ln27_2_fu_411_p1;
wire   [1:0] shl_ln27_fu_415_p2;
wire   [2:0] grp_fu_425_p0;
wire   [63:0] grp_fu_118_p1;
reg    grp_fu_139_ap_start;
wire    grp_fu_139_ap_done;
reg    grp_fu_173_ap_start;
wire    grp_fu_173_ap_done;
reg    grp_fu_217_ap_start;
wire    grp_fu_217_ap_done;
reg    grp_fu_384_ap_start;
wire    grp_fu_384_ap_done;
reg    grp_fu_425_ap_start;
wire    grp_fu_425_ap_done;
wire    ap_CS_fsm_state123;
reg   [122:0] ap_NS_fsm;
wire   [31:0] grp_fu_148_p00;
wire   [10:0] grp_fu_173_p00;
wire   [63:0] grp_fu_425_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 123'd1;
end

fn1_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd3410413878),
    .din1(conv_reg_507),
    .ce(1'b1),
    .dout(grp_fu_110_p2)
);

fn1_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_115_p0),
    .ce(1'b1),
    .dout(grp_fu_115_p1)
);

fn1_sitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sdiv_ln27_reg_573),
    .ce(1'b1),
    .dout(grp_fu_118_p1)
);

fn1_srem_9s_11ns_11_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
srem_9s_11ns_11_13_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_139_ap_start),
    .done(grp_fu_139_ap_done),
    .din0(grp_fu_139_p0),
    .din1(grp_fu_139_p1),
    .ce(1'b1),
    .dout(grp_fu_139_p2)
);

fn1_mul_8ns_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_8ns_32s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_148_p0),
    .din1(p_15),
    .ce(1'b1),
    .dout(grp_fu_148_p2)
);

fn1_urem_1ns_11ns_1_5_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 1 ))
urem_1ns_11ns_1_5_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_173_ap_start),
    .done(grp_fu_173_ap_done),
    .din0(grp_fu_173_p0),
    .din1(grp_fu_173_p1),
    .ce(1'b1),
    .dout(grp_fu_173_p2)
);

fn1_sdiv_18ns_64ns_64_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_18ns_64ns_64_22_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_217_ap_start),
    .done(grp_fu_217_ap_done),
    .din0(grp_fu_217_p0),
    .din1(add_ln24_reg_487),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

fn1_srem_64ns_64ns_64_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
srem_64ns_64ns_64_68_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_384_ap_start),
    .done(grp_fu_384_ap_done),
    .din0(sub_ln24_reg_548),
    .din1(sub_ln25_1_reg_497),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

fn1_sdiv_3ns_64ns_64_7_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_3ns_64ns_64_7_seq_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_425_ap_start),
    .done(grp_fu_425_ap_done),
    .din0(grp_fu_425_p0),
    .din1(sub_ln28_reg_563),
    .ce(1'b1),
    .dout(grp_fu_425_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln24_reg_487 <= add_ln24_fu_199_p2;
        shl_neg_reg_492[63 : 17] <= shl_neg_fu_211_p2[63 : 17];
        trunc_ln22_reg_482 <= trunc_ln22_fu_179_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        conv_reg_507 <= grp_fu_115_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_V_reg_517 <= data_V_fu_246_p1;
        isNeg_reg_527 <= add_ln341_fu_267_p2[32'd8];
        tmp_3_reg_522 <= tmp_3_fu_259_p1;
        ush_reg_532 <= ush_fu_291_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dc_reg_512 <= grp_fu_110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln24_reg_457 <= icmp_ln24_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        icmp_ln27_reg_558 <= icmp_ln27_fu_392_p2;
        v_6_reg_553 <= grp_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mul_ln21_reg_462 <= grp_fu_148_p2;
        srem_ln22_reg_467 <= grp_fu_139_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sdiv_ln24_reg_537 <= grp_fu_217_p2;
        val_reg_542 <= val_fu_353_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        sdiv_ln27_reg_573 <= grp_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sub_ln24_reg_548 <= sub_ln24_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        sub_ln25_1_reg_497 <= sub_ln25_1_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        sub_ln28_reg_563 <= sub_ln28_fu_398_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_139_ap_start = 1'b1;
    end else begin
        grp_fu_139_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_173_ap_start = 1'b1;
    end else begin
        grp_fu_173_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_217_ap_start = 1'b1;
    end else begin
        grp_fu_217_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_384_ap_start = 1'b1;
    end else begin
        grp_fu_384_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_425_ap_start = 1'b1;
    end else begin
        grp_fu_425_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_fu_199_p2 = (zext_ln24_fu_195_p1 + p);

assign add_ln341_fu_267_p2 = ($signed(zext_ln341_fu_263_p1) + $signed(9'd385));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_return = grp_fu_118_p1;

assign data_V_fu_246_p1 = dc_reg_512;

assign grp_fu_115_p0 = icmp_ln24_reg_457;

assign grp_fu_139_p0 = sext_ln22_fu_121_p0;

assign grp_fu_139_p1 = sub_ln22_fu_129_p2;

assign grp_fu_148_p0 = grp_fu_148_p00;

assign grp_fu_148_p00 = $unsigned(zext_ln21_fu_145_p0);

assign grp_fu_173_p0 = grp_fu_173_p00;

assign grp_fu_173_p00 = icmp_ln21_fu_159_p2;

assign grp_fu_173_p1 = (srem_ln22_reg_467 + 11'd364);

assign grp_fu_217_p0 = 64'd42235;

assign grp_fu_425_p0 = grp_fu_425_p00;

assign grp_fu_425_p00 = shl_ln27_fu_415_p2;

assign icmp_ln21_fu_159_p2 = ((mul_ln21_reg_462 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_154_p0 = p_11;

assign icmp_ln24_fu_154_p2 = ((icmp_ln24_fu_154_p0 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_392_p2 = ((trunc_ln26_fu_388_p1 == 8'd196) ? 1'b1 : 1'b0);

assign isNeg_fu_273_p3 = add_ln341_fu_267_p2[32'd8];

assign mantissa_fu_299_p4 = {{{{1'd1}, {tmp_3_reg_522}}}, {1'd0}};

assign or_ln25_fu_225_p2 = (shl_neg_reg_492 | 64'd989);

assign or_ln_fu_183_p3 = {{4'd8}, {trunc_ln22_fu_179_p1}};

assign p_Result_s_fu_360_p3 = data_V_reg_517[32'd31];

assign r_V_1_fu_325_p2 = zext_ln15_fu_308_p1 << sh_prom_i_i_i_i_i18_cast_cast_cast_cast_fu_315_p1;

assign r_V_fu_319_p2 = zext_ln15_fu_308_p1 >> sh_prom_i_i_i_i_i18_cast_cast_cast_cast_fu_315_p1;

assign result_V_2_fu_367_p2 = (64'd0 - val_reg_542);

assign result_V_fu_372_p3 = ((p_Result_s_fu_360_p3[0:0] == 1'b1) ? result_V_2_fu_367_p2 : val_reg_542);

assign sext_ln1311_fu_287_p1 = $signed(sub_ln1311_fu_281_p2);

assign sext_ln22_1_fu_125_p0 = p_11;

assign sext_ln22_1_fu_125_p1 = sext_ln22_1_fu_125_p0;

assign sext_ln22_fu_121_p0 = p_11;

assign sext_ln24_fu_191_p1 = $signed(or_ln_fu_183_p3);

assign sh_prom_i_i_i_i_i18_cast_cast_cast_cast_fu_315_p1 = $unsigned(sh_prom_i_i_i_i_i18_cast_cast_cast_fu_312_p1);

assign sh_prom_i_i_i_i_i18_cast_cast_cast_fu_312_p1 = $signed(ush_reg_532);

assign shl_ln25_fu_205_p2 = p << 64'd17;

assign shl_ln27_fu_415_p2 = zext_ln27_fu_403_p1 << zext_ln27_2_fu_411_p1;

assign shl_neg_fu_211_p2 = (64'd0 - shl_ln25_fu_205_p2);

assign sub_ln1311_fu_281_p2 = (8'd127 - tmp_2_fu_249_p4);

assign sub_ln22_fu_129_p2 = ($signed(10'd589) - $signed(sext_ln22_1_fu_125_p1));

assign sub_ln24_fu_379_p2 = (sdiv_ln24_reg_537 - result_V_fu_372_p3);

assign sub_ln25_1_fu_236_p2 = (sub_ln25_fu_230_p2 - zext_ln25_fu_222_p1);

assign sub_ln25_fu_230_p2 = (or_ln25_fu_225_p2 - p_13);

assign sub_ln28_fu_398_p2 = (64'd346 - v_6_reg_553);

assign tmp_1_fu_343_p4 = {{r_V_1_fu_325_p2[87:24]}};

assign tmp_2_fu_249_p4 = {{data_V_fu_246_p1[30:23]}};

assign tmp_3_fu_259_p1 = data_V_fu_246_p1[22:0];

assign tmp_fu_331_p3 = r_V_fu_319_p2[32'd24];

assign trunc_ln22_fu_179_p1 = grp_fu_173_p2[0:0];

assign trunc_ln26_fu_388_p1 = grp_fu_384_p2[7:0];

assign ush_fu_291_p3 = ((isNeg_fu_273_p3[0:0] == 1'b1) ? sext_ln1311_fu_287_p1 : add_ln341_fu_267_p2);

assign val_fu_353_p3 = ((isNeg_reg_527[0:0] == 1'b1) ? zext_ln662_fu_339_p1 : tmp_1_fu_343_p4);

assign xor_ln27_fu_406_p2 = (trunc_ln22_reg_482 ^ 1'd1);

assign zext_ln15_fu_308_p1 = mantissa_fu_299_p4;

assign zext_ln21_fu_145_p0 = p_11;

assign zext_ln24_fu_195_p1 = $unsigned(sext_ln24_fu_191_p1);

assign zext_ln25_fu_222_p0 = p_15;

assign zext_ln25_fu_222_p1 = $unsigned(zext_ln25_fu_222_p0);

assign zext_ln27_2_fu_411_p1 = xor_ln27_fu_406_p2;

assign zext_ln27_fu_403_p1 = icmp_ln27_reg_558;

assign zext_ln341_fu_263_p1 = tmp_2_fu_249_p4;

assign zext_ln662_fu_339_p1 = tmp_fu_331_p3;

always @ (posedge ap_clk) begin
    shl_neg_reg_492[16:0] <= 17'b00000000000000000;
end

endmodule //fn1
