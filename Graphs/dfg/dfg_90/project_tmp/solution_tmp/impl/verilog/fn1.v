// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=133,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2432,HLS_SYN_LUT=3999,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_17,
        p_19,
        ap_return
);

parameter    ap_ST_fsm_state1 = 134'd1;
parameter    ap_ST_fsm_state2 = 134'd2;
parameter    ap_ST_fsm_state3 = 134'd4;
parameter    ap_ST_fsm_state4 = 134'd8;
parameter    ap_ST_fsm_state5 = 134'd16;
parameter    ap_ST_fsm_state6 = 134'd32;
parameter    ap_ST_fsm_state7 = 134'd64;
parameter    ap_ST_fsm_state8 = 134'd128;
parameter    ap_ST_fsm_state9 = 134'd256;
parameter    ap_ST_fsm_state10 = 134'd512;
parameter    ap_ST_fsm_state11 = 134'd1024;
parameter    ap_ST_fsm_state12 = 134'd2048;
parameter    ap_ST_fsm_state13 = 134'd4096;
parameter    ap_ST_fsm_state14 = 134'd8192;
parameter    ap_ST_fsm_state15 = 134'd16384;
parameter    ap_ST_fsm_state16 = 134'd32768;
parameter    ap_ST_fsm_state17 = 134'd65536;
parameter    ap_ST_fsm_state18 = 134'd131072;
parameter    ap_ST_fsm_state19 = 134'd262144;
parameter    ap_ST_fsm_state20 = 134'd524288;
parameter    ap_ST_fsm_state21 = 134'd1048576;
parameter    ap_ST_fsm_state22 = 134'd2097152;
parameter    ap_ST_fsm_state23 = 134'd4194304;
parameter    ap_ST_fsm_state24 = 134'd8388608;
parameter    ap_ST_fsm_state25 = 134'd16777216;
parameter    ap_ST_fsm_state26 = 134'd33554432;
parameter    ap_ST_fsm_state27 = 134'd67108864;
parameter    ap_ST_fsm_state28 = 134'd134217728;
parameter    ap_ST_fsm_state29 = 134'd268435456;
parameter    ap_ST_fsm_state30 = 134'd536870912;
parameter    ap_ST_fsm_state31 = 134'd1073741824;
parameter    ap_ST_fsm_state32 = 134'd2147483648;
parameter    ap_ST_fsm_state33 = 134'd4294967296;
parameter    ap_ST_fsm_state34 = 134'd8589934592;
parameter    ap_ST_fsm_state35 = 134'd17179869184;
parameter    ap_ST_fsm_state36 = 134'd34359738368;
parameter    ap_ST_fsm_state37 = 134'd68719476736;
parameter    ap_ST_fsm_state38 = 134'd137438953472;
parameter    ap_ST_fsm_state39 = 134'd274877906944;
parameter    ap_ST_fsm_state40 = 134'd549755813888;
parameter    ap_ST_fsm_state41 = 134'd1099511627776;
parameter    ap_ST_fsm_state42 = 134'd2199023255552;
parameter    ap_ST_fsm_state43 = 134'd4398046511104;
parameter    ap_ST_fsm_state44 = 134'd8796093022208;
parameter    ap_ST_fsm_state45 = 134'd17592186044416;
parameter    ap_ST_fsm_state46 = 134'd35184372088832;
parameter    ap_ST_fsm_state47 = 134'd70368744177664;
parameter    ap_ST_fsm_state48 = 134'd140737488355328;
parameter    ap_ST_fsm_state49 = 134'd281474976710656;
parameter    ap_ST_fsm_state50 = 134'd562949953421312;
parameter    ap_ST_fsm_state51 = 134'd1125899906842624;
parameter    ap_ST_fsm_state52 = 134'd2251799813685248;
parameter    ap_ST_fsm_state53 = 134'd4503599627370496;
parameter    ap_ST_fsm_state54 = 134'd9007199254740992;
parameter    ap_ST_fsm_state55 = 134'd18014398509481984;
parameter    ap_ST_fsm_state56 = 134'd36028797018963968;
parameter    ap_ST_fsm_state57 = 134'd72057594037927936;
parameter    ap_ST_fsm_state58 = 134'd144115188075855872;
parameter    ap_ST_fsm_state59 = 134'd288230376151711744;
parameter    ap_ST_fsm_state60 = 134'd576460752303423488;
parameter    ap_ST_fsm_state61 = 134'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 134'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 134'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 134'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 134'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 134'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 134'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 134'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 134'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 134'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 134'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 134'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 134'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 134'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 134'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 134'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 134'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 134'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 134'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 134'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 134'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 134'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 134'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 134'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 134'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 134'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 134'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 134'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 134'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 134'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 134'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 134'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 134'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 134'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 134'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 134'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 134'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 134'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 134'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 134'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 134'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 134'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 134'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 134'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 134'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 134'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 134'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 134'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 134'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 134'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 134'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 134'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 134'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 134'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 134'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 134'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 134'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 134'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 134'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 134'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 134'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 134'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 134'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 134'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 134'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 134'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 134'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 134'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 134'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 134'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 134'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 134'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 134'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 134'd10889035741470030830827987437816582766592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p;
input  [7:0] p_7;
input  [7:0] p_17;
input  [31:0] p_19;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [133:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_125_p1;
reg   [31:0] reg_128;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_114_p2;
reg   [31:0] reg_134;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire   [31:0] zext_ln20_fu_140_p1;
wire   [0:0] icmp_ln33_fu_155_p2;
reg   [0:0] icmp_ln33_reg_574;
wire    ap_CS_fsm_state4;
wire   [40:0] grp_fu_165_p2;
reg   [40:0] mul_ln29_reg_589;
wire    ap_CS_fsm_state5;
wire  signed [63:0] sext_ln28_fu_171_p1;
wire   [22:0] tmp_12_fu_189_p1;
reg   [22:0] tmp_12_reg_599;
wire    ap_CS_fsm_state37;
wire   [0:0] isNeg_fu_203_p3;
reg   [0:0] isNeg_reg_604;
wire   [8:0] ush_fu_221_p3;
reg   [8:0] ush_reg_610;
reg   [7:0] tmp_13_reg_615;
wire   [22:0] tmp_14_fu_243_p1;
reg   [22:0] tmp_14_reg_621;
reg   [0:0] p_Result_s_reg_626;
wire   [24:0] mantissa_fu_255_p4;
reg   [24:0] mantissa_reg_631;
wire    ap_CS_fsm_state38;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_268_p1;
reg  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_reg_636;
wire   [7:0] val_fu_309_p3;
reg   [7:0] val_reg_641;
wire   [0:0] isNeg_1_fu_325_p3;
reg   [0:0] isNeg_1_reg_646;
wire   [8:0] ush_1_fu_342_p3;
reg   [8:0] ush_1_reg_651;
wire   [7:0] v_9_1_fu_411_p2;
reg   [7:0] v_9_1_reg_656;
wire    ap_CS_fsm_state39;
wire   [15:0] add_ln30_fu_435_p2;
reg  signed [15:0] add_ln30_reg_661;
wire    ap_CS_fsm_state40;
wire   [63:0] val_2_fu_503_p3;
reg   [63:0] val_2_reg_676;
wire    ap_CS_fsm_state60;
wire   [17:0] grp_fu_457_p2;
reg  signed [17:0] sdiv_ln30_reg_682;
wire    ap_CS_fsm_state61;
wire  signed [63:0] result_V_fu_515_p3;
reg  signed [63:0] result_V_reg_687;
wire    ap_CS_fsm_state62;
wire   [63:0] grp_fu_524_p2;
reg   [63:0] v_reg_697;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
reg   [31:0] grp_fu_114_p0;
reg   [31:0] grp_fu_114_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
reg   [63:0] grp_fu_125_p0;
wire   [16:0] zext_ln33_fu_145_p1;
wire   [16:0] add_ln33_fu_149_p2;
wire   [32:0] grp_fu_165_p1;
wire   [31:0] data_V_fu_175_p1;
wire   [7:0] tmp_11_fu_179_p4;
wire   [8:0] zext_ln341_fu_193_p1;
wire   [8:0] add_ln341_fu_197_p2;
wire   [7:0] sub_ln1311_fu_211_p2;
wire  signed [8:0] sext_ln1311_fu_217_p1;
wire   [31:0] grp_fu_120_p2;
wire   [31:0] data_V_1_fu_229_p1;
wire   [54:0] zext_ln68_fu_264_p1;
wire   [54:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_271_p1;
wire   [54:0] r_V_fu_275_p2;
wire   [0:0] tmp_fu_287_p3;
wire   [54:0] r_V_1_fu_281_p2;
wire   [7:0] zext_ln662_fu_295_p1;
wire   [7:0] tmp_1_fu_299_p4;
wire   [8:0] zext_ln341_1_fu_316_p1;
wire   [8:0] add_ln341_1_fu_319_p2;
wire   [7:0] sub_ln1311_1_fu_333_p2;
wire  signed [8:0] sext_ln1311_1_fu_338_p1;
wire   [24:0] mantissa_1_fu_350_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i26_cast_cast_cast_fu_363_p1;
wire   [54:0] zext_ln68_1_fu_359_p1;
wire   [54:0] sh_prom_i_i_i_i_i26_cast_cast_cast_cast_fu_366_p1;
wire   [54:0] r_V_2_fu_370_p2;
wire   [0:0] tmp_7_fu_382_p3;
wire   [54:0] r_V_3_fu_376_p2;
wire   [7:0] zext_ln662_1_fu_390_p1;
wire   [7:0] tmp_6_fu_394_p4;
wire   [7:0] val_1_fu_404_p3;
wire  signed [7:0] sext_ln30_2_fu_416_p0;
wire  signed [7:0] mul_ln30_fu_419_p0;
wire  signed [14:0] sext_ln30_2_fu_416_p1;
wire  signed [6:0] mul_ln30_fu_419_p1;
wire   [14:0] mul_ln30_fu_419_p2;
wire   [14:0] xor_ln30_fu_425_p2;
wire  signed [15:0] sext_ln30_3_fu_431_p1;
wire   [16:0] zext_ln30_fu_441_p1;
wire   [16:0] sub_ln30_fu_444_p2;
wire  signed [17:0] grp_fu_457_p0;
wire   [110:0] zext_ln15_fu_463_p1;
wire   [110:0] sh_prom_i_i_i_i_i76_cast_cast_cast_cast_fu_466_p1;
wire   [110:0] r_V_4_fu_469_p2;
wire   [0:0] tmp_10_fu_481_p3;
wire   [110:0] r_V_5_fu_475_p2;
wire   [63:0] zext_ln662_2_fu_489_p1;
wire   [63:0] tmp_8_fu_493_p4;
wire   [63:0] result_V_2_fu_510_p2;
wire   [8:0] zext_ln32_1_fu_529_p1;
wire   [8:0] sub_ln32_fu_533_p2;
wire   [9:0] grp_fu_543_p1;
wire   [57:0] grp_fu_543_p2;
wire    ap_CS_fsm_state134;
wire   [57:0] trunc_ln33_fu_548_p1;
wire   [57:0] select_ln32_fu_552_p3;
wire   [57:0] result_fu_559_p2;
reg    grp_fu_457_ap_start;
wire    grp_fu_457_ap_done;
reg    grp_fu_543_ap_start;
wire    grp_fu_543_ap_done;
reg   [133:0] ap_NS_fsm;
wire   [63:0] grp_fu_543_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 134'd1;
end

fn1_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_114_p0),
    .din1(grp_fu_114_p1),
    .ce(1'b1),
    .dout(grp_fu_114_p2)
);

fn1_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1602224128),
    .din1(reg_134),
    .ce(1'b1),
    .dout(grp_fu_120_p2)
);

fn1_uitofp_64ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
uitofp_64ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_125_p0),
    .ce(1'b1),
    .dout(grp_fu_125_p1)
);

fn1_mul_8s_33ns_41_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 41 ))
mul_8s_33ns_41_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_17),
    .din1(grp_fu_165_p1),
    .ce(1'b1),
    .dout(grp_fu_165_p2)
);

fn1_mul_8s_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8s_7s_15_1_1_U5(
    .din0(mul_ln30_fu_419_p0),
    .din1(mul_ln30_fu_419_p1),
    .dout(mul_ln30_fu_419_p2)
);

fn1_sdiv_18s_16s_18_22_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 18 ))
sdiv_18s_16s_18_22_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_457_ap_start),
    .done(grp_fu_457_ap_done),
    .din0(grp_fu_457_p0),
    .din1(add_ln30_reg_661),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

fn1_mul_64s_18s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 64 ))
mul_64s_18s_64_5_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(result_V_reg_687),
    .din1(sdiv_ln30_reg_682),
    .ce(1'b1),
    .dout(grp_fu_524_p2)
);

fn1_sdiv_64ns_10ns_58_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 58 ))
sdiv_64ns_10ns_58_68_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_543_ap_start),
    .done(grp_fu_543_ap_done),
    .din0(v_reg_697),
    .din1(grp_fu_543_p1),
    .ce(1'b1),
    .dout(grp_fu_543_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln30_reg_661 <= add_ln30_fu_435_p2;
        v_9_1_reg_656 <= v_9_1_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln33_reg_574 <= icmp_ln33_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        isNeg_1_reg_646 <= add_ln341_1_fu_319_p2[32'd8];
        mantissa_reg_631[23 : 1] <= mantissa_fu_255_p4[23 : 1];
        sh_prom_i_i_i_i_i_cast_cast_cast_reg_636 <= sh_prom_i_i_i_i_i_cast_cast_cast_fu_268_p1;
        ush_1_reg_651 <= ush_1_fu_342_p3;
        val_reg_641 <= val_fu_309_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        isNeg_reg_604 <= add_ln341_fu_197_p2[32'd8];
        p_Result_s_reg_626 <= data_V_fu_175_p1[32'd31];
        tmp_12_reg_599 <= tmp_12_fu_189_p1;
        tmp_13_reg_615 <= {{data_V_1_fu_229_p1[30:23]}};
        tmp_14_reg_621 <= tmp_14_fu_243_p1;
        ush_reg_610 <= ush_fu_221_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln29_reg_589 <= grp_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_128 <= grp_fu_125_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_134 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        result_V_reg_687 <= result_V_fu_515_p3;
        sdiv_ln30_reg_682 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        v_reg_697 <= grp_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        val_2_reg_676 <= val_2_fu_503_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_114_p0 = reg_134;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_114_p0 = reg_128;
    end else begin
        grp_fu_114_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_114_p1 = 32'd1125318656;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_114_p1 = reg_128;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_114_p1 = 32'd3314769920;
    end else begin
        grp_fu_114_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_125_p0 = sext_ln28_fu_171_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_125_p0 = zext_ln20_fu_140_p1;
    end else begin
        grp_fu_125_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_457_ap_start = 1'b1;
    end else begin
        grp_fu_457_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_543_ap_start = 1'b1;
    end else begin
        grp_fu_543_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_fu_435_p2 = ($signed(sext_ln30_3_fu_431_p1) + $signed(16'd246));

assign add_ln33_fu_149_p2 = (zext_ln33_fu_145_p1 + 17'd112);

assign add_ln341_1_fu_319_p2 = ($signed(zext_ln341_1_fu_316_p1) + $signed(9'd385));

assign add_ln341_fu_197_p2 = ($signed(zext_ln341_fu_193_p1) + $signed(9'd385));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_return = $signed(result_fu_559_p2);

assign data_V_1_fu_229_p1 = grp_fu_120_p2;

assign data_V_fu_175_p1 = p_19;

assign grp_fu_165_p1 = 41'd3944733107;

assign grp_fu_457_p0 = $signed(sub_ln30_fu_444_p2);

assign grp_fu_543_p1 = grp_fu_543_p10;

assign grp_fu_543_p10 = sub_ln32_fu_533_p2;

assign icmp_ln33_fu_155_p2 = ((add_ln33_fu_149_p2 < 17'd225) ? 1'b1 : 1'b0);

assign isNeg_1_fu_325_p3 = add_ln341_1_fu_319_p2[32'd8];

assign isNeg_fu_203_p3 = add_ln341_fu_197_p2[32'd8];

assign mantissa_1_fu_350_p4 = {{{{1'd1}, {tmp_14_reg_621}}}, {1'd0}};

assign mantissa_fu_255_p4 = {{{{1'd1}, {tmp_12_reg_599}}}, {1'd0}};

assign mul_ln30_fu_419_p0 = sext_ln30_2_fu_416_p1;

assign mul_ln30_fu_419_p1 = 15'd32707;

assign r_V_1_fu_281_p2 = zext_ln68_fu_264_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_271_p1;

assign r_V_2_fu_370_p2 = zext_ln68_1_fu_359_p1 >> sh_prom_i_i_i_i_i26_cast_cast_cast_cast_fu_366_p1;

assign r_V_3_fu_376_p2 = zext_ln68_1_fu_359_p1 << sh_prom_i_i_i_i_i26_cast_cast_cast_cast_fu_366_p1;

assign r_V_4_fu_469_p2 = zext_ln15_fu_463_p1 >> sh_prom_i_i_i_i_i76_cast_cast_cast_cast_fu_466_p1;

assign r_V_5_fu_475_p2 = zext_ln15_fu_463_p1 << sh_prom_i_i_i_i_i76_cast_cast_cast_cast_fu_466_p1;

assign r_V_fu_275_p2 = zext_ln68_fu_264_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_271_p1;

assign result_V_2_fu_510_p2 = (64'd0 - val_2_reg_676);

assign result_V_fu_515_p3 = ((p_Result_s_reg_626[0:0] == 1'b1) ? result_V_2_fu_510_p2 : val_2_reg_676);

assign result_fu_559_p2 = (trunc_ln33_fu_548_p1 | select_ln32_fu_552_p3);

assign select_ln32_fu_552_p3 = ((icmp_ln33_reg_574[0:0] == 1'b1) ? 58'd288230375897274912 : 58'd288230375897274911);

assign sext_ln1311_1_fu_338_p1 = $signed(sub_ln1311_1_fu_333_p2);

assign sext_ln1311_fu_217_p1 = $signed(sub_ln1311_fu_211_p2);

assign sext_ln28_fu_171_p1 = $signed(mul_ln29_reg_589);

assign sext_ln30_2_fu_416_p0 = p_17;

assign sext_ln30_2_fu_416_p1 = sext_ln30_2_fu_416_p0;

assign sext_ln30_3_fu_431_p1 = $signed(xor_ln30_fu_425_p2);

assign sh_prom_i_i_i_i_i26_cast_cast_cast_cast_fu_366_p1 = $unsigned(sh_prom_i_i_i_i_i26_cast_cast_cast_fu_363_p1);

assign sh_prom_i_i_i_i_i26_cast_cast_cast_fu_363_p1 = $signed(ush_1_reg_651);

assign sh_prom_i_i_i_i_i76_cast_cast_cast_cast_fu_466_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_reg_636);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_271_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_268_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_268_p1 = $signed(ush_reg_610);

assign sub_ln1311_1_fu_333_p2 = (8'd127 - tmp_13_reg_615);

assign sub_ln1311_fu_211_p2 = (8'd127 - tmp_11_fu_179_p4);

assign sub_ln30_fu_444_p2 = ($signed(17'd83386) - $signed(zext_ln30_fu_441_p1));

assign sub_ln32_fu_533_p2 = ($signed(9'd371) - $signed(zext_ln32_1_fu_529_p1));

assign tmp_10_fu_481_p3 = r_V_4_fu_469_p2[32'd24];

assign tmp_11_fu_179_p4 = {{data_V_fu_175_p1[30:23]}};

assign tmp_12_fu_189_p1 = data_V_fu_175_p1[22:0];

assign tmp_14_fu_243_p1 = data_V_1_fu_229_p1[22:0];

assign tmp_1_fu_299_p4 = {{r_V_1_fu_281_p2[31:24]}};

assign tmp_6_fu_394_p4 = {{r_V_3_fu_376_p2[31:24]}};

assign tmp_7_fu_382_p3 = r_V_2_fu_370_p2[32'd24];

assign tmp_8_fu_493_p4 = {{r_V_5_fu_475_p2[87:24]}};

assign tmp_fu_287_p3 = r_V_fu_275_p2[32'd24];

assign trunc_ln33_fu_548_p1 = grp_fu_543_p2[57:0];

assign ush_1_fu_342_p3 = ((isNeg_1_fu_325_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_338_p1 : add_ln341_1_fu_319_p2);

assign ush_fu_221_p3 = ((isNeg_fu_203_p3[0:0] == 1'b1) ? sext_ln1311_fu_217_p1 : add_ln341_fu_197_p2);

assign v_9_1_fu_411_p2 = (val_1_fu_404_p3 - val_reg_641);

assign val_1_fu_404_p3 = ((isNeg_1_reg_646[0:0] == 1'b1) ? zext_ln662_1_fu_390_p1 : tmp_6_fu_394_p4);

assign val_2_fu_503_p3 = ((isNeg_reg_604[0:0] == 1'b1) ? zext_ln662_2_fu_489_p1 : tmp_8_fu_493_p4);

assign val_fu_309_p3 = ((isNeg_reg_604[0:0] == 1'b1) ? zext_ln662_fu_295_p1 : tmp_1_fu_299_p4);

assign xor_ln30_fu_425_p2 = (sext_ln30_2_fu_416_p1 ^ mul_ln30_fu_419_p2);

assign zext_ln15_fu_463_p1 = mantissa_reg_631;

assign zext_ln20_fu_140_p1 = p;

assign zext_ln30_fu_441_p1 = v_9_1_reg_656;

assign zext_ln32_1_fu_529_p1 = p_7;

assign zext_ln33_fu_145_p1 = p;

assign zext_ln341_1_fu_316_p1 = tmp_13_reg_615;

assign zext_ln341_fu_193_p1 = tmp_11_fu_179_p4;

assign zext_ln662_1_fu_390_p1 = tmp_7_fu_382_p3;

assign zext_ln662_2_fu_489_p1 = tmp_10_fu_481_p3;

assign zext_ln662_fu_295_p1 = tmp_fu_287_p3;

assign zext_ln68_1_fu_359_p1 = mantissa_1_fu_350_p4;

assign zext_ln68_fu_264_p1 = mantissa_fu_255_p4;

always @ (posedge ap_clk) begin
    mantissa_reg_631[0] <= 1'b0;
    mantissa_reg_631[24] <= 1'b1;
end

endmodule //fn1
