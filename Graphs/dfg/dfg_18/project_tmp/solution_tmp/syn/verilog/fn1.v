// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=92,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1627,HLS_SYN_LUT=4416,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_5,
        p_15,
        p_17,
        p_19_address0,
        p_19_ce0,
        p_19_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 93'd1;
parameter    ap_ST_fsm_state2 = 93'd2;
parameter    ap_ST_fsm_state3 = 93'd4;
parameter    ap_ST_fsm_state4 = 93'd8;
parameter    ap_ST_fsm_state5 = 93'd16;
parameter    ap_ST_fsm_state6 = 93'd32;
parameter    ap_ST_fsm_state7 = 93'd64;
parameter    ap_ST_fsm_state8 = 93'd128;
parameter    ap_ST_fsm_state9 = 93'd256;
parameter    ap_ST_fsm_state10 = 93'd512;
parameter    ap_ST_fsm_state11 = 93'd1024;
parameter    ap_ST_fsm_state12 = 93'd2048;
parameter    ap_ST_fsm_state13 = 93'd4096;
parameter    ap_ST_fsm_state14 = 93'd8192;
parameter    ap_ST_fsm_state15 = 93'd16384;
parameter    ap_ST_fsm_state16 = 93'd32768;
parameter    ap_ST_fsm_state17 = 93'd65536;
parameter    ap_ST_fsm_state18 = 93'd131072;
parameter    ap_ST_fsm_state19 = 93'd262144;
parameter    ap_ST_fsm_state20 = 93'd524288;
parameter    ap_ST_fsm_state21 = 93'd1048576;
parameter    ap_ST_fsm_state22 = 93'd2097152;
parameter    ap_ST_fsm_state23 = 93'd4194304;
parameter    ap_ST_fsm_state24 = 93'd8388608;
parameter    ap_ST_fsm_state25 = 93'd16777216;
parameter    ap_ST_fsm_state26 = 93'd33554432;
parameter    ap_ST_fsm_state27 = 93'd67108864;
parameter    ap_ST_fsm_state28 = 93'd134217728;
parameter    ap_ST_fsm_state29 = 93'd268435456;
parameter    ap_ST_fsm_state30 = 93'd536870912;
parameter    ap_ST_fsm_state31 = 93'd1073741824;
parameter    ap_ST_fsm_state32 = 93'd2147483648;
parameter    ap_ST_fsm_state33 = 93'd4294967296;
parameter    ap_ST_fsm_state34 = 93'd8589934592;
parameter    ap_ST_fsm_state35 = 93'd17179869184;
parameter    ap_ST_fsm_state36 = 93'd34359738368;
parameter    ap_ST_fsm_state37 = 93'd68719476736;
parameter    ap_ST_fsm_state38 = 93'd137438953472;
parameter    ap_ST_fsm_state39 = 93'd274877906944;
parameter    ap_ST_fsm_state40 = 93'd549755813888;
parameter    ap_ST_fsm_state41 = 93'd1099511627776;
parameter    ap_ST_fsm_state42 = 93'd2199023255552;
parameter    ap_ST_fsm_state43 = 93'd4398046511104;
parameter    ap_ST_fsm_state44 = 93'd8796093022208;
parameter    ap_ST_fsm_state45 = 93'd17592186044416;
parameter    ap_ST_fsm_state46 = 93'd35184372088832;
parameter    ap_ST_fsm_state47 = 93'd70368744177664;
parameter    ap_ST_fsm_state48 = 93'd140737488355328;
parameter    ap_ST_fsm_state49 = 93'd281474976710656;
parameter    ap_ST_fsm_state50 = 93'd562949953421312;
parameter    ap_ST_fsm_state51 = 93'd1125899906842624;
parameter    ap_ST_fsm_state52 = 93'd2251799813685248;
parameter    ap_ST_fsm_state53 = 93'd4503599627370496;
parameter    ap_ST_fsm_state54 = 93'd9007199254740992;
parameter    ap_ST_fsm_state55 = 93'd18014398509481984;
parameter    ap_ST_fsm_state56 = 93'd36028797018963968;
parameter    ap_ST_fsm_state57 = 93'd72057594037927936;
parameter    ap_ST_fsm_state58 = 93'd144115188075855872;
parameter    ap_ST_fsm_state59 = 93'd288230376151711744;
parameter    ap_ST_fsm_state60 = 93'd576460752303423488;
parameter    ap_ST_fsm_state61 = 93'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 93'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 93'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 93'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 93'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 93'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 93'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 93'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 93'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 93'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 93'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 93'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 93'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 93'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 93'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 93'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 93'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 93'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 93'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 93'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 93'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 93'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 93'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 93'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 93'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 93'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 93'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 93'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 93'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 93'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 93'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 93'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 93'd4951760157141521099596496896;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p;
input  [63:0] p_5;
input  [15:0] p_15;
input  [63:0] p_17;
output  [3:0] p_19_address0;
output   p_19_ce0;
input  [63:0] p_19_q0;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_19_ce0;

(* fsm_encoding = "none" *) reg   [92:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_148_p1;
reg   [63:0] reg_151;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state86;
reg   [63:0] p_19_load_reg_540;
wire    ap_CS_fsm_state2;
wire   [63:0] bitcast_ln19_fu_158_p1;
wire    ap_CS_fsm_state3;
reg   [10:0] tmp_9_reg_550;
wire    ap_CS_fsm_state9;
wire   [51:0] tmp_10_fu_176_p1;
reg   [51:0] tmp_10_reg_556;
wire   [16:0] sub_ln20_fu_289_p2;
reg   [16:0] sub_ln20_reg_561;
wire    ap_CS_fsm_state10;
wire  signed [31:0] grp_fu_522_p2;
reg  signed [31:0] mul_ln21_reg_576;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln21_fu_317_p2;
reg   [0:0] icmp_ln21_reg_581;
wire   [32:0] add_ln21_fu_349_p2;
reg   [32:0] add_ln21_reg_586;
wire    ap_CS_fsm_state14;
wire  signed [63:0] sext_ln20_fu_355_p1;
wire    ap_CS_fsm_state15;
wire   [31:0] sub_ln24_fu_359_p2;
reg   [31:0] sub_ln24_reg_596;
wire    ap_CS_fsm_state21;
wire   [63:0] grp_fu_134_p2;
reg   [63:0] add_reg_601;
wire   [63:0] data_V_1_fu_365_p1;
reg   [63:0] data_V_1_reg_606;
wire    ap_CS_fsm_state79;
wire   [31:0] val_fu_475_p3;
reg   [31:0] val_reg_611;
wire   [31:0] xor_ln24_fu_502_p2;
reg   [31:0] xor_ln24_reg_617;
wire    ap_CS_fsm_state80;
wire   [63:0] xor_ln24_1_fu_512_p2;
reg   [63:0] xor_ln24_1_reg_622;
wire   [63:0] bitcast_ln24_1_fu_518_p1;
wire    ap_CS_fsm_state87;
reg   [63:0] grp_fu_139_p0;
reg   [63:0] grp_fu_139_p1;
wire    ap_CS_fsm_state28;
reg  signed [63:0] grp_fu_148_p0;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state81;
wire   [63:0] grp_fu_139_p2;
wire   [63:0] data_V_fu_162_p1;
wire   [53:0] mantissa_fu_184_p4;
wire   [11:0] zext_ln510_fu_197_p1;
wire   [11:0] add_ln510_fu_200_p2;
wire   [10:0] sub_ln1311_fu_214_p2;
wire   [0:0] isNeg_fu_206_p3;
wire  signed [11:0] sext_ln1311_fu_219_p1;
wire   [11:0] ush_fu_223_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_231_p1;
wire   [112:0] zext_ln68_fu_193_p1;
wire   [112:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_235_p1;
wire   [112:0] r_V_fu_239_p2;
wire   [0:0] tmp_fu_251_p3;
wire   [112:0] r_V_1_fu_245_p2;
wire   [7:0] zext_ln20_2_fu_259_p1;
wire   [7:0] tmp_1_fu_263_p4;
wire   [7:0] select_ln1312_fu_273_p3;
wire   [15:0] v_9_fu_180_p1;
wire   [16:0] zext_ln20_3_fu_281_p1;
wire   [16:0] zext_ln20_fu_285_p1;
wire   [3:0] trunc_ln22_fu_299_p1;
wire  signed [15:0] ashr_ln22_fu_307_p0;
wire   [15:0] zext_ln22_fu_303_p1;
wire  signed [15:0] ashr_ln22_fu_307_p2;
wire  signed [30:0] grp_fu_528_p2;
wire   [16:0] xor_ln20_fu_322_p2;
wire   [31:0] xor_ln20_1_fu_331_p2;
wire   [32:0] zext_ln20_1_fu_340_p1;
wire  signed [32:0] sext_ln22_fu_336_p1;
wire   [32:0] sub_ln20_1_fu_343_p2;
wire  signed [32:0] sext_ln21_fu_327_p1;
wire   [51:0] tmp_12_fu_379_p1;
wire   [53:0] mantissa_1_fu_383_p4;
wire   [10:0] tmp_11_fu_369_p4;
wire   [11:0] zext_ln510_1_fu_397_p1;
wire   [11:0] add_ln510_1_fu_401_p2;
wire   [10:0] sub_ln1311_1_fu_415_p2;
wire   [0:0] isNeg_1_fu_407_p3;
wire  signed [11:0] sext_ln1311_1_fu_421_p1;
wire   [11:0] ush_1_fu_425_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i23_cast_cast_cast_fu_433_p1;
wire   [136:0] zext_ln15_fu_393_p1;
wire   [136:0] sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_437_p1;
wire   [136:0] r_V_2_fu_441_p2;
wire   [0:0] tmp_8_fu_453_p3;
wire   [136:0] r_V_3_fu_447_p2;
wire   [31:0] zext_ln662_fu_461_p1;
wire   [31:0] tmp_6_fu_465_p4;
wire   [0:0] p_Result_s_fu_483_p3;
wire   [31:0] result_V_2_fu_490_p2;
wire   [31:0] result_V_fu_495_p3;
wire   [63:0] grp_fu_144_p2;
wire   [63:0] bitcast_ln24_fu_508_p1;
wire  signed [15:0] grp_fu_522_p1;
wire  signed [14:0] grp_fu_528_p1;
wire    ap_CS_fsm_state93;
reg   [92:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 93'd1;
end

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_151),
    .din1(64'd4644864881307156480),
    .ce(1'b1),
    .dout(grp_fu_134_p2)
);

fn1_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_139_p0),
    .din1(grp_fu_139_p1),
    .ce(1'b1),
    .dout(grp_fu_139_p2)
);

fn1_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_151),
    .din1(add_reg_601),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

fn1_sitodp_64s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64s_64_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_148_p0),
    .ce(1'b1),
    .dout(grp_fu_148_p1)
);

fn1_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_15),
    .din1(grp_fu_522_p1),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

fn1_mul_mul_16s_15s_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_mul_16s_15s_31_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ashr_ln22_fu_307_p2),
    .din1(grp_fu_528_p1),
    .ce(1'b1),
    .dout(grp_fu_528_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln21_reg_586 <= add_ln21_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_reg_601 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        data_V_1_reg_606 <= data_V_1_fu_365_p1;
        val_reg_611 <= val_fu_475_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln21_reg_581 <= icmp_ln21_fu_317_p2;
        mul_ln21_reg_576 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_19_load_reg_540 <= p_19_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_151 <= grp_fu_148_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sub_ln20_reg_561 <= sub_ln20_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sub_ln24_reg_596 <= sub_ln24_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_10_reg_556 <= tmp_10_fu_176_p1;
        tmp_9_reg_550 <= {{data_V_fu_162_p1[62:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        xor_ln24_1_reg_622 <= xor_ln24_1_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        xor_ln24_reg_617 <= xor_ln24_fu_502_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_139_p0 = reg_151;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_139_p0 = bitcast_ln19_fu_158_p1;
    end else begin
        grp_fu_139_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_139_p1 = bitcast_ln24_1_fu_518_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_139_p1 = 64'd4738378729523249152;
    end else begin
        grp_fu_139_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_148_p0 = xor_ln24_reg_617;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_148_p0 = sub_ln24_reg_596;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_148_p0 = sext_ln20_fu_355_p1;
    end else begin
        grp_fu_148_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_19_ce0 = 1'b1;
    end else begin
        p_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_349_p2 = ($signed(sub_ln20_1_fu_343_p2) + $signed(sext_ln21_fu_327_p1));

assign add_ln510_1_fu_401_p2 = ($signed(zext_ln510_1_fu_397_p1) + $signed(12'd3073));

assign add_ln510_fu_200_p2 = ($signed(zext_ln510_fu_197_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_return = grp_fu_139_p2;

assign ashr_ln22_fu_307_p0 = p_15;

assign ashr_ln22_fu_307_p2 = $signed(ashr_ln22_fu_307_p0) >>> zext_ln22_fu_303_p1;

assign bitcast_ln19_fu_158_p1 = p_19_load_reg_540;

assign bitcast_ln24_1_fu_518_p1 = xor_ln24_1_reg_622;

assign bitcast_ln24_fu_508_p1 = grp_fu_144_p2;

assign data_V_1_fu_365_p1 = p_5;

assign data_V_fu_162_p1 = grp_fu_139_p2;

assign grp_fu_522_p1 = 32'd4294942561;

assign grp_fu_528_p1 = 31'd2147472339;

assign icmp_ln21_fu_317_p2 = ((grp_fu_528_p2 == 31'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_407_p3 = add_ln510_1_fu_401_p2[32'd11];

assign isNeg_fu_206_p3 = add_ln510_fu_200_p2[32'd11];

assign mantissa_1_fu_383_p4 = {{{{1'd1}, {tmp_12_fu_379_p1}}}, {1'd0}};

assign mantissa_fu_184_p4 = {{{{1'd1}, {tmp_10_reg_556}}}, {1'd0}};

assign p_19_address0 = 64'd11;

assign p_Result_s_fu_483_p3 = data_V_1_reg_606[32'd63];

assign r_V_1_fu_245_p2 = zext_ln68_fu_193_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_235_p1;

assign r_V_2_fu_441_p2 = zext_ln15_fu_393_p1 >> sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_437_p1;

assign r_V_3_fu_447_p2 = zext_ln15_fu_393_p1 << sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_437_p1;

assign r_V_fu_239_p2 = zext_ln68_fu_193_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_235_p1;

assign result_V_2_fu_490_p2 = (32'd0 - val_reg_611);

assign result_V_fu_495_p3 = ((p_Result_s_fu_483_p3[0:0] == 1'b1) ? result_V_2_fu_490_p2 : val_reg_611);

assign select_ln1312_fu_273_p3 = ((isNeg_fu_206_p3[0:0] == 1'b1) ? zext_ln20_2_fu_259_p1 : tmp_1_fu_263_p4);

assign sext_ln1311_1_fu_421_p1 = $signed(sub_ln1311_1_fu_415_p2);

assign sext_ln1311_fu_219_p1 = $signed(sub_ln1311_fu_214_p2);

assign sext_ln20_fu_355_p1 = $signed(add_ln21_reg_586);

assign sext_ln21_fu_327_p1 = $signed(xor_ln20_fu_322_p2);

assign sext_ln22_fu_336_p1 = $signed(xor_ln20_1_fu_331_p2);

assign sh_prom_i_i_i_i_i23_cast_cast_cast_cast_fu_437_p1 = $unsigned(sh_prom_i_i_i_i_i23_cast_cast_cast_fu_433_p1);

assign sh_prom_i_i_i_i_i23_cast_cast_cast_fu_433_p1 = $signed(ush_1_fu_425_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_235_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_231_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_231_p1 = $signed(ush_fu_223_p3);

assign sub_ln1311_1_fu_415_p2 = (11'd1023 - tmp_11_fu_369_p4);

assign sub_ln1311_fu_214_p2 = (11'd1023 - tmp_9_reg_550);

assign sub_ln20_1_fu_343_p2 = ($signed(zext_ln20_1_fu_340_p1) - $signed(sext_ln22_fu_336_p1));

assign sub_ln20_fu_289_p2 = (zext_ln20_3_fu_281_p1 - zext_ln20_fu_285_p1);

assign sub_ln24_fu_359_p2 = (32'd0 - p);

assign tmp_10_fu_176_p1 = data_V_fu_162_p1[51:0];

assign tmp_11_fu_369_p4 = {{data_V_1_fu_365_p1[62:52]}};

assign tmp_12_fu_379_p1 = data_V_1_fu_365_p1[51:0];

assign tmp_1_fu_263_p4 = {{r_V_1_fu_245_p2[60:53]}};

assign tmp_6_fu_465_p4 = {{r_V_3_fu_447_p2[84:53]}};

assign tmp_8_fu_453_p3 = r_V_2_fu_441_p2[32'd53];

assign tmp_fu_251_p3 = r_V_fu_239_p2[32'd53];

assign trunc_ln22_fu_299_p1 = p_17[3:0];

assign ush_1_fu_425_p3 = ((isNeg_1_fu_407_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_421_p1 : add_ln510_1_fu_401_p2);

assign ush_fu_223_p3 = ((isNeg_fu_206_p3[0:0] == 1'b1) ? sext_ln1311_fu_219_p1 : add_ln510_fu_200_p2);

assign v_9_fu_180_p1 = p_17[15:0];

assign val_fu_475_p3 = ((isNeg_1_fu_407_p3[0:0] == 1'b1) ? zext_ln662_fu_461_p1 : tmp_6_fu_465_p4);

assign xor_ln20_1_fu_331_p2 = (mul_ln21_reg_576 ^ 32'd4294924599);

assign xor_ln20_fu_322_p2 = (sub_ln20_reg_561 ^ 17'd131071);

assign xor_ln24_1_fu_512_p2 = (bitcast_ln24_fu_508_p1 ^ 64'd9223372036854775808);

assign xor_ln24_fu_502_p2 = (result_V_fu_495_p3 ^ 32'd4294967295);

assign zext_ln15_fu_393_p1 = mantissa_1_fu_383_p4;

assign zext_ln20_1_fu_340_p1 = icmp_ln21_reg_581;

assign zext_ln20_2_fu_259_p1 = tmp_fu_251_p3;

assign zext_ln20_3_fu_281_p1 = select_ln1312_fu_273_p3;

assign zext_ln20_fu_285_p1 = v_9_fu_180_p1;

assign zext_ln22_fu_303_p1 = trunc_ln22_fu_299_p1;

assign zext_ln510_1_fu_397_p1 = tmp_11_fu_369_p4;

assign zext_ln510_fu_197_p1 = tmp_9_reg_550;

assign zext_ln662_fu_461_p1 = tmp_8_fu_453_p3;

assign zext_ln68_fu_193_p1 = mantissa_fu_184_p4;

endmodule //fn1
