// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=90,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1133,HLS_SYN_LUT=2488,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_5,
        p_9,
        p_11_address0,
        p_11_ce0,
        p_11_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 91'd1;
parameter    ap_ST_fsm_state2 = 91'd2;
parameter    ap_ST_fsm_state3 = 91'd4;
parameter    ap_ST_fsm_state4 = 91'd8;
parameter    ap_ST_fsm_state5 = 91'd16;
parameter    ap_ST_fsm_state6 = 91'd32;
parameter    ap_ST_fsm_state7 = 91'd64;
parameter    ap_ST_fsm_state8 = 91'd128;
parameter    ap_ST_fsm_state9 = 91'd256;
parameter    ap_ST_fsm_state10 = 91'd512;
parameter    ap_ST_fsm_state11 = 91'd1024;
parameter    ap_ST_fsm_state12 = 91'd2048;
parameter    ap_ST_fsm_state13 = 91'd4096;
parameter    ap_ST_fsm_state14 = 91'd8192;
parameter    ap_ST_fsm_state15 = 91'd16384;
parameter    ap_ST_fsm_state16 = 91'd32768;
parameter    ap_ST_fsm_state17 = 91'd65536;
parameter    ap_ST_fsm_state18 = 91'd131072;
parameter    ap_ST_fsm_state19 = 91'd262144;
parameter    ap_ST_fsm_state20 = 91'd524288;
parameter    ap_ST_fsm_state21 = 91'd1048576;
parameter    ap_ST_fsm_state22 = 91'd2097152;
parameter    ap_ST_fsm_state23 = 91'd4194304;
parameter    ap_ST_fsm_state24 = 91'd8388608;
parameter    ap_ST_fsm_state25 = 91'd16777216;
parameter    ap_ST_fsm_state26 = 91'd33554432;
parameter    ap_ST_fsm_state27 = 91'd67108864;
parameter    ap_ST_fsm_state28 = 91'd134217728;
parameter    ap_ST_fsm_state29 = 91'd268435456;
parameter    ap_ST_fsm_state30 = 91'd536870912;
parameter    ap_ST_fsm_state31 = 91'd1073741824;
parameter    ap_ST_fsm_state32 = 91'd2147483648;
parameter    ap_ST_fsm_state33 = 91'd4294967296;
parameter    ap_ST_fsm_state34 = 91'd8589934592;
parameter    ap_ST_fsm_state35 = 91'd17179869184;
parameter    ap_ST_fsm_state36 = 91'd34359738368;
parameter    ap_ST_fsm_state37 = 91'd68719476736;
parameter    ap_ST_fsm_state38 = 91'd137438953472;
parameter    ap_ST_fsm_state39 = 91'd274877906944;
parameter    ap_ST_fsm_state40 = 91'd549755813888;
parameter    ap_ST_fsm_state41 = 91'd1099511627776;
parameter    ap_ST_fsm_state42 = 91'd2199023255552;
parameter    ap_ST_fsm_state43 = 91'd4398046511104;
parameter    ap_ST_fsm_state44 = 91'd8796093022208;
parameter    ap_ST_fsm_state45 = 91'd17592186044416;
parameter    ap_ST_fsm_state46 = 91'd35184372088832;
parameter    ap_ST_fsm_state47 = 91'd70368744177664;
parameter    ap_ST_fsm_state48 = 91'd140737488355328;
parameter    ap_ST_fsm_state49 = 91'd281474976710656;
parameter    ap_ST_fsm_state50 = 91'd562949953421312;
parameter    ap_ST_fsm_state51 = 91'd1125899906842624;
parameter    ap_ST_fsm_state52 = 91'd2251799813685248;
parameter    ap_ST_fsm_state53 = 91'd4503599627370496;
parameter    ap_ST_fsm_state54 = 91'd9007199254740992;
parameter    ap_ST_fsm_state55 = 91'd18014398509481984;
parameter    ap_ST_fsm_state56 = 91'd36028797018963968;
parameter    ap_ST_fsm_state57 = 91'd72057594037927936;
parameter    ap_ST_fsm_state58 = 91'd144115188075855872;
parameter    ap_ST_fsm_state59 = 91'd288230376151711744;
parameter    ap_ST_fsm_state60 = 91'd576460752303423488;
parameter    ap_ST_fsm_state61 = 91'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 91'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 91'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 91'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 91'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 91'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 91'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 91'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 91'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 91'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 91'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 91'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 91'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 91'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 91'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 91'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 91'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 91'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 91'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 91'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 91'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 91'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 91'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 91'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 91'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 91'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 91'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 91'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 91'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 91'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 91'd1237940039285380274899124224;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p;
input  [7:0] p_5;
input  [7:0] p_9;
output  [3:0] p_11_address0;
output   p_11_ce0;
input  [7:0] p_11_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_11_ce0;

(* fsm_encoding = "none" *) reg   [90:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_124_p1;
reg   [63:0] v_reg_310;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire   [63:0] grp_fu_120_p1;
reg   [63:0] conv6_reg_320;
wire    ap_CS_fsm_state13;
wire   [63:0] grp_fu_111_p2;
reg   [63:0] add_reg_325;
wire    ap_CS_fsm_state69;
reg   [10:0] tmp_2_reg_335;
wire    ap_CS_fsm_state72;
wire   [51:0] tmp_3_fu_146_p1;
reg   [51:0] tmp_3_reg_341;
wire   [7:0] xor_ln16_fu_247_p2;
reg   [7:0] xor_ln16_reg_346;
wire    ap_CS_fsm_state73;
wire   [9:0] sub_ln17_fu_262_p2;
reg   [9:0] sub_ln17_reg_351;
wire    ap_CS_fsm_state74;
wire   [8:0] xor_ln15_fu_284_p2;
reg   [8:0] xor_ln15_reg_361;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire  signed [31:0] grp_fu_108_p0;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire  signed [31:0] grp_fu_124_p0;
wire   [63:0] grp_fu_116_p2;
wire   [63:0] data_V_fu_132_p1;
wire   [53:0] mantissa_fu_150_p4;
wire   [11:0] zext_ln510_fu_163_p1;
wire   [11:0] add_ln510_fu_166_p2;
wire   [10:0] sub_ln1311_fu_180_p2;
wire   [0:0] isNeg_fu_172_p3;
wire  signed [11:0] sext_ln1311_fu_185_p1;
wire   [11:0] ush_fu_189_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_197_p1;
wire   [112:0] zext_ln68_fu_159_p1;
wire   [112:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_201_p1;
wire   [112:0] r_V_fu_205_p2;
wire   [0:0] tmp_fu_217_p3;
wire   [112:0] r_V_1_fu_211_p2;
wire   [7:0] zext_ln662_fu_225_p1;
wire   [7:0] tmp_1_fu_229_p4;
wire   [7:0] val_fu_239_p3;
wire  signed [7:0] grp_fu_294_p4;
wire   [7:0] and_ln17_fu_253_p2;
wire   [9:0] zext_ln17_1_fu_258_p1;
wire   [7:0] grp_fu_271_p0;
wire   [7:0] grp_fu_271_p2;
wire   [7:0] trunc_ln15_fu_276_p1;
wire   [8:0] zext_ln15_fu_280_p1;
wire  signed [5:0] grp_fu_294_p0;
wire    ap_CS_fsm_state70;
wire   [31:0] grp_fu_108_p1;
reg    grp_fu_271_ap_start;
wire    grp_fu_271_ap_done;
wire    ap_CS_fsm_state91;
reg   [90:0] ap_NS_fsm;
wire   [9:0] grp_fu_271_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 91'd1;
end

fn1_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_108_p0),
    .ce(1'b1),
    .dout(grp_fu_108_p1)
);

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_reg_310),
    .din1(64'd4650054576190259200),
    .ce(1'b1),
    .dout(grp_fu_111_p2)
);

fn1_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv6_reg_320),
    .din1(add_reg_325),
    .ce(1'b1),
    .dout(grp_fu_116_p2)
);

fn1_uitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p),
    .ce(1'b1),
    .dout(grp_fu_120_p1)
);

fn1_sitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_6_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_124_p0),
    .ce(1'b1),
    .dout(grp_fu_124_p1)
);

fn1_urem_8ns_10ns_8_12_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 8 ))
urem_8ns_10ns_8_12_seq_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_271_ap_start),
    .done(grp_fu_271_ap_done),
    .din0(grp_fu_271_p0),
    .din1(sub_ln17_reg_351),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

fn1_ama_submuladd_6s_8ns_8ns_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
ama_submuladd_6s_8ns_8ns_8ns_8_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_294_p0),
    .din1(p_11_q0),
    .din2(8'd97),
    .din3(8'd123),
    .ce(1'b1),
    .dout(grp_fu_294_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_reg_325 <= grp_fu_111_p2;
        conv6_reg_320 <= grp_fu_120_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        sub_ln17_reg_351 <= sub_ln17_fu_262_p2;
        xor_ln16_reg_346 <= xor_ln16_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        tmp_2_reg_335 <= {{data_V_fu_132_p1[62:52]}};
        tmp_3_reg_341 <= tmp_3_fu_146_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v_reg_310 <= grp_fu_124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        xor_ln15_reg_361 <= xor_ln15_fu_284_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_fu_271_ap_start = 1'b1;
    end else begin
        grp_fu_271_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        p_11_ce0 = 1'b1;
    end else begin
        p_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln510_fu_166_p2 = ($signed(zext_ln510_fu_163_p1) + $signed(12'd3073));

assign and_ln17_fu_253_p2 = (p_5 & grp_fu_294_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_return = grp_fu_108_p1;

assign data_V_fu_132_p1 = grp_fu_116_p2;

assign grp_fu_108_p0 = $signed(xor_ln15_reg_361);

assign grp_fu_124_p0 = $signed(p_9);

assign grp_fu_271_p0 = grp_fu_271_p00;

assign grp_fu_271_p00 = xor_ln16_reg_346;

assign grp_fu_294_p0 = 8'd225;

assign isNeg_fu_172_p3 = add_ln510_fu_166_p2[32'd11];

assign mantissa_fu_150_p4 = {{{{1'd1}, {tmp_3_reg_341}}}, {1'd0}};

assign p_11_address0 = 64'd10;

assign r_V_1_fu_211_p2 = zext_ln68_fu_159_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_201_p1;

assign r_V_fu_205_p2 = zext_ln68_fu_159_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_201_p1;

assign sext_ln1311_fu_185_p1 = $signed(sub_ln1311_fu_180_p2);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_201_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_197_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_197_p1 = $signed(ush_fu_189_p3);

assign sub_ln1311_fu_180_p2 = (11'd1023 - tmp_2_reg_335);

assign sub_ln17_fu_262_p2 = ($signed(10'd549) - $signed(zext_ln17_1_fu_258_p1));

assign tmp_1_fu_229_p4 = {{r_V_1_fu_211_p2[60:53]}};

assign tmp_3_fu_146_p1 = data_V_fu_132_p1[51:0];

assign tmp_fu_217_p3 = r_V_fu_205_p2[32'd53];

assign trunc_ln15_fu_276_p1 = grp_fu_271_p2[7:0];

assign ush_fu_189_p3 = ((isNeg_fu_172_p3[0:0] == 1'b1) ? sext_ln1311_fu_185_p1 : add_ln510_fu_166_p2);

assign val_fu_239_p3 = ((isNeg_fu_172_p3[0:0] == 1'b1) ? zext_ln662_fu_225_p1 : tmp_1_fu_229_p4);

assign xor_ln15_fu_284_p2 = (zext_ln15_fu_280_p1 ^ 9'd511);

assign xor_ln16_fu_247_p2 = (val_fu_239_p3 ^ p_5);

assign zext_ln15_fu_280_p1 = trunc_ln15_fu_276_p1;

assign zext_ln17_1_fu_258_p1 = and_ln17_fu_253_p2;

assign zext_ln510_fu_163_p1 = tmp_2_reg_335;

assign zext_ln662_fu_225_p1 = tmp_fu_217_p3;

assign zext_ln68_fu_159_p1 = mantissa_fu_150_p4;

endmodule //fn1
