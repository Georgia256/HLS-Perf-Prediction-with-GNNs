// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=60,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2117,HLS_SYN_LUT=5115,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_7,
        p_9_address0,
        p_9_ce0,
        p_9_q0,
        p_11,
        p_15_address0,
        p_15_ce0,
        p_15_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p;
input  [63:0] p_7;
output  [2:0] p_9_address0;
output   p_9_ce0;
input  [7:0] p_9_q0;
input  [7:0] p_11;
output  [3:0] p_15_address0;
output   p_15_ce0;
input  [63:0] p_15_q0;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_9_ce0;
reg p_15_ce0;

(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_144_p2;
reg   [63:0] reg_158;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state20;
wire   [63:0] grp_fu_155_p1;
reg   [63:0] conv3_reg_609;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg   [0:0] p_Result_1_reg_621;
wire   [7:0] val_1_fu_286_p3;
reg   [7:0] val_1_reg_626;
wire   [7:0] result_V_7_fu_299_p3;
reg   [7:0] result_V_7_reg_632;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg   [7:0] p_9_load_reg_642;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [63:0] grp_fu_150_p2;
reg   [63:0] add_reg_657;
wire    ap_CS_fsm_state21;
reg   [0:0] p_Result_s_reg_667;
wire   [7:0] val_fu_445_p3;
reg   [7:0] val_reg_672;
wire   [7:0] v_13_fu_478_p2;
reg   [7:0] v_13_reg_683;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln20_1_fu_493_p2;
reg   [0:0] icmp_ln20_1_reg_689;
wire    ap_CS_fsm_state23;
wire   [8:0] v_4_fu_514_p2;
reg   [8:0] v_4_reg_694;
wire    ap_CS_fsm_state24;
wire   [28:0] sub_ln21_1_fu_543_p2;
reg   [28:0] sub_ln21_1_reg_699;
wire   [10:0] grp_fu_321_p2;
reg   [10:0] srem_ln21_reg_704;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state58;
reg   [63:0] grp_fu_144_p0;
reg   [63:0] grp_fu_144_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_155_p0;
wire   [63:0] data_V_1_fu_168_p1;
wire   [51:0] tmp_13_fu_190_p1;
wire   [53:0] mantissa_1_fu_194_p4;
wire   [10:0] tmp_12_fu_180_p4;
wire   [11:0] zext_ln510_1_fu_208_p1;
wire   [11:0] add_ln510_1_fu_212_p2;
wire   [10:0] sub_ln1311_1_fu_226_p2;
wire   [0:0] isNeg_1_fu_218_p3;
wire  signed [11:0] sext_ln1311_1_fu_232_p1;
wire   [11:0] ush_1_fu_236_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i22_cast_cast_cast_fu_244_p1;
wire   [112:0] zext_ln15_1_fu_204_p1;
wire   [112:0] sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_248_p1;
wire   [112:0] r_V_2_fu_252_p2;
wire   [0:0] tmp_9_fu_264_p3;
wire   [112:0] r_V_3_fu_258_p2;
wire   [7:0] zext_ln662_1_fu_272_p1;
wire   [7:0] tmp_6_fu_276_p4;
wire   [7:0] result_V_6_fu_294_p2;
wire  signed [9:0] sext_ln22_1_fu_308_p1;
wire   [9:0] add_ln22_fu_311_p2;
wire  signed [8:0] grp_fu_321_p0;
wire   [10:0] grp_fu_321_p1;
wire   [63:0] data_V_fu_327_p1;
wire   [51:0] tmp_11_fu_349_p1;
wire   [53:0] mantissa_fu_353_p4;
wire   [10:0] tmp_10_fu_339_p4;
wire   [11:0] zext_ln510_fu_367_p1;
wire   [11:0] add_ln510_fu_371_p2;
wire   [10:0] sub_ln1311_fu_385_p2;
wire   [0:0] isNeg_fu_377_p3;
wire  signed [11:0] sext_ln1311_fu_391_p1;
wire   [11:0] ush_fu_395_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_403_p1;
wire   [168:0] zext_ln15_fu_363_p1;
wire   [168:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_407_p1;
wire   [168:0] r_V_fu_411_p2;
wire   [0:0] tmp_fu_423_p3;
wire   [168:0] r_V_1_fu_417_p2;
wire   [7:0] zext_ln662_fu_431_p1;
wire   [7:0] tmp_1_fu_435_p4;
wire   [7:0] result_V_2_fu_461_p2;
wire   [7:0] trunc_ln19_fu_457_p1;
wire   [7:0] result_V_fu_466_p3;
wire   [7:0] sub_ln19_fu_472_p2;
wire   [0:0] icmp_ln20_fu_484_p2;
wire   [7:0] zext_ln20_1_fu_489_p1;
wire   [8:0] zext_ln20_fu_498_p1;
wire   [8:0] add_ln20_fu_501_p2;
wire   [8:0] select_ln20_fu_507_p3;
wire   [32:0] grp_fu_585_p2;
wire   [9:0] tmp_2_fu_524_p4;
wire   [28:0] zext_ln21_fu_533_p1;
wire   [28:0] sub_ln21_fu_537_p2;
wire   [28:0] zext_ln13_1_fu_520_p1;
wire  signed [11:0] sext_ln22_2_fu_552_p1;
wire  signed [11:0] sub_ln22_fu_555_p2;
wire   [29:0] grp_fu_565_p0;
wire   [10:0] grp_fu_565_p2;
wire   [10:0] trunc_ln22_fu_574_p1;
wire   [19:0] grp_fu_592_p2;
wire    ap_CS_fsm_state61;
wire   [15:0] grp_fu_585_p0;
wire   [17:0] grp_fu_585_p1;
wire   [10:0] grp_fu_592_p0;
wire   [8:0] grp_fu_592_p1;
reg    grp_fu_321_ap_start;
wire    grp_fu_321_ap_done;
reg    grp_fu_565_ap_start;
wire    grp_fu_565_ap_done;
reg   [60:0] ap_NS_fsm;
wire   [32:0] grp_fu_585_p00;
wire   [19:0] grp_fu_592_p00;
wire   [19:0] grp_fu_592_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
end

fn1_dsub_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_144_p0),
    .din1(grp_fu_144_p1),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv3_reg_609),
    .din1(p_7),
    .ce(1'b1),
    .dout(grp_fu_150_p2)
);

fn1_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_155_p0),
    .ce(1'b1),
    .dout(grp_fu_155_p1)
);

fn1_srem_9s_11ns_11_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
srem_9s_11ns_11_13_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_321_ap_start),
    .done(grp_fu_321_ap_done),
    .din0(grp_fu_321_p0),
    .din1(grp_fu_321_p1),
    .ce(1'b1),
    .dout(grp_fu_321_p2)
);

fn1_srem_30ns_12s_11_34_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 11 ))
srem_30ns_12s_11_34_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_565_ap_start),
    .done(grp_fu_565_ap_done),
    .din0(grp_fu_565_p0),
    .din1(sub_ln22_fu_555_p2),
    .ce(1'b1),
    .dout(grp_fu_565_p2)
);

fn1_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_585_p0),
    .din1(grp_fu_585_p1),
    .ce(1'b1),
    .dout(grp_fu_585_p2)
);

fn1_mul_mul_11ns_9ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 20 ))
mul_mul_11ns_9ns_20_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_592_p0),
    .din1(grp_fu_592_p1),
    .ce(1'b1),
    .dout(grp_fu_592_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_reg_657 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv3_reg_609 <= grp_fu_155_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        icmp_ln20_1_reg_689 <= icmp_ln20_1_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_9_load_reg_642 <= p_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Result_1_reg_621 <= data_V_1_fu_168_p1[32'd63];
        val_1_reg_626 <= val_1_fu_286_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        p_Result_s_reg_667 <= data_V_fu_327_p1[32'd63];
        val_reg_672 <= val_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_158 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        result_V_7_reg_632 <= result_V_7_fu_299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        srem_ln21_reg_704 <= grp_fu_321_p2;
        sub_ln21_1_reg_699 <= sub_ln21_1_fu_543_p2;
        v_4_reg_694 <= v_4_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        v_13_reg_683 <= v_13_fu_478_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_144_p0 = reg_158;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_144_p0 = p_7;
    end else begin
        grp_fu_144_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_144_p1 = add_reg_657;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_144_p1 = p_7;
    end else begin
        grp_fu_144_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_321_ap_start = 1'b1;
    end else begin
        grp_fu_321_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_565_ap_start = 1'b1;
    end else begin
        grp_fu_565_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        p_15_ce0 = 1'b1;
    end else begin
        p_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_9_ce0 = 1'b1;
    end else begin
        p_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_fu_501_p2 = (zext_ln20_fu_498_p1 + 9'd1);

assign add_ln22_fu_311_p2 = ($signed(sext_ln22_1_fu_308_p1) + $signed(10'd783));

assign add_ln510_1_fu_212_p2 = ($signed(zext_ln510_1_fu_208_p1) + $signed(12'd3073));

assign add_ln510_fu_371_p2 = ($signed(zext_ln510_fu_367_p1) + $signed(12'd3073));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_return = grp_fu_592_p2;

assign data_V_1_fu_168_p1 = p_7;

assign data_V_fu_327_p1 = reg_158;

assign grp_fu_155_p0 = p_11;

assign grp_fu_321_p0 = $signed(result_V_7_reg_632);

assign grp_fu_321_p1 = add_ln22_fu_311_p2;

assign grp_fu_565_p0 = sub_ln21_1_reg_699;

assign grp_fu_585_p0 = grp_fu_585_p00;

assign grp_fu_585_p00 = p;

assign grp_fu_585_p1 = 33'd114913;

assign grp_fu_592_p0 = grp_fu_592_p00;

assign grp_fu_592_p00 = trunc_ln22_fu_574_p1;

assign grp_fu_592_p1 = grp_fu_592_p10;

assign grp_fu_592_p10 = v_4_reg_694;

assign icmp_ln20_1_fu_493_p2 = ((zext_ln20_1_fu_489_p1 == v_13_reg_683) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_484_p2 = ((v_13_reg_683 == 8'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_218_p3 = add_ln510_1_fu_212_p2[32'd11];

assign isNeg_fu_377_p3 = add_ln510_fu_371_p2[32'd11];

assign mantissa_1_fu_194_p4 = {{{{1'd1}, {tmp_13_fu_190_p1}}}, {1'd0}};

assign mantissa_fu_353_p4 = {{{{1'd1}, {tmp_11_fu_349_p1}}}, {1'd0}};

assign p_15_address0 = 64'd4;

assign p_9_address0 = 64'd4;

assign r_V_1_fu_417_p2 = zext_ln15_fu_363_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_407_p1;

assign r_V_2_fu_252_p2 = zext_ln15_1_fu_204_p1 >> sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_248_p1;

assign r_V_3_fu_258_p2 = zext_ln15_1_fu_204_p1 << sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_248_p1;

assign r_V_fu_411_p2 = zext_ln15_fu_363_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_407_p1;

assign result_V_2_fu_461_p2 = (8'd0 - val_reg_672);

assign result_V_6_fu_294_p2 = (8'd0 - val_1_reg_626);

assign result_V_7_fu_299_p3 = ((p_Result_1_reg_621[0:0] == 1'b1) ? result_V_6_fu_294_p2 : val_1_reg_626);

assign result_V_fu_466_p3 = ((p_Result_s_reg_667[0:0] == 1'b1) ? result_V_2_fu_461_p2 : val_reg_672);

assign select_ln20_fu_507_p3 = ((icmp_ln20_1_reg_689[0:0] == 1'b1) ? 9'd511 : 9'd0);

assign sext_ln1311_1_fu_232_p1 = $signed(sub_ln1311_1_fu_226_p2);

assign sext_ln1311_fu_391_p1 = $signed(sub_ln1311_fu_385_p2);

assign sext_ln22_1_fu_308_p1 = $signed(p_9_load_reg_642);

assign sext_ln22_2_fu_552_p1 = $signed(srem_ln21_reg_704);

assign sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_248_p1 = $unsigned(sh_prom_i_i_i_i_i22_cast_cast_cast_fu_244_p1);

assign sh_prom_i_i_i_i_i22_cast_cast_cast_fu_244_p1 = $signed(ush_1_fu_236_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_407_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_403_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_403_p1 = $signed(ush_fu_395_p3);

assign sub_ln1311_1_fu_226_p2 = (11'd1023 - tmp_12_fu_180_p4);

assign sub_ln1311_fu_385_p2 = (11'd1023 - tmp_10_fu_339_p4);

assign sub_ln19_fu_472_p2 = (trunc_ln19_fu_457_p1 - result_V_fu_466_p3);

assign sub_ln21_1_fu_543_p2 = (sub_ln21_fu_537_p2 - zext_ln13_1_fu_520_p1);

assign sub_ln21_fu_537_p2 = ($signed(29'd345253285) - $signed(zext_ln21_fu_533_p1));

assign sub_ln22_fu_555_p2 = ($signed(12'd787) - $signed(sext_ln22_2_fu_552_p1));

assign tmp_10_fu_339_p4 = {{data_V_fu_327_p1[62:52]}};

assign tmp_11_fu_349_p1 = data_V_fu_327_p1[51:0];

assign tmp_12_fu_180_p4 = {{data_V_1_fu_168_p1[62:52]}};

assign tmp_13_fu_190_p1 = data_V_1_fu_168_p1[51:0];

assign tmp_1_fu_435_p4 = {{r_V_1_fu_417_p2[60:53]}};

assign tmp_2_fu_524_p4 = {{grp_fu_585_p2[32:23]}};

assign tmp_6_fu_276_p4 = {{r_V_3_fu_258_p2[60:53]}};

assign tmp_9_fu_264_p3 = r_V_2_fu_252_p2[32'd53];

assign tmp_fu_423_p3 = r_V_fu_411_p2[32'd53];

assign trunc_ln19_fu_457_p1 = p_15_q0[7:0];

assign trunc_ln22_fu_574_p1 = grp_fu_565_p2[10:0];

assign ush_1_fu_236_p3 = ((isNeg_1_fu_218_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_232_p1 : add_ln510_1_fu_212_p2);

assign ush_fu_395_p3 = ((isNeg_fu_377_p3[0:0] == 1'b1) ? sext_ln1311_fu_391_p1 : add_ln510_fu_371_p2);

assign v_13_fu_478_p2 = (sub_ln19_fu_472_p2 + 8'd65);

assign v_4_fu_514_p2 = (select_ln20_fu_507_p3 & add_ln20_fu_501_p2);

assign val_1_fu_286_p3 = ((isNeg_1_fu_218_p3[0:0] == 1'b1) ? zext_ln662_1_fu_272_p1 : tmp_6_fu_276_p4);

assign val_fu_445_p3 = ((isNeg_fu_377_p3[0:0] == 1'b1) ? zext_ln662_fu_431_p1 : tmp_1_fu_435_p4);

assign zext_ln13_1_fu_520_p1 = v_4_fu_514_p2;

assign zext_ln15_1_fu_204_p1 = mantissa_1_fu_194_p4;

assign zext_ln15_fu_363_p1 = mantissa_fu_353_p4;

assign zext_ln20_1_fu_489_p1 = icmp_ln20_fu_484_p2;

assign zext_ln20_fu_498_p1 = p_11;

assign zext_ln21_fu_533_p1 = tmp_2_fu_524_p4;

assign zext_ln510_1_fu_208_p1 = tmp_12_fu_180_p4;

assign zext_ln510_fu_367_p1 = tmp_10_fu_339_p4;

assign zext_ln662_1_fu_272_p1 = tmp_9_fu_264_p3;

assign zext_ln662_fu_431_p1 = tmp_fu_423_p3;

endmodule //fn1
