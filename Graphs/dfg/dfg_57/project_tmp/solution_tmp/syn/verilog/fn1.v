// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.062500,HLS_SYN_LAT=142,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2051,HLS_SYN_LUT=2174,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_13,
        p_15,
        p_17_address0,
        p_17_ce0,
        p_17_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 143'd1;
parameter    ap_ST_fsm_state2 = 143'd2;
parameter    ap_ST_fsm_state3 = 143'd4;
parameter    ap_ST_fsm_state4 = 143'd8;
parameter    ap_ST_fsm_state5 = 143'd16;
parameter    ap_ST_fsm_state6 = 143'd32;
parameter    ap_ST_fsm_state7 = 143'd64;
parameter    ap_ST_fsm_state8 = 143'd128;
parameter    ap_ST_fsm_state9 = 143'd256;
parameter    ap_ST_fsm_state10 = 143'd512;
parameter    ap_ST_fsm_state11 = 143'd1024;
parameter    ap_ST_fsm_state12 = 143'd2048;
parameter    ap_ST_fsm_state13 = 143'd4096;
parameter    ap_ST_fsm_state14 = 143'd8192;
parameter    ap_ST_fsm_state15 = 143'd16384;
parameter    ap_ST_fsm_state16 = 143'd32768;
parameter    ap_ST_fsm_state17 = 143'd65536;
parameter    ap_ST_fsm_state18 = 143'd131072;
parameter    ap_ST_fsm_state19 = 143'd262144;
parameter    ap_ST_fsm_state20 = 143'd524288;
parameter    ap_ST_fsm_state21 = 143'd1048576;
parameter    ap_ST_fsm_state22 = 143'd2097152;
parameter    ap_ST_fsm_state23 = 143'd4194304;
parameter    ap_ST_fsm_state24 = 143'd8388608;
parameter    ap_ST_fsm_state25 = 143'd16777216;
parameter    ap_ST_fsm_state26 = 143'd33554432;
parameter    ap_ST_fsm_state27 = 143'd67108864;
parameter    ap_ST_fsm_state28 = 143'd134217728;
parameter    ap_ST_fsm_state29 = 143'd268435456;
parameter    ap_ST_fsm_state30 = 143'd536870912;
parameter    ap_ST_fsm_state31 = 143'd1073741824;
parameter    ap_ST_fsm_state32 = 143'd2147483648;
parameter    ap_ST_fsm_state33 = 143'd4294967296;
parameter    ap_ST_fsm_state34 = 143'd8589934592;
parameter    ap_ST_fsm_state35 = 143'd17179869184;
parameter    ap_ST_fsm_state36 = 143'd34359738368;
parameter    ap_ST_fsm_state37 = 143'd68719476736;
parameter    ap_ST_fsm_state38 = 143'd137438953472;
parameter    ap_ST_fsm_state39 = 143'd274877906944;
parameter    ap_ST_fsm_state40 = 143'd549755813888;
parameter    ap_ST_fsm_state41 = 143'd1099511627776;
parameter    ap_ST_fsm_state42 = 143'd2199023255552;
parameter    ap_ST_fsm_state43 = 143'd4398046511104;
parameter    ap_ST_fsm_state44 = 143'd8796093022208;
parameter    ap_ST_fsm_state45 = 143'd17592186044416;
parameter    ap_ST_fsm_state46 = 143'd35184372088832;
parameter    ap_ST_fsm_state47 = 143'd70368744177664;
parameter    ap_ST_fsm_state48 = 143'd140737488355328;
parameter    ap_ST_fsm_state49 = 143'd281474976710656;
parameter    ap_ST_fsm_state50 = 143'd562949953421312;
parameter    ap_ST_fsm_state51 = 143'd1125899906842624;
parameter    ap_ST_fsm_state52 = 143'd2251799813685248;
parameter    ap_ST_fsm_state53 = 143'd4503599627370496;
parameter    ap_ST_fsm_state54 = 143'd9007199254740992;
parameter    ap_ST_fsm_state55 = 143'd18014398509481984;
parameter    ap_ST_fsm_state56 = 143'd36028797018963968;
parameter    ap_ST_fsm_state57 = 143'd72057594037927936;
parameter    ap_ST_fsm_state58 = 143'd144115188075855872;
parameter    ap_ST_fsm_state59 = 143'd288230376151711744;
parameter    ap_ST_fsm_state60 = 143'd576460752303423488;
parameter    ap_ST_fsm_state61 = 143'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 143'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 143'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 143'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 143'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 143'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 143'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 143'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 143'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 143'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 143'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 143'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 143'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 143'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 143'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 143'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 143'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 143'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 143'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 143'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 143'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 143'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 143'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 143'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 143'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 143'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 143'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 143'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 143'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 143'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 143'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 143'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 143'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 143'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 143'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 143'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 143'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 143'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 143'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 143'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 143'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 143'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 143'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 143'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 143'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 143'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 143'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 143'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 143'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 143'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 143'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 143'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 143'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 143'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 143'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 143'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 143'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 143'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 143'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 143'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 143'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 143'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 143'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 143'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 143'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 143'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 143'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 143'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 143'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 143'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 143'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 143'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 143'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 143'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 143'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 143'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 143'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 143'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 143'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 143'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 143'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 143'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 143'd5575186299632655785383929568162090376495104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p;
input  [63:0] p_13;
input  [63:0] p_15;
output  [2:0] p_17_address0;
output   p_17_ce0;
input  [15:0] p_17_q0;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] p_17_address0;
reg p_17_ce0;

(* fsm_encoding = "none" *) reg   [142:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [63:0] sub_ln18_1_fu_137_p2;
reg   [63:0] sub_ln18_1_reg_338;
wire    ap_CS_fsm_state5;
wire  signed [31:0] grp_fu_320_p3;
reg  signed [31:0] add_ln19_reg_343;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state73;
wire   [15:0] grp_fu_146_p2;
reg   [15:0] sdiv_ln18_reg_369;
wire   [5:0] grp_fu_165_p2;
reg   [5:0] udiv_ln20_reg_374;
wire   [15:0] v_4_fu_174_p2;
reg   [15:0] v_4_reg_379;
wire    ap_CS_fsm_state74;
wire   [15:0] add_ln21_fu_223_p2;
reg   [15:0] add_ln21_reg_384;
wire   [0:0] icmp_ln21_fu_229_p2;
reg   [0:0] icmp_ln21_reg_389;
wire   [0:0] icmp_ln23_fu_235_p2;
reg   [0:0] icmp_ln23_reg_394;
wire    ap_CS_fsm_state75;
wire   [7:0] grp_fu_280_p2;
reg   [7:0] urem_ln22_reg_409;
wire    ap_CS_fsm_state142;
wire  signed [16:0] sext_ln19_fu_117_p1;
wire  signed [16:0] sub_ln19_fu_121_p2;
wire   [63:0] sub_ln18_fu_131_p2;
wire  signed [7:0] sext_ln20_1_fu_151_p0;
wire  signed [9:0] sext_ln20_1_fu_151_p1;
wire   [9:0] add_ln20_fu_155_p2;
wire   [9:0] grp_fu_165_p1;
wire   [15:0] trunc_ln18_fu_171_p1;
wire  signed [7:0] icmp_ln20_fu_180_p0;
wire  signed [7:0] sext_ln20_fu_185_p0;
wire   [0:0] icmp_ln20_fu_180_p2;
wire   [5:0] trunc_ln20_fu_188_p1;
wire   [5:0] select_ln20_fu_191_p3;
wire   [5:0] and_ln20_fu_199_p2;
wire   [6:0] zext_ln20_1_fu_205_p1;
wire   [6:0] sub_ln20_fu_209_p2;
wire  signed [15:0] sext_ln20_fu_185_p1;
wire   [16:0] zext_ln21_1_fu_219_p1;
wire  signed [16:0] sext_ln20_2_fu_215_p1;
wire   [28:0] or_ln_fu_244_p3;
wire  signed [29:0] sext_ln21_1_fu_251_p1;
wire   [30:0] zext_ln21_2_fu_255_p1;
wire  signed [30:0] sext_ln21_fu_241_p1;
wire   [30:0] xor_ln21_fu_259_p2;
wire   [9:0] or_ln1_fu_269_p3;
wire  signed [63:0] grp_fu_280_p0;
wire   [9:0] grp_fu_280_p1;
wire    ap_CS_fsm_state143;
wire   [7:0] v_fu_289_p1;
wire   [7:0] or_ln24_fu_292_p2;
wire   [29:0] or_ln2_fu_298_p3;
wire  signed [30:0] sext_ln24_fu_306_p1;
wire   [30:0] zext_ln21_fu_286_p1;
wire   [30:0] result_fu_310_p2;
wire   [16:0] grp_fu_320_p1;
wire   [8:0] grp_fu_320_p2;
wire    ap_CS_fsm_state4;
reg    grp_fu_146_ap_start;
wire    grp_fu_146_ap_done;
reg    grp_fu_165_ap_start;
wire    grp_fu_165_ap_done;
reg    grp_fu_280_ap_start;
wire    grp_fu_280_ap_done;
reg   [142:0] ap_NS_fsm;
wire   [14:0] grp_fu_165_p10;
wire   [63:0] grp_fu_280_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 143'd1;
end

fn1_sdiv_64ns_32s_16_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
sdiv_64ns_32s_16_68_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_146_ap_start),
    .done(grp_fu_146_ap_done),
    .din0(sub_ln18_1_reg_338),
    .din1(add_ln19_reg_343),
    .ce(1'b1),
    .dout(grp_fu_146_p2)
);

fn1_udiv_15s_10ns_6_19_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 6 ))
udiv_15s_10ns_6_19_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_165_ap_start),
    .done(grp_fu_165_ap_done),
    .din0(15'd29836),
    .din1(grp_fu_165_p1),
    .ce(1'b1),
    .dout(grp_fu_165_p2)
);

fn1_urem_64s_10ns_8_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 8 ))
urem_64s_10ns_8_68_seq_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_280_ap_start),
    .done(grp_fu_280_ap_done),
    .din0(grp_fu_280_p0),
    .din1(grp_fu_280_p1),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

fn1_mac_muladd_17s_17ns_9ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 32 ))
mac_muladd_17s_17ns_9ns_32_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln19_fu_121_p2),
    .din1(grp_fu_320_p1),
    .din2(grp_fu_320_p2),
    .ce(1'b1),
    .dout(grp_fu_320_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln19_reg_343 <= grp_fu_320_p3;
        sub_ln18_1_reg_338 <= sub_ln18_1_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        add_ln21_reg_384 <= add_ln21_fu_223_p2;
        icmp_ln21_reg_389 <= icmp_ln21_fu_229_p2;
        icmp_ln23_reg_394 <= icmp_ln23_fu_235_p2;
        v_4_reg_379 <= v_4_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        sdiv_ln18_reg_369 <= grp_fu_146_p2;
        udiv_ln20_reg_374 <= grp_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        urem_ln22_reg_409 <= grp_fu_280_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_146_ap_start = 1'b1;
    end else begin
        grp_fu_146_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_165_ap_start = 1'b1;
    end else begin
        grp_fu_165_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_280_ap_start = 1'b1;
    end else begin
        grp_fu_280_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        p_17_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        p_17_address0 = 64'd1;
    end else begin
        p_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        p_17_ce0 = 1'b1;
    end else begin
        p_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_fu_155_p2 = ($signed(sext_ln20_1_fu_151_p1) + $signed(10'd871));

assign add_ln21_fu_223_p2 = ($signed(sext_ln20_fu_185_p1) + $signed(16'd46138));

assign and_ln20_fu_199_p2 = (trunc_ln20_fu_188_p1 & select_ln20_fu_191_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_return = $signed(result_fu_310_p2);

assign grp_fu_165_p1 = grp_fu_165_p10;

assign grp_fu_165_p10 = add_ln20_fu_155_p2;

assign grp_fu_280_p0 = $signed(xor_ln21_fu_259_p2);

assign grp_fu_280_p1 = grp_fu_280_p10;

assign grp_fu_280_p10 = or_ln1_fu_269_p3;

assign grp_fu_320_p1 = 32'd38076;

assign grp_fu_320_p2 = 32'd133;

assign icmp_ln20_fu_180_p0 = p;

assign icmp_ln20_fu_180_p2 = ((icmp_ln20_fu_180_p0 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_229_p2 = ((zext_ln21_1_fu_219_p1 == sext_ln20_2_fu_215_p1) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_235_p2 = ((p_17_q0 == 16'd0) ? 1'b1 : 1'b0);

assign or_ln1_fu_269_p3 = {{9'd275}, {icmp_ln23_reg_394}};

assign or_ln24_fu_292_p2 = (v_fu_289_p1 | 8'd223);

assign or_ln2_fu_298_p3 = {{22'd2292445}, {or_ln24_fu_292_p2}};

assign or_ln_fu_244_p3 = {{28'd152639804}, {icmp_ln21_reg_389}};

assign result_fu_310_p2 = ($signed(sext_ln24_fu_306_p1) - $signed(zext_ln21_fu_286_p1));

assign select_ln20_fu_191_p3 = ((icmp_ln20_fu_180_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign sext_ln19_fu_117_p1 = $signed(p_17_q0);

assign sext_ln20_1_fu_151_p0 = p;

assign sext_ln20_1_fu_151_p1 = sext_ln20_1_fu_151_p0;

assign sext_ln20_2_fu_215_p1 = $signed(sub_ln20_fu_209_p2);

assign sext_ln20_fu_185_p0 = p;

assign sext_ln20_fu_185_p1 = sext_ln20_fu_185_p0;

assign sext_ln21_1_fu_251_p1 = $signed(or_ln_fu_244_p3);

assign sext_ln21_fu_241_p1 = $signed(add_ln21_reg_384);

assign sext_ln24_fu_306_p1 = $signed(or_ln2_fu_298_p3);

assign sub_ln18_1_fu_137_p2 = (sub_ln18_fu_131_p2 - p_15);

assign sub_ln18_fu_131_p2 = ($signed(64'd18446744073709508977) - $signed(p_13));

assign sub_ln19_fu_121_p2 = ($signed(17'd0) - $signed(sext_ln19_fu_117_p1));

assign sub_ln20_fu_209_p2 = (7'd0 - zext_ln20_1_fu_205_p1);

assign trunc_ln18_fu_171_p1 = sdiv_ln18_reg_369[15:0];

assign trunc_ln20_fu_188_p1 = udiv_ln20_reg_374[5:0];

assign v_4_fu_174_p2 = (trunc_ln18_fu_171_p1 ^ 16'd65535);

assign v_fu_289_p1 = urem_ln22_reg_409[7:0];

assign xor_ln21_fu_259_p2 = (zext_ln21_2_fu_255_p1 ^ sext_ln21_fu_241_p1);

assign zext_ln20_1_fu_205_p1 = and_ln20_fu_199_p2;

assign zext_ln21_1_fu_219_p1 = v_4_fu_174_p2;

assign zext_ln21_2_fu_255_p1 = $unsigned(sext_ln21_1_fu_251_p1);

assign zext_ln21_fu_286_p1 = v_4_reg_379;

endmodule //fn1
