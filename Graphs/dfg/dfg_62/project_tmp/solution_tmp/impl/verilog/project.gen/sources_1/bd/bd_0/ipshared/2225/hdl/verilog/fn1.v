// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=37,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=965,HLS_SYN_LUT=3121,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_11_address0,
        p_11_ce0,
        p_11_q0,
        p_13,
        p_15,
        p_17_address0,
        p_17_ce0,
        p_17_we0,
        p_17_d0,
        p_17_q0,
        p_17_address1,
        p_17_ce1,
        p_17_we1,
        p_17_d1,
        p_17_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_state6 = 38'd32;
parameter    ap_ST_fsm_state7 = 38'd64;
parameter    ap_ST_fsm_state8 = 38'd128;
parameter    ap_ST_fsm_state9 = 38'd256;
parameter    ap_ST_fsm_state10 = 38'd512;
parameter    ap_ST_fsm_state11 = 38'd1024;
parameter    ap_ST_fsm_state12 = 38'd2048;
parameter    ap_ST_fsm_state13 = 38'd4096;
parameter    ap_ST_fsm_state14 = 38'd8192;
parameter    ap_ST_fsm_state15 = 38'd16384;
parameter    ap_ST_fsm_state16 = 38'd32768;
parameter    ap_ST_fsm_state17 = 38'd65536;
parameter    ap_ST_fsm_state18 = 38'd131072;
parameter    ap_ST_fsm_state19 = 38'd262144;
parameter    ap_ST_fsm_state20 = 38'd524288;
parameter    ap_ST_fsm_state21 = 38'd1048576;
parameter    ap_ST_fsm_state22 = 38'd2097152;
parameter    ap_ST_fsm_state23 = 38'd4194304;
parameter    ap_ST_fsm_state24 = 38'd8388608;
parameter    ap_ST_fsm_state25 = 38'd16777216;
parameter    ap_ST_fsm_state26 = 38'd33554432;
parameter    ap_ST_fsm_state27 = 38'd67108864;
parameter    ap_ST_fsm_state28 = 38'd134217728;
parameter    ap_ST_fsm_state29 = 38'd268435456;
parameter    ap_ST_fsm_state30 = 38'd536870912;
parameter    ap_ST_fsm_state31 = 38'd1073741824;
parameter    ap_ST_fsm_state32 = 38'd2147483648;
parameter    ap_ST_fsm_state33 = 38'd4294967296;
parameter    ap_ST_fsm_state34 = 38'd8589934592;
parameter    ap_ST_fsm_state35 = 38'd17179869184;
parameter    ap_ST_fsm_state36 = 38'd34359738368;
parameter    ap_ST_fsm_state37 = 38'd68719476736;
parameter    ap_ST_fsm_state38 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p;
output  [3:0] p_11_address0;
output   p_11_ce0;
input  [31:0] p_11_q0;
input  [31:0] p_13;
input  [31:0] p_15;
output  [0:0] p_17_address0;
output   p_17_ce0;
output   p_17_we0;
output  [63:0] p_17_d0;
input  [63:0] p_17_q0;
output  [0:0] p_17_address1;
output   p_17_ce1;
output   p_17_we1;
output  [63:0] p_17_d1;
input  [63:0] p_17_q1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_11_ce0;

(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [31:0] p_13_read_read_fu_92_p2;
reg   [0:0] tmp_7_reg_675;
wire   [64:0] grp_fu_143_p2;
reg   [64:0] mul_ln22_reg_681;
wire    ap_CS_fsm_state2;
reg   [3:0] tmp_reg_686;
wire  signed [31:0] sext_ln22_2_fu_186_p1;
reg  signed [31:0] sext_ln22_2_reg_691;
wire    ap_CS_fsm_state3;
wire   [31:0] sub_ln22_1_fu_196_p2;
reg   [31:0] sub_ln22_1_reg_696;
wire    ap_CS_fsm_state4;
wire   [33:0] add_ln23_fu_225_p2;
reg   [33:0] add_ln23_reg_711;
reg   [31:0] data_V_reg_716;
wire    ap_CS_fsm_state5;
wire  signed [63:0] sext_ln23_4_fu_231_p1;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_124_p2;
reg   [31:0] add_reg_731;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_136_p1;
reg   [31:0] add1_reg_736;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln24_fu_253_p2;
reg   [0:0] icmp_ln24_reg_746;
wire    ap_CS_fsm_state21;
reg   [7:0] tmp_22_reg_751;
wire    ap_CS_fsm_state26;
wire   [22:0] tmp_23_fu_272_p1;
reg   [22:0] tmp_23_reg_757;
reg   [7:0] tmp_24_reg_762;
wire   [22:0] tmp_25_fu_290_p1;
reg   [22:0] tmp_25_reg_768;
wire   [0:0] isNeg_fu_303_p3;
reg   [0:0] isNeg_reg_773;
wire    ap_CS_fsm_state27;
wire   [8:0] ush_fu_320_p3;
reg   [8:0] ush_reg_778;
wire   [0:0] isNeg_1_fu_337_p3;
reg   [0:0] isNeg_1_reg_783;
wire   [8:0] ush_1_fu_354_p3;
reg   [8:0] ush_1_reg_788;
wire   [31:0] v_7_fu_465_p2;
reg   [31:0] v_7_reg_793;
wire    ap_CS_fsm_state28;
wire   [31:0] val_1_fu_516_p3;
reg   [31:0] val_1_reg_798;
wire   [31:0] add_ln25_fu_527_p2;
reg   [31:0] add_ln25_reg_803;
wire    ap_CS_fsm_state29;
reg   [0:0] p_Result_s_reg_808;
wire    ap_CS_fsm_state35;
reg   [7:0] tmp_26_reg_813;
wire   [22:0] tmp_27_fu_554_p1;
reg   [22:0] tmp_27_reg_819;
wire   [0:0] isNeg_2_fu_567_p3;
reg   [0:0] isNeg_2_reg_824;
wire    ap_CS_fsm_state36;
wire   [8:0] ush_2_fu_584_p3;
reg   [8:0] ush_2_reg_829;
wire   [63:0] val_2_fu_646_p3;
reg   [63:0] val_2_reg_834;
wire    ap_CS_fsm_state37;
wire   [31:0] grp_fu_124_p0;
wire   [31:0] grp_fu_129_p0;
wire    ap_CS_fsm_state30;
reg  signed [63:0] grp_fu_136_p0;
wire   [33:0] grp_fu_143_p1;
wire  signed [31:0] tmp_7_fu_149_p1;
wire   [64:0] sub_ln22_fu_167_p2;
wire   [3:0] tmp_8_fu_172_p4;
wire  signed [31:0] sext_ln22_1_fu_182_p1;
wire   [31:0] select_ln22_fu_189_p3;
wire   [31:0] select_ln22_1_fu_202_p3;
wire  signed [32:0] sext_ln23_fu_207_p1;
wire   [32:0] zext_ln23_fu_211_p1;
wire   [32:0] xor_ln23_fu_215_p2;
wire  signed [33:0] sext_ln23_1_fu_221_p1;
wire   [31:0] bitcast_ln22_fu_239_p1;
wire   [31:0] xor_ln22_fu_242_p2;
wire  signed [31:0] icmp_ln24_fu_253_p0;
wire   [31:0] data_V_1_fu_258_p1;
wire   [31:0] grp_fu_129_p2;
wire   [31:0] data_V_2_fu_276_p1;
wire   [8:0] zext_ln341_fu_294_p1;
wire   [8:0] add_ln341_fu_297_p2;
wire   [7:0] sub_ln1311_fu_311_p2;
wire  signed [8:0] sext_ln1311_fu_316_p1;
wire   [8:0] zext_ln341_1_fu_328_p1;
wire   [8:0] add_ln341_1_fu_331_p2;
wire   [7:0] sub_ln1311_1_fu_345_p2;
wire  signed [8:0] sext_ln1311_1_fu_350_p1;
wire   [24:0] mantissa_1_fu_371_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i83_cast_cast_cast_fu_384_p1;
wire   [78:0] zext_ln68_fu_380_p1;
wire   [78:0] sh_prom_i_i_i_i_i83_cast_cast_cast_cast_fu_387_p1;
wire   [78:0] r_V_fu_391_p2;
wire   [0:0] tmp_15_fu_403_p3;
wire   [78:0] r_V_1_fu_397_p2;
wire   [31:0] zext_ln662_fu_411_p1;
wire   [31:0] tmp_6_fu_415_p4;
wire   [1:0] zext_ln24_fu_432_p1;
wire   [0:0] icmp_ln24_1_fu_441_p2;
wire   [1:0] select_ln23_fu_447_p3;
wire   [1:0] xor_ln24_fu_435_p2;
wire   [1:0] and_ln23_fu_455_p2;
wire  signed [31:0] sext_ln23_3_fu_461_p1;
wire   [31:0] val_fu_425_p3;
wire   [24:0] mantissa_fu_362_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i113_cast_cast_cast_fu_475_p1;
wire   [78:0] zext_ln68_1_fu_471_p1;
wire   [78:0] sh_prom_i_i_i_i_i113_cast_cast_cast_cast_fu_478_p1;
wire   [78:0] r_V_2_fu_482_p2;
wire   [0:0] tmp_16_fu_494_p3;
wire   [78:0] r_V_3_fu_488_p2;
wire   [31:0] zext_ln662_1_fu_502_p1;
wire   [31:0] tmp_s_fu_506_p4;
wire   [31:0] sub_ln25_fu_523_p2;
wire   [31:0] grp_fu_133_p1;
wire   [31:0] data_V_3_fu_532_p1;
wire   [8:0] zext_ln341_2_fu_558_p1;
wire   [8:0] add_ln341_2_fu_561_p2;
wire   [7:0] sub_ln1311_2_fu_575_p2;
wire  signed [8:0] sext_ln1311_2_fu_580_p1;
wire   [24:0] mantissa_2_fu_592_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i140_cast_cast_cast_fu_605_p1;
wire   [110:0] zext_ln15_fu_601_p1;
wire   [110:0] sh_prom_i_i_i_i_i140_cast_cast_cast_cast_fu_608_p1;
wire   [110:0] r_V_4_fu_612_p2;
wire   [0:0] tmp_21_fu_624_p3;
wire   [110:0] r_V_5_fu_618_p2;
wire   [63:0] zext_ln662_2_fu_632_p1;
wire   [63:0] tmp_2_fu_636_p4;
wire    ap_CS_fsm_state38;
wire   [63:0] result_V_2_fu_653_p2;
reg   [37:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 38'd1;
end

fn1_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_124_p0),
    .din1(32'd1307764209),
    .ce(1'b1),
    .dout(grp_fu_124_p2)
);

fn1_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_129_p0),
    .din1(add1_reg_736),
    .ce(1'b1),
    .dout(grp_fu_129_p2)
);

fn1_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln25_reg_803),
    .ce(1'b1),
    .dout(grp_fu_133_p1)
);

fn1_sitofp_64s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64s_32_6_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_136_p0),
    .ce(1'b1),
    .dout(grp_fu_136_p1)
);

fn1_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_13),
    .din1(grp_fu_143_p1),
    .ce(1'b1),
    .dout(grp_fu_143_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add1_reg_736 <= grp_fu_136_p1;
        add_reg_731 <= grp_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln23_reg_711 <= add_ln23_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln25_reg_803 <= add_ln25_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_reg_716 <= p_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        icmp_ln24_reg_746 <= icmp_ln24_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        isNeg_1_reg_783 <= add_ln341_1_fu_331_p2[32'd8];
        isNeg_reg_773 <= add_ln341_fu_297_p2[32'd8];
        ush_1_reg_788 <= ush_1_fu_354_p3;
        ush_reg_778 <= ush_fu_320_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        isNeg_2_reg_824 <= add_ln341_2_fu_561_p2[32'd8];
        ush_2_reg_829 <= ush_2_fu_584_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln22_reg_681 <= grp_fu_143_p2;
        tmp_reg_686 <= {{grp_fu_143_p2[64:61]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Result_s_reg_808 <= data_V_3_fu_532_p1[32'd31];
        tmp_26_reg_813 <= {{data_V_3_fu_532_p1[30:23]}};
        tmp_27_reg_819 <= tmp_27_fu_554_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln22_2_reg_691 <= sext_ln22_2_fu_186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_reg_675 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln22_1_reg_696 <= sub_ln22_1_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_22_reg_751 <= {{data_V_1_fu_258_p1[30:23]}};
        tmp_23_reg_757 <= tmp_23_fu_272_p1;
        tmp_24_reg_762 <= {{data_V_2_fu_276_p1[30:23]}};
        tmp_25_reg_768 <= tmp_25_fu_290_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_7_reg_675 <= tmp_7_fu_149_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        v_7_reg_793 <= v_7_fu_465_p2;
        val_1_reg_798 <= val_1_fu_516_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        val_2_reg_834 <= val_2_fu_646_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_136_p0 = p_13_read_read_fu_92_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_136_p0 = sext_ln23_4_fu_231_p1;
    end else begin
        grp_fu_136_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_11_ce0 = 1'b1;
    end else begin
        p_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_225_p2 = ($signed(sext_ln23_1_fu_221_p1) + $signed(34'd367));

assign add_ln25_fu_527_p2 = (sub_ln25_fu_523_p2 + val_1_reg_798);

assign add_ln341_1_fu_331_p2 = ($signed(zext_ln341_1_fu_328_p1) + $signed(9'd385));

assign add_ln341_2_fu_561_p2 = ($signed(zext_ln341_2_fu_558_p1) + $signed(9'd385));

assign add_ln341_fu_297_p2 = ($signed(zext_ln341_fu_294_p1) + $signed(9'd385));

assign and_ln23_fu_455_p2 = (xor_ln24_fu_435_p2 & select_ln23_fu_447_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_return = ((p_Result_s_reg_808[0:0] == 1'b1) ? result_V_2_fu_653_p2 : val_2_reg_834);

assign bitcast_ln22_fu_239_p1 = add_reg_731;

assign data_V_1_fu_258_p1 = grp_fu_136_p1;

assign data_V_2_fu_276_p1 = grp_fu_129_p2;

assign data_V_3_fu_532_p1 = grp_fu_133_p1;

assign grp_fu_124_p0 = data_V_reg_716;

assign grp_fu_129_p0 = xor_ln22_fu_242_p2;

assign grp_fu_143_p1 = 65'd4526630612;

assign icmp_ln24_1_fu_441_p2 = ((p_15 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_253_p0 = p_13;

assign icmp_ln24_fu_253_p2 = ((icmp_ln24_fu_253_p0 == 32'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_337_p3 = add_ln341_1_fu_331_p2[32'd8];

assign isNeg_2_fu_567_p3 = add_ln341_2_fu_561_p2[32'd8];

assign isNeg_fu_303_p3 = add_ln341_fu_297_p2[32'd8];

assign mantissa_1_fu_371_p4 = {{{{1'd1}, {tmp_25_reg_768}}}, {1'd0}};

assign mantissa_2_fu_592_p4 = {{{{1'd1}, {tmp_27_reg_819}}}, {1'd0}};

assign mantissa_fu_362_p4 = {{{{1'd1}, {tmp_23_reg_757}}}, {1'd0}};

assign p_11_address0 = 64'd11;

assign p_13_read_read_fu_92_p2 = p_13;

assign p_17_address0 = 1'd0;

assign p_17_address1 = 1'd0;

assign p_17_ce0 = 1'b0;

assign p_17_ce1 = 1'b0;

assign p_17_d0 = 64'd0;

assign p_17_d1 = 64'd0;

assign p_17_we0 = 1'b0;

assign p_17_we1 = 1'b0;

assign r_V_1_fu_397_p2 = zext_ln68_fu_380_p1 << sh_prom_i_i_i_i_i83_cast_cast_cast_cast_fu_387_p1;

assign r_V_2_fu_482_p2 = zext_ln68_1_fu_471_p1 >> sh_prom_i_i_i_i_i113_cast_cast_cast_cast_fu_478_p1;

assign r_V_3_fu_488_p2 = zext_ln68_1_fu_471_p1 << sh_prom_i_i_i_i_i113_cast_cast_cast_cast_fu_478_p1;

assign r_V_4_fu_612_p2 = zext_ln15_fu_601_p1 >> sh_prom_i_i_i_i_i140_cast_cast_cast_cast_fu_608_p1;

assign r_V_5_fu_618_p2 = zext_ln15_fu_601_p1 << sh_prom_i_i_i_i_i140_cast_cast_cast_cast_fu_608_p1;

assign r_V_fu_391_p2 = zext_ln68_fu_380_p1 >> sh_prom_i_i_i_i_i83_cast_cast_cast_cast_fu_387_p1;

assign result_V_2_fu_653_p2 = (64'd0 - val_2_reg_834);

assign select_ln22_1_fu_202_p3 = ((tmp_7_reg_675[0:0] == 1'b1) ? sub_ln22_1_reg_696 : sext_ln22_2_reg_691);

assign select_ln22_fu_189_p3 = ((tmp_7_reg_675[0:0] == 1'b1) ? sext_ln22_1_fu_182_p1 : sext_ln22_2_fu_186_p1);

assign select_ln23_fu_447_p3 = ((icmp_ln24_1_fu_441_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign sext_ln1311_1_fu_350_p1 = $signed(sub_ln1311_1_fu_345_p2);

assign sext_ln1311_2_fu_580_p1 = $signed(sub_ln1311_2_fu_575_p2);

assign sext_ln1311_fu_316_p1 = $signed(sub_ln1311_fu_311_p2);

assign sext_ln22_1_fu_182_p1 = $signed(tmp_8_fu_172_p4);

assign sext_ln22_2_fu_186_p1 = $signed(tmp_reg_686);

assign sext_ln23_1_fu_221_p1 = $signed(xor_ln23_fu_215_p2);

assign sext_ln23_3_fu_461_p1 = $signed(and_ln23_fu_455_p2);

assign sext_ln23_4_fu_231_p1 = $signed(add_ln23_reg_711);

assign sext_ln23_fu_207_p1 = $signed(select_ln22_1_fu_202_p3);

assign sh_prom_i_i_i_i_i113_cast_cast_cast_cast_fu_478_p1 = $unsigned(sh_prom_i_i_i_i_i113_cast_cast_cast_fu_475_p1);

assign sh_prom_i_i_i_i_i113_cast_cast_cast_fu_475_p1 = $signed(ush_reg_778);

assign sh_prom_i_i_i_i_i140_cast_cast_cast_cast_fu_608_p1 = $unsigned(sh_prom_i_i_i_i_i140_cast_cast_cast_fu_605_p1);

assign sh_prom_i_i_i_i_i140_cast_cast_cast_fu_605_p1 = $signed(ush_2_reg_829);

assign sh_prom_i_i_i_i_i83_cast_cast_cast_cast_fu_387_p1 = $unsigned(sh_prom_i_i_i_i_i83_cast_cast_cast_fu_384_p1);

assign sh_prom_i_i_i_i_i83_cast_cast_cast_fu_384_p1 = $signed(ush_1_reg_788);

assign sub_ln1311_1_fu_345_p2 = (8'd127 - tmp_24_reg_762);

assign sub_ln1311_2_fu_575_p2 = (8'd127 - tmp_26_reg_813);

assign sub_ln1311_fu_311_p2 = (8'd127 - tmp_22_reg_751);

assign sub_ln22_1_fu_196_p2 = (32'd0 - select_ln22_fu_189_p3);

assign sub_ln22_fu_167_p2 = (65'd0 - mul_ln22_reg_681);

assign sub_ln25_fu_523_p2 = (p - v_7_reg_793);

assign tmp_15_fu_403_p3 = r_V_fu_391_p2[32'd24];

assign tmp_16_fu_494_p3 = r_V_2_fu_482_p2[32'd24];

assign tmp_21_fu_624_p3 = r_V_4_fu_612_p2[32'd24];

assign tmp_23_fu_272_p1 = data_V_1_fu_258_p1[22:0];

assign tmp_25_fu_290_p1 = data_V_2_fu_276_p1[22:0];

assign tmp_27_fu_554_p1 = data_V_3_fu_532_p1[22:0];

assign tmp_2_fu_636_p4 = {{r_V_5_fu_618_p2[87:24]}};

assign tmp_6_fu_415_p4 = {{r_V_1_fu_397_p2[55:24]}};

assign tmp_7_fu_149_p1 = p_13;

assign tmp_8_fu_172_p4 = {{sub_ln22_fu_167_p2[64:61]}};

assign tmp_s_fu_506_p4 = {{r_V_3_fu_488_p2[55:24]}};

assign ush_1_fu_354_p3 = ((isNeg_1_fu_337_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_350_p1 : add_ln341_1_fu_331_p2);

assign ush_2_fu_584_p3 = ((isNeg_2_fu_567_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_580_p1 : add_ln341_2_fu_561_p2);

assign ush_fu_320_p3 = ((isNeg_fu_303_p3[0:0] == 1'b1) ? sext_ln1311_fu_316_p1 : add_ln341_fu_297_p2);

assign v_7_fu_465_p2 = (val_fu_425_p3 & sext_ln23_3_fu_461_p1);

assign val_1_fu_516_p3 = ((isNeg_reg_773[0:0] == 1'b1) ? zext_ln662_1_fu_502_p1 : tmp_s_fu_506_p4);

assign val_2_fu_646_p3 = ((isNeg_2_reg_824[0:0] == 1'b1) ? zext_ln662_2_fu_632_p1 : tmp_2_fu_636_p4);

assign val_fu_425_p3 = ((isNeg_1_reg_783[0:0] == 1'b1) ? zext_ln662_fu_411_p1 : tmp_6_fu_415_p4);

assign xor_ln22_fu_242_p2 = (bitcast_ln22_fu_239_p1 ^ 32'd2147483648);

assign xor_ln23_fu_215_p2 = (zext_ln23_fu_211_p1 ^ sext_ln23_fu_207_p1);

assign xor_ln24_fu_435_p2 = (zext_ln24_fu_432_p1 ^ 2'd3);

assign zext_ln15_fu_601_p1 = mantissa_2_fu_592_p4;

assign zext_ln23_fu_211_p1 = p;

assign zext_ln24_fu_432_p1 = icmp_ln24_reg_746;

assign zext_ln341_1_fu_328_p1 = tmp_24_reg_762;

assign zext_ln341_2_fu_558_p1 = tmp_26_reg_813;

assign zext_ln341_fu_294_p1 = tmp_22_reg_751;

assign zext_ln662_1_fu_502_p1 = tmp_16_fu_494_p3;

assign zext_ln662_2_fu_632_p1 = tmp_21_fu_624_p3;

assign zext_ln662_fu_411_p1 = tmp_15_fu_403_p3;

assign zext_ln68_1_fu_471_p1 = mantissa_fu_362_p4;

assign zext_ln68_fu_380_p1 = mantissa_1_fu_371_p4;

endmodule //fn1
