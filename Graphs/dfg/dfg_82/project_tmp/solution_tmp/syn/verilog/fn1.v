// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=117,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3197,HLS_SYN_LUT=6059,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_address0,
        p_ce0,
        p_q0,
        p_9,
        p_11_address0,
        p_11_ce0,
        p_11_q0,
        p_13,
        p_17,
        ap_return
);

parameter    ap_ST_fsm_state1 = 118'd1;
parameter    ap_ST_fsm_state2 = 118'd2;
parameter    ap_ST_fsm_state3 = 118'd4;
parameter    ap_ST_fsm_state4 = 118'd8;
parameter    ap_ST_fsm_state5 = 118'd16;
parameter    ap_ST_fsm_state6 = 118'd32;
parameter    ap_ST_fsm_state7 = 118'd64;
parameter    ap_ST_fsm_state8 = 118'd128;
parameter    ap_ST_fsm_state9 = 118'd256;
parameter    ap_ST_fsm_state10 = 118'd512;
parameter    ap_ST_fsm_state11 = 118'd1024;
parameter    ap_ST_fsm_state12 = 118'd2048;
parameter    ap_ST_fsm_state13 = 118'd4096;
parameter    ap_ST_fsm_state14 = 118'd8192;
parameter    ap_ST_fsm_state15 = 118'd16384;
parameter    ap_ST_fsm_state16 = 118'd32768;
parameter    ap_ST_fsm_state17 = 118'd65536;
parameter    ap_ST_fsm_state18 = 118'd131072;
parameter    ap_ST_fsm_state19 = 118'd262144;
parameter    ap_ST_fsm_state20 = 118'd524288;
parameter    ap_ST_fsm_state21 = 118'd1048576;
parameter    ap_ST_fsm_state22 = 118'd2097152;
parameter    ap_ST_fsm_state23 = 118'd4194304;
parameter    ap_ST_fsm_state24 = 118'd8388608;
parameter    ap_ST_fsm_state25 = 118'd16777216;
parameter    ap_ST_fsm_state26 = 118'd33554432;
parameter    ap_ST_fsm_state27 = 118'd67108864;
parameter    ap_ST_fsm_state28 = 118'd134217728;
parameter    ap_ST_fsm_state29 = 118'd268435456;
parameter    ap_ST_fsm_state30 = 118'd536870912;
parameter    ap_ST_fsm_state31 = 118'd1073741824;
parameter    ap_ST_fsm_state32 = 118'd2147483648;
parameter    ap_ST_fsm_state33 = 118'd4294967296;
parameter    ap_ST_fsm_state34 = 118'd8589934592;
parameter    ap_ST_fsm_state35 = 118'd17179869184;
parameter    ap_ST_fsm_state36 = 118'd34359738368;
parameter    ap_ST_fsm_state37 = 118'd68719476736;
parameter    ap_ST_fsm_state38 = 118'd137438953472;
parameter    ap_ST_fsm_state39 = 118'd274877906944;
parameter    ap_ST_fsm_state40 = 118'd549755813888;
parameter    ap_ST_fsm_state41 = 118'd1099511627776;
parameter    ap_ST_fsm_state42 = 118'd2199023255552;
parameter    ap_ST_fsm_state43 = 118'd4398046511104;
parameter    ap_ST_fsm_state44 = 118'd8796093022208;
parameter    ap_ST_fsm_state45 = 118'd17592186044416;
parameter    ap_ST_fsm_state46 = 118'd35184372088832;
parameter    ap_ST_fsm_state47 = 118'd70368744177664;
parameter    ap_ST_fsm_state48 = 118'd140737488355328;
parameter    ap_ST_fsm_state49 = 118'd281474976710656;
parameter    ap_ST_fsm_state50 = 118'd562949953421312;
parameter    ap_ST_fsm_state51 = 118'd1125899906842624;
parameter    ap_ST_fsm_state52 = 118'd2251799813685248;
parameter    ap_ST_fsm_state53 = 118'd4503599627370496;
parameter    ap_ST_fsm_state54 = 118'd9007199254740992;
parameter    ap_ST_fsm_state55 = 118'd18014398509481984;
parameter    ap_ST_fsm_state56 = 118'd36028797018963968;
parameter    ap_ST_fsm_state57 = 118'd72057594037927936;
parameter    ap_ST_fsm_state58 = 118'd144115188075855872;
parameter    ap_ST_fsm_state59 = 118'd288230376151711744;
parameter    ap_ST_fsm_state60 = 118'd576460752303423488;
parameter    ap_ST_fsm_state61 = 118'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 118'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 118'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 118'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 118'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 118'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 118'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 118'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 118'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 118'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 118'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 118'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 118'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 118'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 118'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 118'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 118'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 118'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 118'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 118'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 118'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 118'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 118'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 118'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 118'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 118'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 118'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 118'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 118'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 118'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 118'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 118'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 118'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 118'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 118'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 118'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 118'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 118'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 118'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 118'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 118'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 118'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 118'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 118'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 118'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 118'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 118'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 118'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 118'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 118'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 118'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 118'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 118'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 118'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 118'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 118'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 118'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 118'd166153499473114484112975882535043072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] p_address0;
output   p_ce0;
input  [31:0] p_q0;
input  [63:0] p_9;
output  [1:0] p_11_address0;
output   p_11_ce0;
input  [31:0] p_11_q0;
input  [63:0] p_13;
input  [63:0] p_17;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_ce0;
reg p_11_ce0;

(* fsm_encoding = "none" *) reg   [117:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_190_p2;
reg   [31:0] reg_209;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state71;
wire   [63:0] sub_ln17_fu_226_p2;
reg   [63:0] sub_ln17_reg_823;
wire   [0:0] icmp_ln18_fu_232_p2;
reg   [0:0] icmp_ln18_reg_828;
wire    ap_CS_fsm_state4;
wire   [63:0] grp_fu_220_p2;
reg   [63:0] mul_ln15_reg_838;
wire    ap_CS_fsm_state5;
wire   [31:0] sub_ln16_fu_238_p2;
reg   [31:0] sub_ln16_reg_843;
reg   [0:0] tmp_18_reg_848;
reg   [0:0] tmp_20_reg_853;
reg   [1:0] tmp_2_reg_858;
reg   [0:0] tmp_21_reg_863;
reg   [2:0] tmp_3_reg_868;
reg   [1:0] tmp_4_reg_873;
reg   [0:0] tmp_22_reg_878;
reg   [2:0] tmp_5_reg_883;
reg   [0:0] tmp_23_reg_888;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_206_p1;
reg   [63:0] conv1_reg_898;
wire    ap_CS_fsm_state7;
reg   [10:0] tmp_24_reg_903;
wire    ap_CS_fsm_state14;
wire   [51:0] tmp_25_fu_346_p1;
reg   [51:0] tmp_25_reg_909;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
reg   [31:0] p_11_load_reg_929;
wire   [31:0] grp_fu_197_p1;
reg   [31:0] conv9_reg_934;
wire   [31:0] bitcast_ln18_fu_354_p1;
wire    ap_CS_fsm_state62;
wire   [31:0] grp_fu_194_p1;
reg   [31:0] conv7_reg_944;
wire   [31:0] data_V_fu_358_p1;
reg   [31:0] data_V_reg_949;
wire    ap_CS_fsm_state72;
wire   [22:0] tmp_27_fu_372_p1;
reg   [22:0] tmp_27_reg_954;
wire   [0:0] isNeg_1_fu_386_p3;
reg   [0:0] isNeg_1_reg_959;
wire   [8:0] ush_1_fu_404_p3;
reg   [8:0] ush_1_reg_964;
wire   [7:0] grp_fu_327_p2;
reg   [7:0] urem_ln15_reg_969;
wire    ap_CS_fsm_state73;
wire   [0:0] isNeg_fu_421_p3;
reg   [0:0] isNeg_reg_974;
wire   [11:0] ush_fu_438_p3;
reg   [11:0] ush_reg_979;
wire   [7:0] val_fu_500_p3;
reg   [7:0] val_reg_984;
wire   [8:0] sub_ln18_fu_604_p2;
reg   [8:0] sub_ln18_reg_990;
wire    ap_CS_fsm_state74;
wire  signed [31:0] sext_ln18_2_fu_610_p1;
wire    ap_CS_fsm_state75;
reg   [10:0] tmp_28_reg_1000;
wire    ap_CS_fsm_state80;
wire   [51:0] tmp_29_fu_628_p1;
reg   [51:0] tmp_29_reg_1006;
wire   [31:0] val_1_fu_721_p3;
reg   [31:0] val_1_reg_1011;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire   [0:0] v_fu_783_p2;
reg   [0:0] v_reg_1021;
wire    ap_CS_fsm_state117;
reg   [31:0] grp_fu_190_p0;
reg   [31:0] grp_fu_190_p1;
wire    ap_CS_fsm_state67;
wire   [31:0] grp_fu_194_p0;
wire    ap_CS_fsm_state8;
reg   [63:0] grp_fu_206_p0;
wire    ap_CS_fsm_state2;
wire  signed [63:0] grp_fu_220_p0;
wire  signed [63:0] icmp_ln18_fu_232_p0;
wire  signed [63:0] grp_fu_327_p1;
wire   [63:0] grp_fu_201_p2;
wire   [63:0] bitcast_ln16_fu_332_p1;
wire   [7:0] tmp_26_fu_362_p4;
wire   [8:0] zext_ln341_fu_376_p1;
wire   [8:0] add_ln341_fu_380_p2;
wire   [7:0] sub_ln1311_1_fu_394_p2;
wire  signed [8:0] sext_ln1311_1_fu_400_p1;
wire   [11:0] zext_ln510_fu_412_p1;
wire   [11:0] add_ln510_fu_415_p2;
wire   [10:0] sub_ln1311_fu_429_p2;
wire  signed [11:0] sext_ln1311_fu_434_p1;
wire   [24:0] mantissa_1_fu_446_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i22_cast_cast_cast_fu_459_p1;
wire   [54:0] zext_ln15_fu_455_p1;
wire   [54:0] sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_462_p1;
wire   [54:0] r_V_2_fu_466_p2;
wire   [0:0] tmp_7_fu_478_p3;
wire   [54:0] r_V_3_fu_472_p2;
wire   [7:0] zext_ln662_1_fu_486_p1;
wire   [7:0] tmp_8_fu_490_p4;
wire   [53:0] mantissa_fu_507_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_520_p1;
wire   [168:0] zext_ln68_fu_516_p1;
wire   [168:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_523_p1;
wire   [168:0] r_V_fu_527_p2;
wire   [0:0] tmp_fu_539_p3;
wire   [168:0] r_V_1_fu_533_p2;
wire   [7:0] zext_ln662_fu_547_p1;
wire   [7:0] tmp_1_fu_554_p4;
wire   [7:0] select_ln1312_fu_564_p3;
wire   [7:0] trunc_ln16_fu_551_p1;
wire   [0:0] p_Result_s_fu_577_p3;
wire   [7:0] result_V_2_fu_584_p2;
wire   [7:0] result_V_fu_589_p3;
wire   [7:0] v_15_fu_571_p2;
wire  signed [8:0] sext_ln18_fu_596_p1;
wire  signed [8:0] sext_ln18_1_fu_600_p1;
wire   [63:0] data_V_1_fu_614_p1;
wire   [53:0] mantissa_2_fu_632_p4;
wire   [11:0] zext_ln510_1_fu_645_p1;
wire   [11:0] add_ln510_1_fu_648_p2;
wire   [10:0] sub_ln1311_2_fu_662_p2;
wire   [0:0] isNeg_2_fu_654_p3;
wire  signed [11:0] sext_ln1311_2_fu_667_p1;
wire   [11:0] ush_2_fu_671_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i50_cast_cast_cast_fu_679_p1;
wire   [136:0] zext_ln68_1_fu_641_p1;
wire   [136:0] sh_prom_i_i_i_i_i50_cast_cast_cast_cast_fu_683_p1;
wire   [136:0] r_V_4_fu_687_p2;
wire   [0:0] tmp_15_fu_699_p3;
wire   [136:0] r_V_5_fu_693_p2;
wire   [31:0] zext_ln662_2_fu_707_p1;
wire   [31:0] tmp_s_fu_711_p4;
wire   [29:0] and_ln_fu_729_p19;
wire   [30:0] zext_ln19_fu_760_p1;
wire   [30:0] add_ln19_fu_764_p2;
wire   [30:0] grp_fu_774_p1;
wire   [30:0] grp_fu_774_p2;
wire   [30:0] trunc_ln19_fu_779_p1;
wire    ap_CS_fsm_state118;
wire   [16:0] or_ln_fu_792_p3;
wire  signed [17:0] sext_ln20_fu_799_p1;
wire   [17:0] zext_ln12_fu_789_p1;
wire   [17:0] result_fu_803_p2;
reg    grp_fu_327_ap_start;
wire    grp_fu_327_ap_done;
reg    grp_fu_774_ap_start;
wire    grp_fu_774_ap_done;
reg   [117:0] ap_NS_fsm;
wire   [31:0] grp_fu_774_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 118'd1;
end

fn1_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_190_p0),
    .din1(grp_fu_190_p1),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

fn1_uitofp_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .ce(1'b1),
    .dout(grp_fu_194_p1)
);

fn1_sitofp_64ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_13),
    .ce(1'b1),
    .dout(grp_fu_197_p1)
);

fn1_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_reg_898),
    .din1(64'd4712880224511580963),
    .ce(1'b1),
    .dout(grp_fu_201_p2)
);

fn1_sitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_6_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_206_p0),
    .ce(1'b1),
    .dout(grp_fu_206_p1)
);

fn1_mul_64s_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_64s_64s_64_5_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_220_p0),
    .din1(p_9),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

fn1_urem_64ns_64s_8_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 8 ))
urem_64ns_64s_8_68_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_327_ap_start),
    .done(grp_fu_327_ap_done),
    .din0(mul_ln15_reg_838),
    .din1(grp_fu_327_p1),
    .ce(1'b1),
    .dout(grp_fu_327_p2)
);

fn1_urem_32ns_31ns_31_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
urem_32ns_31ns_31_36_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_774_ap_start),
    .done(grp_fu_774_ap_done),
    .din0(val_1_reg_1011),
    .din1(grp_fu_774_p1),
    .ce(1'b1),
    .dout(grp_fu_774_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv1_reg_898 <= grp_fu_206_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        conv7_reg_944 <= grp_fu_194_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        conv9_reg_934 <= grp_fu_197_p1;
        p_11_load_reg_929 <= p_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        data_V_reg_949 <= data_V_fu_358_p1;
        isNeg_1_reg_959 <= add_ln341_fu_380_p2[32'd8];
        tmp_27_reg_954 <= tmp_27_fu_372_p1;
        ush_1_reg_964 <= ush_1_fu_404_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln18_reg_828 <= icmp_ln18_fu_232_p2;
        sub_ln17_reg_823 <= sub_ln17_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        isNeg_reg_974 <= add_ln510_fu_415_p2[32'd11];
        urem_ln15_reg_969 <= grp_fu_327_p2;
        ush_reg_979 <= ush_fu_438_p3;
        val_reg_984 <= val_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln15_reg_838 <= grp_fu_220_p2;
        sub_ln16_reg_843 <= sub_ln16_fu_238_p2;
        tmp_18_reg_848 <= p_q0[32'd29];
        tmp_20_reg_853 <= p_q0[32'd27];
        tmp_21_reg_863 <= p_q0[32'd21];
        tmp_22_reg_878 <= p_q0[32'd10];
        tmp_23_reg_888 <= p_q0[32'd3];
        tmp_2_reg_858 <= {{p_q0[25:24]}};
        tmp_3_reg_868 <= {{p_q0[19:17]}};
        tmp_4_reg_873 <= {{p_q0[15:14]}};
        tmp_5_reg_883 <= {{p_q0[7:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_209 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        sub_ln18_reg_990 <= sub_ln18_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_24_reg_903 <= {{bitcast_ln16_fu_332_p1[62:52]}};
        tmp_25_reg_909 <= tmp_25_fu_346_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        tmp_28_reg_1000 <= {{data_V_1_fu_614_p1[62:52]}};
        tmp_29_reg_1006 <= tmp_29_fu_628_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        v_reg_1021 <= v_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        val_1_reg_1011 <= val_1_fu_721_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_190_p0 = conv7_reg_944;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_190_p0 = bitcast_ln18_fu_354_p1;
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_190_p1 = reg_209;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_190_p1 = conv9_reg_934;
    end else begin
        grp_fu_190_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_206_p0 = sext_ln18_2_fu_610_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_206_p0 = sub_ln17_reg_823;
    end else begin
        grp_fu_206_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_327_ap_start = 1'b1;
    end else begin
        grp_fu_327_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_774_ap_start = 1'b1;
    end else begin
        grp_fu_774_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        p_11_ce0 = 1'b1;
    end else begin
        p_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_ce0 = 1'b1;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_764_p2 = (zext_ln19_fu_760_p1 + 31'd458);

assign add_ln341_fu_380_p2 = ($signed(zext_ln341_fu_376_p1) + $signed(9'd385));

assign add_ln510_1_fu_648_p2 = ($signed(zext_ln510_1_fu_645_p1) + $signed(12'd3073));

assign add_ln510_fu_415_p2 = ($signed(zext_ln510_fu_412_p1) + $signed(12'd3073));

assign and_ln_fu_729_p19 = {{{{{{{{{{{{{{{{{{tmp_18_reg_848}, {1'd0}}, {tmp_20_reg_853}}, {1'd0}}, {tmp_2_reg_858}}, {2'd0}}, {tmp_21_reg_863}}, {1'd0}}, {tmp_3_reg_868}}, {1'd0}}, {tmp_4_reg_873}}, {3'd0}}, {tmp_22_reg_878}}, {2'd0}}, {tmp_5_reg_883}}, {1'd0}}, {tmp_23_reg_888}}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_return = $signed(result_fu_803_p2);

assign bitcast_ln16_fu_332_p1 = grp_fu_201_p2;

assign bitcast_ln18_fu_354_p1 = p_11_load_reg_929;

assign data_V_1_fu_614_p1 = grp_fu_206_p1;

assign data_V_fu_358_p1 = reg_209;

assign grp_fu_194_p0 = icmp_ln18_reg_828;

assign grp_fu_220_p0 = (p_17 | 64'd18446744072646093116);

assign grp_fu_327_p1 = $signed(sub_ln16_reg_843);

assign grp_fu_774_p1 = grp_fu_774_p10;

assign grp_fu_774_p10 = add_ln19_fu_764_p2;

assign icmp_ln18_fu_232_p0 = p_9;

assign icmp_ln18_fu_232_p2 = ((icmp_ln18_fu_232_p0 == 64'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_386_p3 = add_ln341_fu_380_p2[32'd8];

assign isNeg_2_fu_654_p3 = add_ln510_1_fu_648_p2[32'd11];

assign isNeg_fu_421_p3 = add_ln510_fu_415_p2[32'd11];

assign mantissa_1_fu_446_p4 = {{{{1'd1}, {tmp_27_reg_954}}}, {1'd0}};

assign mantissa_2_fu_632_p4 = {{{{1'd1}, {tmp_29_reg_1006}}}, {1'd0}};

assign mantissa_fu_507_p4 = {{{{1'd1}, {tmp_25_reg_909}}}, {1'd0}};

assign or_ln_fu_792_p3 = {{16'd47330}, {v_reg_1021}};

assign p_11_address0 = 64'd0;

assign p_Result_s_fu_577_p3 = data_V_reg_949[32'd31];

assign p_address0 = 64'd0;

assign r_V_1_fu_533_p2 = zext_ln68_fu_516_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_523_p1;

assign r_V_2_fu_466_p2 = zext_ln15_fu_455_p1 >> sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_462_p1;

assign r_V_3_fu_472_p2 = zext_ln15_fu_455_p1 << sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_462_p1;

assign r_V_4_fu_687_p2 = zext_ln68_1_fu_641_p1 >> sh_prom_i_i_i_i_i50_cast_cast_cast_cast_fu_683_p1;

assign r_V_5_fu_693_p2 = zext_ln68_1_fu_641_p1 << sh_prom_i_i_i_i_i50_cast_cast_cast_cast_fu_683_p1;

assign r_V_fu_527_p2 = zext_ln68_fu_516_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_523_p1;

assign result_V_2_fu_584_p2 = (8'd0 - val_reg_984);

assign result_V_fu_589_p3 = ((p_Result_s_fu_577_p3[0:0] == 1'b1) ? result_V_2_fu_584_p2 : val_reg_984);

assign result_fu_803_p2 = ($signed(sext_ln20_fu_799_p1) - $signed(zext_ln12_fu_789_p1));

assign select_ln1312_fu_564_p3 = ((isNeg_reg_974[0:0] == 1'b1) ? zext_ln662_fu_547_p1 : tmp_1_fu_554_p4);

assign sext_ln1311_1_fu_400_p1 = $signed(sub_ln1311_1_fu_394_p2);

assign sext_ln1311_2_fu_667_p1 = $signed(sub_ln1311_2_fu_662_p2);

assign sext_ln1311_fu_434_p1 = $signed(sub_ln1311_fu_429_p2);

assign sext_ln18_1_fu_600_p1 = $signed(v_15_fu_571_p2);

assign sext_ln18_2_fu_610_p1 = $signed(sub_ln18_reg_990);

assign sext_ln18_fu_596_p1 = $signed(result_V_fu_589_p3);

assign sext_ln20_fu_799_p1 = $signed(or_ln_fu_792_p3);

assign sh_prom_i_i_i_i_i22_cast_cast_cast_cast_fu_462_p1 = $unsigned(sh_prom_i_i_i_i_i22_cast_cast_cast_fu_459_p1);

assign sh_prom_i_i_i_i_i22_cast_cast_cast_fu_459_p1 = $signed(ush_1_reg_964);

assign sh_prom_i_i_i_i_i50_cast_cast_cast_cast_fu_683_p1 = $unsigned(sh_prom_i_i_i_i_i50_cast_cast_cast_fu_679_p1);

assign sh_prom_i_i_i_i_i50_cast_cast_cast_fu_679_p1 = $signed(ush_2_fu_671_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_523_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_520_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_520_p1 = $signed(ush_reg_979);

assign sub_ln1311_1_fu_394_p2 = (8'd127 - tmp_26_fu_362_p4);

assign sub_ln1311_2_fu_662_p2 = (11'd1023 - tmp_28_reg_1000);

assign sub_ln1311_fu_429_p2 = (11'd1023 - tmp_24_reg_903);

assign sub_ln16_fu_238_p2 = (32'd707 - p_q0);

assign sub_ln17_fu_226_p2 = (64'd3 - p_17);

assign sub_ln18_fu_604_p2 = ($signed(sext_ln18_fu_596_p1) - $signed(sext_ln18_1_fu_600_p1));

assign tmp_15_fu_699_p3 = r_V_4_fu_687_p2[32'd53];

assign tmp_1_fu_554_p4 = {{r_V_1_fu_533_p2[60:53]}};

assign tmp_25_fu_346_p1 = bitcast_ln16_fu_332_p1[51:0];

assign tmp_26_fu_362_p4 = {{data_V_fu_358_p1[30:23]}};

assign tmp_27_fu_372_p1 = data_V_fu_358_p1[22:0];

assign tmp_29_fu_628_p1 = data_V_1_fu_614_p1[51:0];

assign tmp_7_fu_478_p3 = r_V_2_fu_466_p2[32'd24];

assign tmp_8_fu_490_p4 = {{r_V_3_fu_472_p2[31:24]}};

assign tmp_fu_539_p3 = r_V_fu_527_p2[32'd53];

assign tmp_s_fu_711_p4 = {{r_V_5_fu_693_p2[84:53]}};

assign trunc_ln16_fu_551_p1 = urem_ln15_reg_969[7:0];

assign trunc_ln19_fu_779_p1 = grp_fu_774_p2[30:0];

assign ush_1_fu_404_p3 = ((isNeg_1_fu_386_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_400_p1 : add_ln341_fu_380_p2);

assign ush_2_fu_671_p3 = ((isNeg_2_fu_654_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_667_p1 : add_ln510_1_fu_648_p2);

assign ush_fu_438_p3 = ((isNeg_fu_421_p3[0:0] == 1'b1) ? sext_ln1311_fu_434_p1 : add_ln510_fu_415_p2);

assign v_15_fu_571_p2 = (trunc_ln16_fu_551_p1 | select_ln1312_fu_564_p3);

assign v_fu_783_p2 = ((trunc_ln19_fu_779_p1 == 31'd0) ? 1'b1 : 1'b0);

assign val_1_fu_721_p3 = ((isNeg_2_fu_654_p3[0:0] == 1'b1) ? zext_ln662_2_fu_707_p1 : tmp_s_fu_711_p4);

assign val_fu_500_p3 = ((isNeg_1_reg_959[0:0] == 1'b1) ? zext_ln662_1_fu_486_p1 : tmp_8_fu_490_p4);

assign zext_ln12_fu_789_p1 = v_reg_1021;

assign zext_ln15_fu_455_p1 = mantissa_1_fu_446_p4;

assign zext_ln19_fu_760_p1 = and_ln_fu_729_p19;

assign zext_ln341_fu_376_p1 = tmp_26_fu_362_p4;

assign zext_ln510_1_fu_645_p1 = tmp_28_reg_1000;

assign zext_ln510_fu_412_p1 = tmp_24_reg_903;

assign zext_ln662_1_fu_486_p1 = tmp_7_fu_478_p3;

assign zext_ln662_2_fu_707_p1 = tmp_15_fu_699_p3;

assign zext_ln662_fu_547_p1 = tmp_fu_539_p3;

assign zext_ln68_1_fu_641_p1 = mantissa_2_fu_632_p4;

assign zext_ln68_fu_516_p1 = mantissa_fu_507_p4;

endmodule //fn1
