// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fn1_fn1,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4513,HLS_SYN_LUT=6344,HLS_VERSION=2020_2}" *)

module fn1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        p_5,
        p_7,
        p_11,
        p_13,
        ap_return
);

parameter    ap_ST_fsm_state1 = 107'd1;
parameter    ap_ST_fsm_state2 = 107'd2;
parameter    ap_ST_fsm_state3 = 107'd4;
parameter    ap_ST_fsm_state4 = 107'd8;
parameter    ap_ST_fsm_state5 = 107'd16;
parameter    ap_ST_fsm_state6 = 107'd32;
parameter    ap_ST_fsm_state7 = 107'd64;
parameter    ap_ST_fsm_state8 = 107'd128;
parameter    ap_ST_fsm_state9 = 107'd256;
parameter    ap_ST_fsm_state10 = 107'd512;
parameter    ap_ST_fsm_state11 = 107'd1024;
parameter    ap_ST_fsm_state12 = 107'd2048;
parameter    ap_ST_fsm_state13 = 107'd4096;
parameter    ap_ST_fsm_state14 = 107'd8192;
parameter    ap_ST_fsm_state15 = 107'd16384;
parameter    ap_ST_fsm_state16 = 107'd32768;
parameter    ap_ST_fsm_state17 = 107'd65536;
parameter    ap_ST_fsm_state18 = 107'd131072;
parameter    ap_ST_fsm_state19 = 107'd262144;
parameter    ap_ST_fsm_state20 = 107'd524288;
parameter    ap_ST_fsm_state21 = 107'd1048576;
parameter    ap_ST_fsm_state22 = 107'd2097152;
parameter    ap_ST_fsm_state23 = 107'd4194304;
parameter    ap_ST_fsm_state24 = 107'd8388608;
parameter    ap_ST_fsm_state25 = 107'd16777216;
parameter    ap_ST_fsm_state26 = 107'd33554432;
parameter    ap_ST_fsm_state27 = 107'd67108864;
parameter    ap_ST_fsm_state28 = 107'd134217728;
parameter    ap_ST_fsm_state29 = 107'd268435456;
parameter    ap_ST_fsm_state30 = 107'd536870912;
parameter    ap_ST_fsm_state31 = 107'd1073741824;
parameter    ap_ST_fsm_state32 = 107'd2147483648;
parameter    ap_ST_fsm_state33 = 107'd4294967296;
parameter    ap_ST_fsm_state34 = 107'd8589934592;
parameter    ap_ST_fsm_state35 = 107'd17179869184;
parameter    ap_ST_fsm_state36 = 107'd34359738368;
parameter    ap_ST_fsm_state37 = 107'd68719476736;
parameter    ap_ST_fsm_state38 = 107'd137438953472;
parameter    ap_ST_fsm_state39 = 107'd274877906944;
parameter    ap_ST_fsm_state40 = 107'd549755813888;
parameter    ap_ST_fsm_state41 = 107'd1099511627776;
parameter    ap_ST_fsm_state42 = 107'd2199023255552;
parameter    ap_ST_fsm_state43 = 107'd4398046511104;
parameter    ap_ST_fsm_state44 = 107'd8796093022208;
parameter    ap_ST_fsm_state45 = 107'd17592186044416;
parameter    ap_ST_fsm_state46 = 107'd35184372088832;
parameter    ap_ST_fsm_state47 = 107'd70368744177664;
parameter    ap_ST_fsm_state48 = 107'd140737488355328;
parameter    ap_ST_fsm_state49 = 107'd281474976710656;
parameter    ap_ST_fsm_state50 = 107'd562949953421312;
parameter    ap_ST_fsm_state51 = 107'd1125899906842624;
parameter    ap_ST_fsm_state52 = 107'd2251799813685248;
parameter    ap_ST_fsm_state53 = 107'd4503599627370496;
parameter    ap_ST_fsm_state54 = 107'd9007199254740992;
parameter    ap_ST_fsm_state55 = 107'd18014398509481984;
parameter    ap_ST_fsm_state56 = 107'd36028797018963968;
parameter    ap_ST_fsm_state57 = 107'd72057594037927936;
parameter    ap_ST_fsm_state58 = 107'd144115188075855872;
parameter    ap_ST_fsm_state59 = 107'd288230376151711744;
parameter    ap_ST_fsm_state60 = 107'd576460752303423488;
parameter    ap_ST_fsm_state61 = 107'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 107'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 107'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 107'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 107'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 107'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 107'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 107'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 107'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 107'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 107'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 107'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 107'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 107'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 107'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 107'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 107'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 107'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 107'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 107'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 107'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 107'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 107'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 107'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 107'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 107'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 107'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 107'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 107'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 107'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 107'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 107'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 107'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 107'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 107'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 107'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 107'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 107'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 107'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 107'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 107'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 107'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 107'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 107'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 107'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 107'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 107'd81129638414606681695789005144064;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p;
input  [7:0] p_5;
input  [7:0] p_7;
input  [7:0] p_11;
input  [15:0] p_13;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [106:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state41;
wire  signed [31:0] sext_ln21_fu_181_p1;
wire   [33:0] sub_ln22_fu_215_p2;
reg   [33:0] sub_ln22_reg_720;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
reg   [10:0] tmp_12_reg_730;
wire    ap_CS_fsm_state46;
wire   [51:0] tmp_13_fu_248_p1;
reg   [51:0] tmp_13_reg_736;
reg   [15:0] v_15_reg_741;
wire    ap_CS_fsm_state47;
wire   [15:0] select_ln1312_fu_351_p3;
reg   [15:0] select_ln1312_reg_746;
wire    ap_CS_fsm_state48;
wire   [16:0] grp_fu_371_p2;
reg   [16:0] sdiv_ln24_reg_761;
wire    ap_CS_fsm_state68;
wire   [5:0] grp_fu_169_p2;
reg   [5:0] urem_ln26_reg_766;
wire  signed [63:0] and_ln28_fu_413_p2;
reg  signed [63:0] and_ln28_reg_771;
wire    ap_CS_fsm_state69;
wire   [15:0] sub_ln29_fu_419_p2;
reg   [15:0] sub_ln29_reg_776;
wire   [0:0] icmp_ln29_fu_425_p2;
reg   [0:0] icmp_ln29_reg_781;
wire    ap_CS_fsm_state70;
wire   [63:0] grp_fu_434_p2;
reg   [63:0] mul_ln28_reg_791;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire   [63:0] grp_fu_149_p1;
reg   [63:0] conv_reg_801;
wire    ap_CS_fsm_state80;
wire   [63:0] grp_fu_144_p2;
reg   [63:0] dc_reg_806;
wire    ap_CS_fsm_state87;
reg   [0:0] p_Result_s_reg_811;
wire    ap_CS_fsm_state88;
wire  signed [63:0] val_fu_569_p3;
reg  signed [63:0] val_reg_816;
reg   [0:0] tmp_9_reg_821;
wire    ap_CS_fsm_state89;
wire   [128:0] grp_fu_588_p2;
reg   [128:0] mul_ln30_1_reg_832;
wire    ap_CS_fsm_state93;
reg   [49:0] tmp_11_reg_837;
wire   [128:0] sub_ln30_2_fu_604_p2;
reg   [128:0] sub_ln30_2_reg_843;
wire    ap_CS_fsm_state94;
wire   [49:0] select_ln30_2_fu_630_p3;
reg   [49:0] select_ln30_2_reg_848;
wire    ap_CS_fsm_state95;
wire   [49:0] sub_ln30_1_fu_636_p2;
reg   [49:0] sub_ln30_1_reg_853;
wire    ap_CS_fsm_state96;
wire   [56:0] grp_fu_654_p2;
reg   [56:0] mul_ln30_reg_868;
wire    ap_CS_fsm_state100;
wire   [57:0] add_ln30_fu_683_p2;
reg   [57:0] add_ln30_reg_873;
wire    ap_CS_fsm_state101;
wire  signed [63:0] sext_ln30_5_fu_689_p1;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state81;
wire   [63:0] grp_fu_149_p0;
reg  signed [63:0] grp_fu_152_p0;
wire  signed [7:0] sext_ln26_2_fu_155_p0;
wire  signed [16:0] sext_ln26_2_fu_155_p1;
wire   [16:0] add_ln26_fu_159_p2;
wire  signed [63:0] grp_fu_169_p0;
wire   [16:0] grp_fu_169_p1;
wire   [4:0] grp_fu_175_p1;
wire  signed [7:0] sext_ln21_fu_181_p0;
wire   [7:0] grp_fu_175_p2;
wire  signed [28:0] sext_ln22_fu_186_p1;
wire   [28:0] or_ln22_fu_190_p2;
wire  signed [31:0] sext_ln22_3_fu_196_p1;
wire   [32:0] or_ln_fu_200_p3;
wire  signed [7:0] sext_ln22_2_fu_212_p0;
wire  signed [33:0] sext_ln22_1_fu_208_p1;
wire  signed [33:0] sext_ln22_2_fu_212_p1;
wire  signed [63:0] sext_ln22_4_fu_221_p1;
wire   [63:0] grp_fu_228_p0;
wire   [65:0] grp_fu_228_p1;
wire   [63:0] grp_fu_152_p1;
wire   [63:0] bitcast_ln24_fu_234_p1;
wire   [99:0] grp_fu_228_p2;
wire   [53:0] mantissa_fu_262_p4;
wire   [11:0] zext_ln510_fu_275_p1;
wire   [11:0] add_ln510_fu_278_p2;
wire   [10:0] sub_ln1311_fu_292_p2;
wire   [0:0] isNeg_fu_284_p3;
wire  signed [11:0] sext_ln1311_fu_297_p1;
wire   [11:0] ush_fu_301_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_309_p1;
wire   [120:0] zext_ln68_fu_271_p1;
wire   [120:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_313_p1;
wire   [120:0] r_V_fu_317_p2;
wire   [0:0] tmp_fu_329_p3;
wire   [120:0] r_V_1_fu_323_p2;
wire   [15:0] zext_ln24_1_fu_337_p1;
wire   [15:0] tmp_1_fu_341_p4;
wire   [16:0] zext_ln24_fu_359_p1;
wire   [16:0] grp_fu_371_p0;
wire   [16:0] grp_fu_371_p1;
wire  signed [17:0] sext_ln24_fu_381_p1;
wire   [17:0] zext_ln14_fu_377_p1;
wire   [17:0] sub_ln24_fu_384_p2;
wire  signed [7:0] sext_ln26_1_fu_394_p0;
wire   [5:0] trunc_ln27_fu_397_p1;
wire  signed [63:0] sext_ln26_fu_390_p1;
wire   [63:0] zext_ln25_fu_400_p1;
wire  signed [7:0] sext_ln28_fu_410_p0;
wire   [63:0] v_9_fu_404_p2;
wire  signed [63:0] sext_ln28_fu_410_p1;
wire  signed [15:0] sext_ln26_1_fu_394_p1;
wire   [15:0] grp_fu_434_p1;
wire   [63:0] select_ln29_fu_439_p3;
wire   [63:0] data_V_fu_452_p1;
wire   [51:0] tmp_15_fu_473_p1;
wire   [53:0] mantissa_1_fu_477_p4;
wire   [10:0] tmp_14_fu_463_p4;
wire   [11:0] zext_ln510_1_fu_491_p1;
wire   [11:0] add_ln510_1_fu_495_p2;
wire   [10:0] sub_ln1311_1_fu_509_p2;
wire   [0:0] isNeg_1_fu_501_p3;
wire  signed [11:0] sext_ln1311_1_fu_515_p1;
wire   [11:0] ush_1_fu_519_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i24_cast_cast_cast_fu_527_p1;
wire   [168:0] zext_ln15_fu_487_p1;
wire   [168:0] sh_prom_i_i_i_i_i24_cast_cast_cast_cast_fu_531_p1;
wire   [168:0] r_V_2_fu_535_p2;
wire   [0:0] tmp_8_fu_547_p3;
wire   [168:0] r_V_3_fu_541_p2;
wire   [63:0] zext_ln662_fu_555_p1;
wire   [63:0] tmp_6_fu_559_p4;
wire   [65:0] grp_fu_588_p1;
wire   [49:0] tmp_10_fu_609_p4;
wire   [49:0] select_ln30_1_fu_618_p3;
wire   [49:0] sub_ln30_3_fu_624_p2;
wire  signed [49:0] select_ln30_fu_645_p3;
wire   [56:0] xor_ln30_fu_660_p2;
wire   [12:0] zext_ln30_fu_669_p1;
wire   [12:0] sub_ln30_fu_673_p2;
wire  signed [57:0] sext_ln30_3_fu_679_p1;
wire  signed [57:0] sext_ln30_2_fu_665_p1;
reg    grp_fu_169_ap_start;
wire    grp_fu_169_ap_done;
reg    grp_fu_175_ap_start;
wire    grp_fu_175_ap_done;
reg    grp_fu_371_ap_start;
wire    grp_fu_371_ap_done;
wire    ap_CS_fsm_state107;
reg   [106:0] ap_NS_fsm;
wire   [99:0] grp_fu_228_p00;
wire   [63:0] grp_fu_434_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 107'd1;
end

fn1_dsub_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd14044094290997388032),
    .din1(conv_reg_801),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

fn1_uitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
uitodp_64ns_64_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_149_p0),
    .ce(1'b1),
    .dout(grp_fu_149_p1)
);

fn1_sitodp_64s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64s_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_152_p0),
    .ce(1'b1),
    .dout(grp_fu_152_p1)
);

fn1_urem_64s_17ns_6_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 6 ))
urem_64s_17ns_6_68_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_169_ap_start),
    .done(grp_fu_169_ap_done),
    .din0(grp_fu_169_p0),
    .din1(grp_fu_169_p1),
    .ce(1'b1),
    .dout(grp_fu_169_p2)
);

fn1_srem_8s_5ns_8_12_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
srem_8s_5ns_8_12_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_175_ap_start),
    .done(grp_fu_175_ap_done),
    .din0(p_7),
    .din1(grp_fu_175_p1),
    .ce(1'b1),
    .dout(grp_fu_175_p2)
);

fn1_mul_64ns_66ns_100_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 100 ))
mul_64ns_66ns_100_5_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_228_p0),
    .din1(grp_fu_228_p1),
    .ce(1'b1),
    .dout(grp_fu_228_p2)
);

fn1_sdiv_17ns_17ns_17_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
sdiv_17ns_17ns_17_21_seq_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_371_ap_start),
    .done(grp_fu_371_ap_done),
    .din0(grp_fu_371_p0),
    .din1(grp_fu_371_p1),
    .ce(1'b1),
    .dout(grp_fu_371_p2)
);

fn1_mul_64s_16ns_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 64 ))
mul_64s_16ns_64_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(and_ln28_reg_771),
    .din1(grp_fu_434_p1),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

fn1_mul_64s_66ns_129_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64s_66ns_129_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(val_reg_816),
    .din1(grp_fu_588_p1),
    .ce(1'b1),
    .dout(grp_fu_588_p2)
);

fn1_mul_50s_8s_57_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 57 ))
mul_50s_8s_57_5_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln30_fu_645_p3),
    .din1(p),
    .ce(1'b1),
    .dout(grp_fu_654_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        add_ln30_reg_873 <= add_ln30_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        and_ln28_reg_771 <= and_ln28_fu_413_p2;
        icmp_ln29_reg_781 <= icmp_ln29_fu_425_p2;
        sub_ln29_reg_776 <= sub_ln29_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        conv_reg_801 <= grp_fu_149_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        dc_reg_806 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        mul_ln28_reg_791 <= grp_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        mul_ln30_1_reg_832 <= grp_fu_588_p2;
        tmp_11_reg_837 <= {{grp_fu_588_p2[128:79]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        mul_ln30_reg_868 <= grp_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        p_Result_s_reg_811 <= data_V_fu_452_p1[32'd63];
        tmp_9_reg_821 <= val_fu_569_p3[32'd63];
        val_reg_816 <= val_fu_569_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        sdiv_ln24_reg_761 <= grp_fu_371_p2;
        urem_ln26_reg_766 <= grp_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        select_ln1312_reg_746 <= select_ln1312_fu_351_p3;
        v_15_reg_741 <= {{grp_fu_228_p2[99:84]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        select_ln30_2_reg_848 <= select_ln30_2_fu_630_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        sub_ln22_reg_720 <= sub_ln22_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_s_reg_811 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        sub_ln30_1_reg_853 <= sub_ln30_1_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_821 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
        sub_ln30_2_reg_843 <= sub_ln30_2_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_12_reg_730 <= {{bitcast_ln24_fu_234_p1[62:52]}};
        tmp_13_reg_736 <= tmp_13_fu_248_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_152_p0 = sext_ln30_5_fu_689_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_152_p0 = sext_ln21_fu_181_p1;
    end else begin
        grp_fu_152_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_169_ap_start = 1'b1;
    end else begin
        grp_fu_169_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_175_ap_start = 1'b1;
    end else begin
        grp_fu_175_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_371_ap_start = 1'b1;
    end else begin
        grp_fu_371_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_fu_159_p2 = ($signed(sext_ln26_2_fu_155_p1) + $signed(17'd91383));

assign add_ln30_fu_683_p2 = ($signed(sext_ln30_3_fu_679_p1) + $signed(sext_ln30_2_fu_665_p1));

assign add_ln510_1_fu_495_p2 = ($signed(zext_ln510_1_fu_491_p1) + $signed(12'd3073));

assign add_ln510_fu_278_p2 = ($signed(zext_ln510_fu_275_p1) + $signed(12'd3073));

assign and_ln28_fu_413_p2 = (v_9_fu_404_p2 & sext_ln28_fu_410_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_return = grp_fu_152_p1;

assign bitcast_ln24_fu_234_p1 = grp_fu_152_p1;

assign data_V_fu_452_p1 = dc_reg_806;

assign grp_fu_149_p0 = (select_ln29_fu_439_p3 & mul_ln28_reg_791);

assign grp_fu_169_p0 = $signed(add_ln26_fu_159_p2);

assign grp_fu_169_p1 = 64'd42777;

assign grp_fu_175_p1 = 8'd13;

assign grp_fu_228_p0 = grp_fu_228_p00;

assign grp_fu_228_p00 = $unsigned(sext_ln22_4_fu_221_p1);

assign grp_fu_228_p1 = 100'd19184768986919821308;

assign grp_fu_371_p0 = select_ln1312_reg_746;

assign grp_fu_371_p1 = (17'd203 - zext_ln24_fu_359_p1);

assign grp_fu_434_p1 = grp_fu_434_p10;

assign grp_fu_434_p10 = sub_ln29_reg_776;

assign grp_fu_588_p1 = 129'd29424276386472987751;

assign icmp_ln29_fu_425_p2 = ((p_13 == 16'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_501_p3 = add_ln510_1_fu_495_p2[32'd11];

assign isNeg_fu_284_p3 = add_ln510_fu_278_p2[32'd11];

assign mantissa_1_fu_477_p4 = {{{{1'd1}, {tmp_15_fu_473_p1}}}, {1'd0}};

assign mantissa_fu_262_p4 = {{{{1'd1}, {tmp_13_reg_736}}}, {1'd0}};

assign or_ln22_fu_190_p2 = (sext_ln22_fu_186_p1 | 29'd316461774);

assign or_ln_fu_200_p3 = {{1'd1}, {sext_ln22_3_fu_196_p1}};

assign r_V_1_fu_323_p2 = zext_ln68_fu_271_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_313_p1;

assign r_V_2_fu_535_p2 = zext_ln15_fu_487_p1 >> sh_prom_i_i_i_i_i24_cast_cast_cast_cast_fu_531_p1;

assign r_V_3_fu_541_p2 = zext_ln15_fu_487_p1 << sh_prom_i_i_i_i_i24_cast_cast_cast_cast_fu_531_p1;

assign r_V_fu_317_p2 = zext_ln68_fu_271_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_313_p1;

assign select_ln1312_fu_351_p3 = ((isNeg_fu_284_p3[0:0] == 1'b1) ? zext_ln24_1_fu_337_p1 : tmp_1_fu_341_p4);

assign select_ln29_fu_439_p3 = ((icmp_ln29_reg_781[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln30_1_fu_618_p3 = ((tmp_9_reg_821[0:0] == 1'b1) ? tmp_10_fu_609_p4 : tmp_11_reg_837);

assign select_ln30_2_fu_630_p3 = ((tmp_9_reg_821[0:0] == 1'b1) ? sub_ln30_3_fu_624_p2 : tmp_11_reg_837);

assign select_ln30_fu_645_p3 = ((p_Result_s_reg_811[0:0] == 1'b1) ? sub_ln30_1_reg_853 : select_ln30_2_reg_848);

assign sext_ln1311_1_fu_515_p1 = $signed(sub_ln1311_1_fu_509_p2);

assign sext_ln1311_fu_297_p1 = $signed(sub_ln1311_fu_292_p2);

assign sext_ln21_fu_181_p0 = p;

assign sext_ln21_fu_181_p1 = sext_ln21_fu_181_p0;

assign sext_ln22_1_fu_208_p1 = $signed(or_ln_fu_200_p3);

assign sext_ln22_2_fu_212_p0 = p_11;

assign sext_ln22_2_fu_212_p1 = sext_ln22_2_fu_212_p0;

assign sext_ln22_3_fu_196_p1 = $signed(or_ln22_fu_190_p2);

assign sext_ln22_4_fu_221_p1 = $signed(sub_ln22_reg_720);

assign sext_ln22_fu_186_p1 = $signed(grp_fu_175_p2);

assign sext_ln24_fu_381_p1 = $signed(sdiv_ln24_reg_761);

assign sext_ln26_1_fu_394_p0 = p_11;

assign sext_ln26_1_fu_394_p1 = sext_ln26_1_fu_394_p0;

assign sext_ln26_2_fu_155_p0 = p_11;

assign sext_ln26_2_fu_155_p1 = sext_ln26_2_fu_155_p0;

assign sext_ln26_fu_390_p1 = $signed(sub_ln24_fu_384_p2);

assign sext_ln28_fu_410_p0 = p_7;

assign sext_ln28_fu_410_p1 = sext_ln28_fu_410_p0;

assign sext_ln30_2_fu_665_p1 = $signed(xor_ln30_fu_660_p2);

assign sext_ln30_3_fu_679_p1 = $signed(sub_ln30_fu_673_p2);

assign sext_ln30_5_fu_689_p1 = $signed(add_ln30_reg_873);

assign sh_prom_i_i_i_i_i24_cast_cast_cast_cast_fu_531_p1 = $unsigned(sh_prom_i_i_i_i_i24_cast_cast_cast_fu_527_p1);

assign sh_prom_i_i_i_i_i24_cast_cast_cast_fu_527_p1 = $signed(ush_1_fu_519_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_313_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_309_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_309_p1 = $signed(ush_fu_301_p3);

assign sub_ln1311_1_fu_509_p2 = (11'd1023 - tmp_14_fu_463_p4);

assign sub_ln1311_fu_292_p2 = (11'd1023 - tmp_12_reg_730);

assign sub_ln22_fu_215_p2 = ($signed(sext_ln22_1_fu_208_p1) - $signed(sext_ln22_2_fu_212_p1));

assign sub_ln24_fu_384_p2 = ($signed(sext_ln24_fu_381_p1) - $signed(zext_ln14_fu_377_p1));

assign sub_ln29_fu_419_p2 = ($signed(16'd42772) - $signed(sext_ln26_1_fu_394_p1));

assign sub_ln30_1_fu_636_p2 = (50'd0 - select_ln30_2_fu_630_p3);

assign sub_ln30_2_fu_604_p2 = (129'd0 - mul_ln30_1_reg_832);

assign sub_ln30_3_fu_624_p2 = (50'd0 - select_ln30_1_fu_618_p3);

assign sub_ln30_fu_673_p2 = ($signed(13'd5116) - $signed(zext_ln30_fu_669_p1));

assign tmp_10_fu_609_p4 = {{sub_ln30_2_reg_843[128:79]}};

assign tmp_13_fu_248_p1 = bitcast_ln24_fu_234_p1[51:0];

assign tmp_14_fu_463_p4 = {{data_V_fu_452_p1[62:52]}};

assign tmp_15_fu_473_p1 = data_V_fu_452_p1[51:0];

assign tmp_1_fu_341_p4 = {{r_V_1_fu_323_p2[68:53]}};

assign tmp_6_fu_559_p4 = {{r_V_3_fu_541_p2[116:53]}};

assign tmp_8_fu_547_p3 = r_V_2_fu_535_p2[32'd53];

assign tmp_fu_329_p3 = r_V_fu_317_p2[32'd53];

assign trunc_ln27_fu_397_p1 = urem_ln26_reg_766[5:0];

assign ush_1_fu_519_p3 = ((isNeg_1_fu_501_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_515_p1 : add_ln510_1_fu_495_p2);

assign ush_fu_301_p3 = ((isNeg_fu_284_p3[0:0] == 1'b1) ? sext_ln1311_fu_297_p1 : add_ln510_fu_278_p2);

assign v_9_fu_404_p2 = sext_ln26_fu_390_p1 << zext_ln25_fu_400_p1;

assign val_fu_569_p3 = ((isNeg_1_fu_501_p3[0:0] == 1'b1) ? zext_ln662_fu_555_p1 : tmp_6_fu_559_p4);

assign xor_ln30_fu_660_p2 = (mul_ln30_reg_868 ^ 57'd144115188075855871);

assign zext_ln14_fu_377_p1 = p_13;

assign zext_ln15_fu_487_p1 = mantissa_1_fu_477_p4;

assign zext_ln24_1_fu_337_p1 = tmp_fu_329_p3;

assign zext_ln24_fu_359_p1 = v_15_reg_741;

assign zext_ln25_fu_400_p1 = trunc_ln27_fu_397_p1;

assign zext_ln30_fu_669_p1 = p_5;

assign zext_ln510_1_fu_491_p1 = tmp_14_fu_463_p4;

assign zext_ln510_fu_275_p1 = tmp_12_reg_730;

assign zext_ln662_fu_555_p1 = tmp_8_fu_547_p3;

assign zext_ln68_fu_271_p1 = mantissa_fu_262_p4;

endmodule //fn1
